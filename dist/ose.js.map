{"version":3,"file":"ose.js","sources":["../node_modules/tslib/tslib.es6.js","../../src/module/actor/data-model-classes/data-model-character-encumbrance.ts","../../src/module/actor/data-model-classes/data-model-character-encumbrance-basic.ts","../../src/module/actor/data-model-classes/data-model-character-encumbrance-complete.ts","../../src/module/actor/data-model-classes/data-model-character-encumbrance-detailed.ts","../../src/module/actor/data-model-classes/data-model-character-encumbrance-disabled.ts","../../src/module/actor/data-model-classes/data-model-character-encumbrance-item-based.ts","../../src/module/config.ts","../src/module/helpers-dice.js","../src/module/dialog/character-creation.js","../src/module/dialog/character-gp-cost.js","../src/module/dialog/character-modifiers.js","../src/module/helpers-behaviour.js","../src/module/dialog/entity-tweaks.js","../src/module/actor/actor-sheet.js","../src/module/actor/character-sheet.js","../../src/module/actor/data-model-classes/data-model-character-ac.ts","../../src/module/actor/data-model-classes/data-model-character-move.ts","../../src/module/actor/data-model-classes/data-model-character-scores.ts","../../src/module/actor/data-model-classes/data-model-character-spells.ts","../src/module/actor/data-model-character.js","../src/module/actor/data-model-monster.js","../src/module/item/entity.js","../src/module/actor/entity.js","../src/module/actor/monster-sheet.js","../../src/module/helpers-tags.ts","../src/module/item/data-model-ability.js","../src/module/item/data-model-armor.js","../src/module/item/data-model-container.js","../src/module/item/data-model-item.js","../src/module/item/data-model-spell.js","../src/module/item/data-model-weapon.js","../src/module/item/item-sheet.js","../../src/module/helpers-chat.ts","../src/module/combat.js","../src/module/helpers-treasure.js","../src/module/helpers-macros.js","../src/module/party/party.js","../src/module/party/party-xp.js","../src/module/party/party-sheet.js","../src/module/helpers-party.js","../../src/e2e/testUtils.ts","../../src/module/actor/__tests__/data-model-character.test.ts","../../src/module/actor/data-model-classes/__tests__/data-model-character-ac.test.ts","../../src/module/actor/data-model-classes/__tests__/data-model-character-encumbrance.test.ts","../../src/module/actor/data-model-classes/__tests__/data-model-character-move.test.ts","../../src/module/actor/data-model-classes/__tests__/data-model-character-scores.test.ts","../../src/module/actor/data-model-classes/__tests__/data-model-character-spells.test.ts","../../src/module/actor/__tests__/data-model-monster.test.ts","../../src/module/actor/__tests__/entity-actor.test.ts","../../src/module/actor/__tests__/sheet-actor.test.ts","../../src/module/actor/__tests__/sheet-actor/sheet-actor-e2e-dragndrop.test.ts","../../src/module/actor/__tests__/sheet-character.test.ts","../../src/module/actor/__tests__/sheet-monster.test.ts","../../src/module/dialog/__tests__/sheet-character-modifiers.test.ts","../../src/module/dialog/__tests__/sheet-entity-tweaks.test.ts","../../src/module/item/__tests__/data-model-item-ability.test.ts","../../src/module/item/__tests__/data-model-item-armor.test.ts","../../src/module/item/__tests__/data-model-item-container.test.ts","../../src/module/item/__tests__/data-model-item-misc.test.ts","../../src/module/item/__tests__/data-model-item-spell.test.ts","../../src/module/item/__tests__/data-model-item-weapon.test.ts","../../src/module/item/__tests__/entity-item.test.ts","../../src/module/item/__tests__/sheet-item.test.ts","../../src/module/party/__tests__/entity-party.test.ts","../../src/module/party/__tests__/sheet-party.test.ts","../../src/module/party/__tests__/sheet-party-xp.test.ts","../../src/module/__tests__/helpers-behaviour.test.ts","../../src/module/__tests__/helpers-chat.test.ts","../../src/module/__tests__/helpers-dice.test.ts","../../src/module/__tests__/helpers-handlebars.test.ts","../../src/module/__tests__/helpers-macros.test.ts","../../src/module/__tests__/helpers-party.test.ts","../../src/module/__tests__/helpers-treasure.test.ts","../../src/e2e/index.ts","../../src/module/polyfill.ts","../src/ose.js","../../src/module/helpers-handlebars.ts","../../src/module/settings.ts","../src/module/fvttModuleAPIs.js","../../src/module/preloadTemplates.ts","../src/module/renderList.js"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * @file The base class for all encumbrance schemes. Feel free to extend this to make your own schemes!\n */\nexport interface CharacterEncumbrance {\n  variant: string;\n  enabled: boolean;\n  pct: number;\n  encumbered: boolean;\n  steps: number[];\n  value: number;\n  max: number;\n  atFirstBreakpoint: boolean | null;\n  atSecondBreakpoint: boolean | null;\n  atThirdBreakpoint: boolean | null;\n}\n\n/**\n * A class to handle character encumbrance.\n */\nexport default class OseDataModelCharacterEncumbrance\n  implements CharacterEncumbrance\n{\n  static baseEncumbranceCap = 1600;\n  // Default encumbrance steps used by the 'complete' and 'detailed' encumbrance variants\n  static encumbranceSteps = {\n    quarter: 25,\n    threeEighths: 37.5,\n    half: 50\n  };\n\n  #encumbranceVariant;\n\n  #max;\n\n  #weight = 0;\n\n  /**\n   * The constructor\n   *\n   * @param {string} variant - The name of this encumbrance variant.\n   * @param {number} max - The max weight this character can carry\n   * @param {Item[]} items - The items this character is carrying. Note: we're not using this in the base class.\n   */\n  constructor(\n    variant = \"disabled\",\n    max = OseDataModelCharacterEncumbrance.baseEncumbranceCap,\n    items = [] // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    this.#encumbranceVariant = variant;\n    this.#max = max;\n  }\n\n  get variant() {\n    return this.#encumbranceVariant;\n  }\n\n  get enabled() {\n    return this.#encumbranceVariant !== \"disabled\";\n  }\n\n  get pct() {\n    return Math.clamp((100 * this.value) / this.max, 0, 100);\n  }\n\n  get encumbered() {\n    return this.value > this.max;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get steps(): number[] {\n    return [];\n  }\n\n  get value(): number {\n    return this.#weight;\n  }\n\n  get max() {\n    return this.#max;\n  }\n\n  set max(value) {\n    this.#max = value;\n  }\n\n  get #delta() {\n    return this.max - OseDataModelCharacterEncumbrance.baseEncumbranceCap;\n  }\n\n  get atThirdBreakpoint() {\n    return (\n      this.value >\n      this.max *\n        (OseDataModelCharacterEncumbrance.encumbranceSteps.half / 100) +\n        (this.#delta || 0)\n    );\n  }\n\n  get atSecondBreakpoint() {\n    return (\n      this.value >\n      this.max *\n        (OseDataModelCharacterEncumbrance.encumbranceSteps.threeEighths / 100) +\n        (this.#delta || 0)\n    );\n  }\n\n  get atFirstBreakpoint() {\n    return (\n      this.value >\n      this.max *\n        (OseDataModelCharacterEncumbrance.encumbranceSteps.quarter / 100) +\n        (this.#delta || 0)\n    );\n  }\n}\n","/**\n * @file A class representing the \"Basic\" encumbrance scheme from Old School Essentials: Classic Fantasy\n */\nimport OseDataModelCharacterEncumbrance, {\n  CharacterEncumbrance,\n} from \"./data-model-character-encumbrance\";\n\n// import { OSE } from '../../config';\n\n/**\n * A set of options for configuring the\n * Basic encumbrance scheme\n */\ntype Options = {\n  significantTreasure: number;\n};\n\n/**\n * @todo Add template path for encumbrance bar\n * @todo Add template path for inventory item row\n */\nexport default class OseDataModelCharacterEncumbranceBasic\n  extends OseDataModelCharacterEncumbrance\n  implements CharacterEncumbrance\n{\n  static templateEncumbranceBar = \"\";\n\n  static templateInventoryRow = \"\";\n\n  /**\n   * The machine-readable label for this encumbrance scheme\n   */\n  static type = \"basic\";\n\n  /**\n   * The human-readable label for this encumbrance scheme\n   */\n  static localizedLabel = \"OSE.Setting.EncumbranceBasic\";\n\n  /**\n   * The base value for the amount of treasure that slows a character down\n   */\n  static significantTreasure = 800;\n\n  /**\n   * A map of strings to numbers indicating how heavy a set of armor is.\n   * The heavier the armor, the slower you move.\n   */\n  static armorWeight = {\n    unarmored: 0,\n    light: 1,\n    heavy: 2,\n  };\n\n  #weight;\n\n  #treasureEncumbrance;\n\n  #heaviestArmor;\n\n  constructor(\n    max = OseDataModelCharacterEncumbrance.baseEncumbranceCap,\n    items: Item[] = [],\n    options: Options = {} as Options\n  ) {\n    super(OseDataModelCharacterEncumbranceBasic.type, max);\n    this.#treasureEncumbrance =\n      options?.significantTreasure ||\n      OseDataModelCharacterEncumbranceBasic.significantTreasure;\n\n    this.#weight = items.reduce(\n      (acc: number, { type, system: { treasure, quantity, weight } }: Item) =>\n        type !== \"item\" || !treasure ? acc : acc + quantity.value * weight,\n      0\n    );\n\n    this.#heaviestArmor = items.reduce(\n      (heaviest, { type, system: { type: armorType, equipped } }) => {\n        if (type !== \"armor\" || !equipped) return heaviest;\n        if (\n          armorType === \"light\" &&\n          heaviest ===\n            OseDataModelCharacterEncumbranceBasic.armorWeight.unarmored\n        )\n          return OseDataModelCharacterEncumbranceBasic.armorWeight.light;\n        if (armorType === \"heavy\")\n          return OseDataModelCharacterEncumbranceBasic.armorWeight.heavy;\n        return heaviest;\n      },\n      OseDataModelCharacterEncumbranceBasic.armorWeight.unarmored\n    );\n  }\n\n  get steps() {\n    return [(100 * this.#treasureEncumbrance) / this.max];\n  }\n\n  get overTreasureThreshold() {\n    return this.value >= this.#treasureEncumbrance;\n  }\n\n  get value() {\n    return this.#weight;\n  }\n\n  get overSignificantTreasureThreshold() {\n    return this.value >= this.#treasureEncumbrance;\n  }\n\n  get atThirdBreakpoint() {\n    return (\n      this.#heaviestArmor ===\n        OseDataModelCharacterEncumbranceBasic.armorWeight.heavy &&\n      this.value >= this.#treasureEncumbrance\n    );\n  }\n\n  get atSecondBreakpoint() {\n    const isHeavy =\n      this.#heaviestArmor ===\n      OseDataModelCharacterEncumbranceBasic.armorWeight.heavy;\n    const isLightWithTreasure =\n      this.#heaviestArmor ===\n        OseDataModelCharacterEncumbranceBasic.armorWeight.light &&\n      this.value >= this.#treasureEncumbrance;\n    return isHeavy || isLightWithTreasure;\n  }\n\n  get atFirstBreakpoint() {\n    return (\n      this.#heaviestArmor ===\n        OseDataModelCharacterEncumbranceBasic.armorWeight.light ||\n      this.overSignificantTreasureThreshold\n    );\n  }\n}\n","/**\n * @file A class representing the \"Complete\" encumbrance scheme from Old School Essentials: Classic Fantasy\n */\nimport OseDataModelCharacterEncumbrance, {\n  CharacterEncumbrance,\n} from \"./data-model-character-encumbrance\";\n\n// import { OSE } from '../../config';\n\n/**\n * @todo Add template path for encumbrance bar\n * @todo Add template path for inventory item row\n */\nexport default class OseDataModelCharacterEncumbranceComplete\n  extends OseDataModelCharacterEncumbrance\n  implements CharacterEncumbrance\n{\n  static templateEncumbranceBar = \"\";\n\n  static templateInventoryRow = \"\";\n\n  /**\n   * The machine-readable label for this encumbrance scheme\n   */\n  static type = \"complete\";\n\n  /**\n   * The human-readable label for this encumbrance scheme\n   */\n  static localizedLabel = \"OSE.Setting.EncumbranceComplete\";\n\n  #weight;\n\n  constructor(\n    max = OseDataModelCharacterEncumbrance.baseEncumbranceCap,\n    items: Item[] = []\n  ) {\n    super(OseDataModelCharacterEncumbranceComplete.type, max);\n    this.#weight = items.reduce(\n      (acc, { type, system: { quantity, weight } }: Item) => {\n        if (type === \"item\") return acc + quantity.value * weight;\n        if ([\"weapon\", \"armor\", \"container\"].includes(type))\n          return acc + weight;\n        return acc;\n      },\n      0\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get steps() {\n    return Object.values(OseDataModelCharacterEncumbrance.encumbranceSteps);\n  }\n\n  get value(): number {\n    return this.#weight;\n  }\n}\n","/**\n * @file A class representing the \"Detailed\" encumbrance scheme from Old School Essentials: Classic Fantasy\n */\nimport OseDataModelCharacterEncumbrance, {\n  CharacterEncumbrance,\n} from \"./data-model-character-encumbrance\";\n\n// import { OSE } from '../../config';\n\n/**\n * @todo Add template path for encumbrance bar\n * @todo Add template path for inventory item row\n */\nexport default class OseDataModelCharacterEncumbranceDetailed\n  extends OseDataModelCharacterEncumbrance\n  implements CharacterEncumbrance\n{\n  static templateEncumbranceBar = \"\";\n\n  static templateInventoryRow = \"\";\n\n  /**\n   * The machine-readable label for this encumbrance scheme\n   */\n  static type = \"detailed\";\n\n  /**\n   * The human-readable label for this encumbrance scheme\n   */\n  static localizedLabel = \"OSE.Setting.EncumbranceDetailed\";\n\n  /**\n   * The weight (in coins) to add to the total weight value if the character has adventuring gear\n   */\n  static gearWeight = 80;\n\n  #weight = 0;\n\n  #hasAdventuringGear;\n\n  constructor(\n    max = OseDataModelCharacterEncumbrance.baseEncumbranceCap,\n    items: Item[] = []\n  ) {\n    super(OseDataModelCharacterEncumbranceDetailed.type, max);\n    this.#hasAdventuringGear = items.some(\n      (i: Item) => i.type === \"item\" && !i.system.treasure\n    );\n    this.#weight =\n      items.reduce(\n        (acc, { type, system: { treasure, quantity, weight } }: Item) => {\n          if (type === \"spell\" || type === \"ability\") return acc;\n\n          let value = acc;\n\n          if (type === \"item\" && treasure) value += quantity.value * weight;\n          if ([\"weapon\", \"armor\", \"container\"].includes(type)) value += weight;\n\n          return value;\n        },\n        0\n      ) +\n      (this.#hasAdventuringGear\n        ? OseDataModelCharacterEncumbranceDetailed.gearWeight\n        : 0);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get steps() {\n    return Object.values(OseDataModelCharacterEncumbrance.encumbranceSteps);\n  }\n\n  get value(): number {\n    return this.#weight;\n  }\n}\n","/**\n * @file A class representing the \"Disabled\" encumbrance scheme;\n *       we aren't tracking carry weight here.\n */\nimport OseDataModelCharacterEncumbrance, {\n  CharacterEncumbrance,\n} from \"./data-model-character-encumbrance\";\n\n// import { OSE } from '../../config';\n\n/**\n * @todo Add template path for encumbrance bar\n * @todo Add template path for inventory item row\n */\nexport default class OseDataModelCharacterEncumbranceDisabled\n  extends OseDataModelCharacterEncumbrance\n  implements CharacterEncumbrance\n{\n  static templateEncumbranceBar = \"\";\n\n  static templateInventoryRow = \"\";\n\n  /**\n   * The machine-readable label for this encumbrance scheme\n   */\n  static type = \"disabled\";\n\n  /**\n   * The human-readable label for this encumbrance scheme\n   */\n  static localizedLabel = \"OSE.Setting.EncumbranceDisabled\";\n\n  constructor() {\n    super(OseDataModelCharacterEncumbranceDisabled.type);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get value(): number {\n    return 0;\n  }\n}\n","/**\n * @file A class representing the \"Item-based\" encumbrance scheme from Carcass Crawler Issue Two\n */\nimport OseDataModelCharacterEncumbrance, {\n  CharacterEncumbrance,\n} from \"./data-model-character-encumbrance\";\n\n// import { OSE } from '../../config';\n\n/**\n * @todo Add template path for encumbrance bar\n * @todo Add template path for inventory item row\n */\nexport default class OseDataModelCharacterEncumbranceItemBased\n  extends OseDataModelCharacterEncumbrance\n  implements CharacterEncumbrance\n{\n  static packedEncumbranceSteps = {\n    fiveEighths: 62.5,\n    threeQuarters: 75,\n    sevenEighths: 87.5,\n  };\n\n  static equippedEncumbranceSteps = {\n    oneThird: 33.33,\n    fiveNinths: 55.55,\n    sevenNinths: 77.77,\n  };\n\n  #equippedMax;\n\n  #packedMax;\n\n  #max;\n\n  #atFiveEighths;\n  #atThreeQuarters;\n  #atSevenEights;\n\n  #atOneThird;\n  #atFiveNinths;\n  #atSevenNinths;\n\n  static templateEncumbranceBar = \"\";\n\n  static templateInventoryRow = \"\";\n\n  /**\n   * The machine-readable label for this encumbrance scheme\n   */\n  static type = \"itembased\";\n\n  /**\n   * The human-readable label for this encumbrance scheme\n   */\n  static localizedLabel = \"OSE.Setting.EncumbranceItemBased\";\n\n  #weight;\n\n  #equippedWeight;\n\n  #packedWeight;\n\n  // eslint-disable-next-line sonarjs/cognitive-complexity, @typescript-eslint/no-unused-vars\n  constructor(max = 16, items: Item[] = []) {\n    super(OseDataModelCharacterEncumbranceItemBased.type, max);\n\n    this.#packedMax = 16;\n    this.#equippedMax = 9;\n    this.#packedWeight = Math.ceil(\n      items.reduce(\n        (acc, { type, system: { quantity, itemslots, equipped } }: Item) => {\n          if (type === \"item\" && !equipped)\n            return acc + quantity.value * itemslots;\n          if ([\"weapon\", \"armor\", \"container\"].includes(type) && !equipped)\n            return acc + itemslots;\n          return acc;\n        },\n        0\n      )\n    );\n    this.#equippedWeight = Math.ceil(\n      items.reduce(\n        (acc, { type, system: { quantity, itemslots, equipped } }: Item) => {\n          if (type === \"item\" && equipped)\n            return acc + quantity.value * itemslots;\n          if ([\"weapon\", \"armor\", \"container\"].includes(type) && equipped)\n            return acc + itemslots;\n          return acc;\n        },\n        0\n      )\n    );\n    this.#atFiveEighths = this.#weight > this.#max * (OseDataModelCharacterEncumbranceItemBased.packedEncumbranceSteps.fiveEighths / 100);\n    this.#atThreeQuarters = this.#weight > this.#max * (OseDataModelCharacterEncumbranceItemBased.packedEncumbranceSteps.threeQuarters / 100);\n    this.#atSevenEights = this.#weight > this.#max * (OseDataModelCharacterEncumbranceItemBased.packedEncumbranceSteps.sevenEighths / 100);\n\n    this.#atOneThird = this.#weight > this.#max * (OseDataModelCharacterEncumbranceItemBased.equippedEncumbranceSteps.oneThird / 100);\n    this.#atFiveNinths = this.#weight > this.#max * (OseDataModelCharacterEncumbranceItemBased.equippedEncumbranceSteps.fiveNinths / 100);\n    this.#atSevenNinths = this.#weight > this.#max * (OseDataModelCharacterEncumbranceItemBased.equippedEncumbranceSteps.sevenNinths / 100);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get steps() {\n    return this.usingEquippedEncumbrance\n      ? Object.values(\n          OseDataModelCharacterEncumbranceItemBased.equippedEncumbranceSteps\n        )\n      : Object.values(\n          OseDataModelCharacterEncumbranceItemBased.packedEncumbranceSteps\n        );\n  }\n\n  get usingEquippedEncumbrance() {\n    const equippedValues = Object.values(\n      OseDataModelCharacterEncumbranceItemBased.equippedEncumbranceSteps\n    );\n    const packedValues = Object.values(\n      OseDataModelCharacterEncumbranceItemBased.packedEncumbranceSteps\n    );\n    let equippedIndex = equippedValues.findIndex(\n      (step) => step > (this.#equippedWeight / this.#equippedMax) * 100\n    );\n    equippedIndex = equippedIndex === -1 ? 4 : equippedIndex;\n\n    let packedIndex = packedValues.findIndex(\n      (step) => step > (this.#packedWeight / this.#packedMax) * 100);\n    packedIndex = packedIndex === -1 ? 4 : packedIndex;\n    return !!(equippedIndex >= packedIndex);\n  }\n\n  get value(): number {\n    return this.#weight;\n  }\n\n  get max(): number {\n    return this.#max;\n  }\n\n  get atFirstBreakpoint(): boolean {\n    return this.usingEquippedEncumbrance\n      ? this.#atOneThird\n      : this.#atFiveEighths;\n  }\n\n  get atSecondBreakpoint(): boolean {\n    return this.usingEquippedEncumbrance\n      ? this.#atFiveNinths\n      : this.#atThreeQuarters;\n  }\n\n  get atThirdBreakpoint(): boolean {\n    return this.usingEquippedEncumbrance\n      ? this.#atSevenNinths\n      : this.#atSevenEights;\n  }\n}\n","/**\n * @file System-wide configuration settings. Should be reachable elsewhere in the system at `CONFIG.OSE`\n */\nimport OseDataModelCharacterEncumbranceBasic from \"./actor/data-model-classes/data-model-character-encumbrance-basic\";\nimport OseDataModelCharacterEncumbranceComplete from \"./actor/data-model-classes/data-model-character-encumbrance-complete\";\nimport OseDataModelCharacterEncumbranceDetailed from \"./actor/data-model-classes/data-model-character-encumbrance-detailed\";\nimport OseDataModelCharacterEncumbranceDisabled from \"./actor/data-model-classes/data-model-character-encumbrance-disabled\";\nimport OseDataModelCharacterEncumbranceItemBased from \"./actor/data-model-classes/data-model-character-encumbrance-item-based\";\n\nexport type OseConfig = typeof OSE;\n\nexport type Attribute = keyof OseConfig[\"scores\"];\nexport type ExplorationSkill = keyof OseConfig[\"exploration_skills\"];\nexport type RollType = keyof OseConfig[\"roll_type\"];\nexport type Save = keyof OseConfig[\"saves_long\"];\nexport type Armor = keyof OseConfig[\"armor\"];\nexport type Color = keyof OseConfig[\"colors\"];\nexport type InventoryItemTag = keyof OseConfig[\"tags\"];\nexport type EncumbranceOption = keyof OseConfig[\"encumbranceOptions\"];\nexport type ApplyDamageOption = keyof OseConfig[\"apply_damage_options\"];\n\nexport const OSE = {  \n  /** Path for system dist */\n  systemPath(): string {\n    return `${this.systemRoot}/dist`;\n  },  \n  /** Root path for OSE system */\n  get systemRoot(): string {\n    return `/systems/${game.system.id}`;\n  },\n  /** Path for system assets */\n  get assetsPath(): string {\n    return `${this.systemRoot}/assets`;\n  },\n  get encumbrance() {\n    const variant = game.settings.get(game.system.id, \"encumbranceOption\");\n    return this.encumbranceOptions[variant] || this.encumbranceOptions.disabled;\n  },\n  encumbranceOptions: {\n    basic: OseDataModelCharacterEncumbranceBasic,\n    detailed: OseDataModelCharacterEncumbranceDetailed,\n    complete: OseDataModelCharacterEncumbranceComplete,\n    disabled: OseDataModelCharacterEncumbranceDisabled,\n    itembased: OseDataModelCharacterEncumbranceItemBased,\n  },\n  scores: {\n    str: \"OSE.scores.str.long\",\n    int: \"OSE.scores.int.long\",\n    dex: \"OSE.scores.dex.long\",\n    wis: \"OSE.scores.wis.long\",\n    con: \"OSE.scores.con.long\",\n    cha: \"OSE.scores.cha.long\",\n  },\n  scores_short: {\n    str: \"OSE.scores.str.short\",\n    int: \"OSE.scores.int.short\",\n    dex: \"OSE.scores.dex.short\",\n    wis: \"OSE.scores.wis.short\",\n    con: \"OSE.scores.con.short\",\n    cha: \"OSE.scores.cha.short\",\n  },\n  exploration_skills: {\n    ld: \"OSE.exploration.ld.long\",\n    od: \"OSE.exploration.od.long\",\n    sd: \"OSE.exploration.sd.long\",\n    fs: \"OSE.exploration.ft.long\",\n  },\n  exploration_skills_short: {\n    ld: \"OSE.exploration.ld.abrev\",\n    od: \"OSE.exploration.od.abrev\",\n    sd: \"OSE.exploration.sd.abrev\",\n    fs: \"OSE.exploration.ft.abrev\",\n  },\n  roll_type: {\n    result: \"=\",\n    above: \"≥\",\n    below: \"≤\",\n  },\n  saves_short: {\n    death: \"OSE.saves.death.short\",\n    wand: \"OSE.saves.wand.short\",\n    paralysis: \"OSE.saves.paralysis.short\",\n    breath: \"OSE.saves.breath.short\",\n    spell: \"OSE.saves.spell.short\",\n  },\n  saves_long: {\n    death: \"OSE.saves.death.long\",\n    wand: \"OSE.saves.wand.long\",\n    paralysis: \"OSE.saves.paralysis.long\",\n    breath: \"OSE.saves.breath.long\",\n    spell: \"OSE.saves.spell.long\",\n  },\n  armor: {\n    unarmored: \"OSE.armor.unarmored\",\n    light: \"OSE.armor.light\",\n    heavy: \"OSE.armor.heavy\",\n    shield: \"OSE.armor.shield\",\n  },\n  apply_damage_options: {\n    selected : \"selected\",\n    targeted : \"targeted\",\n    originalTarget : \"originalTarget\",\n  },\n  colors: {\n    green: \"OSE.colors.green\",\n    red: \"OSE.colors.red\",\n    yellow: \"OSE.colors.yellow\",\n    purple: \"OSE.colors.purple\",\n    blue: \"OSE.colors.blue\",\n    orange: \"OSE.colors.orange\",\n    white: \"OSE.colors.white\",\n  },\n  languages: [\n    \"Common\",\n    \"Lawful\",\n    \"Chaotic\",\n    \"Neutral\",\n    \"Bugbear\",\n    \"Doppelgänger\",\n    \"Dragon\",\n    \"Dwarvish\",\n    \"Elvish\",\n    \"Gargoyle\",\n    \"Gnoll\",\n    \"Gnomish\",\n    \"Goblin\",\n    \"Halfling\",\n    \"Harpy\",\n    \"Hobgoblin\",\n    \"Kobold\",\n    \"Lizard Man\",\n    \"Medusa\",\n    \"Minotaur\",\n    \"Ogre\",\n    \"Orcish\",\n    \"Pixie\",\n  ],\n  tags: {\n    melee: \"OSE.items.Melee\",\n    missile: \"OSE.items.Missile\",\n    slow: \"OSE.items.Slow\",\n    twohanded: \"OSE.items.TwoHanded\",\n    blunt: \"OSE.items.Blunt\",\n    brace: \"OSE.items.Brace\",\n    splash: \"OSE.items.Splash\",\n    reload: \"OSE.items.Reload\",\n    charge: \"OSE.items.Charge\",\n  },\n  auto_tags: {\n    get melee() {\n      return {\n        label: CONFIG.OSE.tags.melee,\n        image: `${CONFIG.OSE.assetsPath}/melee.png`,\n        icon: \"fa-sword\",\n      };\n    },\n    get missile() {\n      return {\n        label: CONFIG.OSE.tags.missile,\n        image: `${CONFIG.OSE.assetsPath}/missile.png`,\n        icon: \"fa-bow-arrow\",\n      };\n    },\n    get slow() {\n      return {\n        label: CONFIG.OSE.tags.slow,\n        image: `${CONFIG.OSE.assetsPath}/slow.png`,\n        icon: \"fa-weight-hanging\",\n      };\n    },\n    get twohanded() {\n      return {\n        label: CONFIG.OSE.tags.twohanded,\n        image: `${CONFIG.OSE.assetsPath}/twohanded.png`,\n        icon: \"fa-hands-holding\",\n      };\n    },\n    get blunt() {\n      return {\n        label: CONFIG.OSE.tags.blunt,\n        image: `${CONFIG.OSE.assetsPath}/blunt.png`,\n        icon: \"fa-hammer-crash\",\n      };\n    },\n    get brace() {\n      return {\n        label: CONFIG.OSE.tags.brace,\n        image: `${CONFIG.OSE.assetsPath}/brace.png`,\n        icon: \"fa-block-brick\",\n      };\n    },\n    get splash() {\n      return {\n        label: CONFIG.OSE.tags.splash,\n        image: `${CONFIG.OSE.assetsPath}/splash.png`,\n        icon: \"fa-burst\",\n      };\n    },\n    get reload() {\n      return {\n        label: CONFIG.OSE.tags.reload,\n        image: `${CONFIG.OSE.assetsPath}/reload.png`,\n        icon: \"fa-gear\",\n      };\n    },\n    get charge() {\n      return {\n        label: CONFIG.OSE.tags.charge,\n        image: `${CONFIG.OSE.assetsPath}/charge.png`,\n        icon: \"fa-person-running\",\n      };\n    },\n  },\n  tag_images: {\n    get melee() {\n      return `${CONFIG.OSE.assetsPath}/melee.png`;\n    },\n    get missile() {\n      return `fa-bow-arrow`;\n    },\n    get slow() {\n      return `${CONFIG.OSE.assetsPath}/slow.png`;\n    },\n    get twohanded() {\n      return `${CONFIG.OSE.assetsPath}/twohanded.png`;\n    },\n    get blunt() {\n      return `${CONFIG.OSE.assetsPath}/blunt.png`;\n    },\n    get brace() {\n      return `${CONFIG.OSE.assetsPath}/brace.png`;\n    },\n    get splash() {\n      return `${CONFIG.OSE.assetsPath}/splash.png`;\n    },\n    get reload() {\n      return `${CONFIG.OSE.assetsPath}/reload.png`;\n    },\n    get charge() {\n      return `${CONFIG.OSE.assetsPath}/charge.png`;\n    },\n  },\n  monster_saves: {\n    0: {\n      d: 14,\n      w: 15,\n      p: 16,\n      b: 17,\n      s: 18,\n    },\n    1: {\n      d: 12,\n      w: 13,\n      p: 14,\n      b: 15,\n      s: 16,\n    },\n    4: {\n      d: 10,\n      w: 11,\n      p: 12,\n      b: 13,\n      s: 14,\n    },\n    7: {\n      d: 8,\n      w: 9,\n      p: 10,\n      b: 10,\n      s: 12,\n    },\n    10: {\n      d: 6,\n      w: 7,\n      p: 8,\n      b: 8,\n      s: 10,\n    },\n    13: {\n      d: 4,\n      w: 5,\n      p: 6,\n      b: 5,\n      s: 8,\n    },\n    16: {\n      d: 2,\n      w: 3,\n      p: 4,\n      b: 3,\n      s: 6,\n    },\n    19: {\n      d: 2,\n      w: 2,\n      p: 2,\n      b: 2,\n      s: 4,\n    },\n    22: {\n      d: 2,\n      w: 2,\n      p: 2,\n      b: 2,\n      s: 2,\n    },\n  },\n  monster_thac0: {\n    0: 20,\n    1: 19,\n    2: 18,\n    3: 17,\n    4: 16,\n    5: 15,\n    6: 14,\n    7: 13,\n    9: 12,\n    10: 11,\n    12: 10,\n    14: 9,\n    16: 8,\n    18: 7,\n    20: 6,\n    22: 5,\n  },\n};\n\nexport default OSE;\n","/**\n * @file Helpful methods for dealing with OSE-specific dice logic\n */\nimport OSE from \"./config\";\n\nconst OseDice = {\n  async sendRoll({\n    parts = [],\n    data = {},\n    title = null,\n    flavor = null,\n    speaker = null,\n    form = null,\n    chatMessage = true,\n  } = {}) {\n    const template = `${OSE.systemPath()}/templates/chat/roll-result.html`;\n\n    const chatData = {\n      user: game.user.id,\n      speaker,\n    };\n\n    const templateData = {\n      title,\n      flavor,\n      data,\n      config: CONFIG.OSE,\n    };\n\n    // Optionally include a situational bonus\n    if (form !== null && form.bonus.value) {\n      parts.push(form.bonus.value);\n    }\n\n    const roll = new Roll(parts.join(\"+\"), data);\n    await roll.evaluate({allowStrings: true});\n\n    // Convert the roll to a chat message and return the roll\n    let rollMode = game.settings.get(\"core\", \"rollMode\");\n    rollMode = form ? form.rollMode.value : rollMode;\n\n    // Force blind roll (ability formulas)\n    if (!form && data.roll.blindroll) {\n      rollMode = game.user.isGM ? \"selfroll\" : \"blindroll\";\n    }\n\n    if ([\"gmroll\", \"blindroll\"].includes(rollMode))\n      chatData.whisper = ChatMessage.getWhisperRecipients(\"GM\");\n    if (rollMode === \"selfroll\") chatData.whisper = [game.user._id];\n    if (rollMode === \"blindroll\") {\n      chatData.blind = true;\n      data.roll.blindroll = true;\n    }\n\n    templateData.result = OseDice.digestResult(data, roll);\n\n    return new Promise((resolve) => {\n      roll.render().then((r) => {\n        templateData.rollOSE = r;\n        renderTemplate(template, templateData).then((content) => {\n          chatData.content = content;\n          // Dice So Nice\n          if (game.dice3d) {\n            game.dice3d\n              .showForRoll(\n                roll,\n                game.user,\n                true,\n                chatData.whisper,\n                chatData.blind\n              )\n              .then((displayed) => {\n                if (chatMessage !== false) ChatMessage.create(chatData);\n                resolve(roll);\n              });\n          } else {\n            chatData.sound = CONFIG.sounds.dice;\n            if (chatMessage !== false) ChatMessage.create(chatData);\n            resolve(roll);\n          }\n        });\n      });\n    });\n  },\n\n  /**\n   * Digesting results depending on type of roll\n   *\n   * @param {object} data - Contains roll data, including what type of check\n   * @param {object} roll - Evaluated Roll returned object\n   * @returns {object} - Object containing the evaluated data // @todo DigestResult\n   */\n  digestResult(data, roll) {\n    // @todo: Extract this to a DigestResult type/interface\n    const result = {\n      isSuccess: false,\n      isFailure: false,\n      target: data.roll.target,\n      total: roll.total,\n    };\n\n    const die = roll.terms[0].results[0].result;\n    // eslint-disable-next-line default-case\n    switch (data.roll.type) {\n      case \"result\": {\n        if (roll.total === result.target) {\n          result.isSuccess = true;\n        } else {\n          result.isFailure = true;\n        }\n\n        break;\n      }\n\n      case \"above\": {\n        // SAVING THROWS\n        if (roll.total >= result.target) {\n          result.isSuccess = true;\n        } else {\n          result.isFailure = true;\n        }\n\n        break;\n      }\n\n      case \"below\": {\n        // MORALE, EXPLORATION\n        if (roll.total <= result.target) {\n          result.isSuccess = true;\n        } else {\n          result.isFailure = true;\n        }\n\n        break;\n      }\n\n      case \"check\": {\n        // SCORE CHECKS (1s and 20s)\n        if (die === 1 || (roll.total <= result.target && die < 20)) {\n          result.isSuccess = true;\n        } else {\n          result.isFailure = true;\n        }\n\n        break;\n      }\n\n      case \"table\": {\n        // Reaction\n        const { table } = data.roll;\n        let output = Object.values(table)[0];\n        for (let i = 0; i <= roll.total; i++) {\n          if (table[i]) {\n            output = table[i];\n          }\n        }\n        result.details = output;\n\n        break;\n      }\n\n      default : {\n        result.isSuccess = false;\n        result.isFailure = false;\n\n        break;\n      }\n    }\n    return result;\n  },\n\n  /**\n   * Evaluates if a roll is successful for both THAC0 and Ascending AC\n   *\n   * @param {object} roll - Evaluated roll data from a Roll\n   * @param {number} thac0 - THAC0 value, or Hit Target when AscendingAC\n   * @param {number} ac - AC Value, or Attack Bonus when AscendingAC\n   * @returns {boolean} - Did the attack succeed?\n   */\n  attackIsSuccess(roll, thac0, ac) {\n    // Natural 1\n    if (roll.terms[0].results[0].result === 1) {\n      return false;\n    }\n    // Natural 20\n    if (roll.terms[0].results[0].result === 20) {\n      return true;\n    }\n    return roll.total + ac >= thac0;\n  },\n\n  /**\n   * Digest the results of a target to reach, and an evaluated roll\n   * to evaluate if it does hit or not. The function adds information\n   * for generating chat card data too.\n   *\n   * @param {object} data - Data with at least roll target data\n   * @param {object} roll - Evaluation result from a Roll\n   * @returns {object} - DigestResult\n   */\n  digestAttackResult(data, roll) {\n    // @todo: Extract this to a DigestResult type/interface\n    const result = {\n      isSuccess: false,\n      isFailure: false,\n      target: \"\",\n      total: roll.total,\n    };\n    result.target = data.roll.thac0;\n    const targetActorData = data.roll.target?.actor?.system || null;\n\n    const targetAc = data.roll.target ? targetActorData.ac.value : 20;\n    const targetAac = data.roll.target ? targetActorData.aac.value : -20;\n    result.victim = data.roll.target || null;\n\n    if (game.settings.get(game.system.id, \"ascendingAC\")) {\n      const attackBonus = 19 - data.roll.thac0;\n      if (this.attackIsSuccess(roll, targetAac, attackBonus)) {\n        result.details = game.i18n.format(\n          \"OSE.messages.AttackAscendingSuccess\",\n          {\n            result: roll.total,\n          }\n        );\n        result.isSuccess = true;\n      } else {\n        result.details = game.i18n.format(\n          \"OSE.messages.AttackAscendingFailure\",\n          {\n            bonus: result.target,\n          }\n        );\n        result.isFailure = true;\n      }\n    } else if (this.attackIsSuccess(roll, result.target, targetAc)) {\n      // Answer is bounded betweewn AC -3 and 9 (unarmored) and is shown in chat card\n      const value = Math.clamp(result.target - roll.total, -3, 9);\n      result.details = game.i18n.format(\"OSE.messages.AttackSuccess\", {\n        result: value,\n        bonus: result.target,\n      });\n      result.isSuccess = true;\n    } else {\n      result.details = game.i18n.format(\"OSE.messages.AttackFailure\", {\n        bonus: result.target,\n      });\n      result.isFailure = true;\n    }\n    return result;\n  },\n\n  /**\n   * Puts together the information needed to roll a Roll and the\n   * expectations on hitting a target. Also creates the chat card\n   * containing the infromation about the evaluated roll.\n   *\n   * @param {object} param0 - Object to evaluate\n   * @param {Array<String || number>} param0.parts - Roll parts (e.g. [\"1d20\", \"3\", \"0\", \"0\"])\n   * @param {object} param0.data - Object containing target data\n   * @param {object} param0.data.roll - Roll target data\n   * @param {Array<String || number|} param0.data.roll.dmg - Roll parts for damage roll if hit\n   * @param {Actor | null} param0.data.target - Target data for the intended hit target\n   * @param {object} param0.flags -Not used directly in function, but may be passed on\n   * @param {string} param0.title - Modified in RollSave() if magic save required\n   * @param {string} param0.flavor - Not used directly in function\n   * @param {object} param0.speaker - Speaker data for the chat card\n   * @param {object} param0.form - Data from the Dialog Form that generates data for the function\n   * @returns {Promise || Void} - Either not returning anything, or a Promise for rendering a Chat Card\n   */\n  async sendAttackRoll({\n    parts = [],\n    data = {},\n    flags = {},\n    title = null,\n    flavor = null,\n    speaker = null,\n    form = null,\n  } = {}) {\n    if (data.roll.dmg.filter((v) => v !== \"\").length === 0) {\n      /**\n       * @todo should this error be localized?\n       */\n      ui.notifications.error(\n        \"Attack has no damage dice terms; be sure to set the attack's damage\"\n      );\n      return;\n    }\n    const template = `${OSE.systemPath()}/templates/chat/roll-attack.html`;\n    const chatData = {\n      user: game.user.id,\n      speaker,\n      flags,\n    };\n\n    const templateData = {\n      title,\n      flavor,\n      data,\n      config: CONFIG.OSE,\n    };\n\n    // Optionally include a situational bonus\n    if (form !== null && form.bonus.value) parts.push(form.bonus.value);\n\n    const roll = new Roll(parts.join(\"+\"), data);\n    await roll.evaluate();\n    const dmgRoll = new Roll(data.roll.dmg.join(\"+\"), data);\n    await dmgRoll.evaluate();\n\n    // Convert the roll to a chat message and return the roll\n    let rollMode = game.settings.get(\"core\", \"rollMode\");\n    rollMode = form ? form.rollMode.value : rollMode;\n\n    // Force blind roll (ability formulas)\n    if (data.roll.blindroll) {\n      rollMode = game.user.isGM ? \"selfroll\" : \"blindroll\";\n    }\n\n    if ([\"gmroll\", \"blindroll\"].includes(rollMode))\n      chatData.whisper = ChatMessage.getWhisperRecipients(\"GM\");\n    if (rollMode === \"selfroll\") chatData.whisper = [game.user._id];\n    if (rollMode === \"blindroll\") {\n      chatData.blind = true;\n      data.roll.blindroll = true;\n    }\n\n    templateData.result = OseDice.digestAttackResult(data, roll);\n\n    return new Promise((resolve) => {\n      roll.render().then((r) => {\n        templateData.rollOSE = r;\n        dmgRoll.render().then((dr) => {\n          templateData.rollDamage = dr;\n          renderTemplate(template, templateData).then((content) => {\n            chatData.content = content;\n            // 2 Step Dice So Nice\n            if (game.dice3d) {\n              game.dice3d\n                .showForRoll(\n                  roll,\n                  game.user,\n                  true,\n                  chatData.whisper,\n                  chatData.blind\n                )\n                .then(() => {\n                  if (templateData.result.isSuccess) {\n                    templateData.result.dmg = dmgRoll.total;\n                    game.dice3d\n                      .showForRoll(\n                        dmgRoll,\n                        game.user,\n                        true,\n                        chatData.whisper,\n                        chatData.blind\n                      )\n                      .then(() => {\n                        ChatMessage.create(chatData);\n                        resolve(roll);\n                      });\n                  } else {\n                    ChatMessage.create(chatData);\n                    resolve(roll);\n                  }\n                });\n            } else {\n              chatData.sound = CONFIG.sounds.dice;\n              ChatMessage.create(chatData);\n              resolve(roll);\n            }\n          });\n        });\n      });\n    });\n  },\n\n  async RollSave({\n    parts = [],\n    data = {},\n    skipDialog = false,\n    speaker = null,\n    flavor = null,\n    title = null,\n    chatMessage = true,\n  } = {}) {\n    let rolled = false;\n    const template = `${OSE.systemPath()}/templates/chat/roll-dialog.html`;\n    const dialogData = {\n      formula: parts.join(\" \"),\n      data,\n      rollMode: game.settings.get(\"core\", \"rollMode\"),\n      rollModes: CONFIG.Dice.rollModes,\n    };\n\n    const rollData = {\n      parts,\n      data,\n      title,\n      flavor,\n      speaker,\n      chatMessage,\n    };\n    if (skipDialog) {\n      return OseDice.sendRoll(rollData);\n    }\n\n    const buttons = {\n      ok: {\n        label: game.i18n.localize(\"OSE.Roll\"),\n        icon: '<i class=\"fas fa-dice-d20\"></i>',\n        callback: (html) => {\n          rolled = true;\n          rollData.form = html[0].querySelector(\"form\");\n          roll = OseDice.sendRoll(rollData);\n        },\n      },\n      magic: {\n        label: game.i18n.localize(\"OSE.saves.magic.short\"),\n        icon: '<i class=\"fas fa-magic\"></i>',\n        callback: (html) => {\n          rolled = true;\n          rollData.form = html[0].querySelector(\"form\");\n          rollData.parts.push(`${rollData.data.roll.magic}`);\n          rollData.title += ` ${game.i18n.localize(\"OSE.saves.magic.short\")} (${\n            rollData.data.roll.magic\n          })`;\n          roll = OseDice.sendRoll(rollData);\n        },\n      },\n      cancel: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: game.i18n.localize(\"OSE.Cancel\"),\n        callback: (html) => {},\n      },\n    };\n\n    const html = await renderTemplate(template, dialogData);\n    let roll;\n\n    // Create Dialog window\n    return new Promise((resolve) => {\n      new Dialog({\n        title,\n        content: html,\n        buttons,\n        default: \"ok\",\n        close: () => {\n          resolve(rolled ? roll : false);\n        },\n      }).render(true);\n    });\n  },\n\n  async Roll({\n    parts = [],\n    data = {},\n    skipDialog = false,\n    speaker = null,\n    flavor = null,\n    title = null,\n    chatMessage = true,\n    flags = {},\n  } = {}) {\n    let rolled = false;\n    const template = `${OSE.systemPath()}/templates/chat/roll-dialog.html`;\n    const dialogData = {\n      formula: parts.join(\" \"),\n      data,\n      rollMode: data.roll.blindroll\n        ? \"blindroll\"\n        : game.settings.get(\"core\", \"rollMode\"),\n      rollModes: CONFIG.Dice.rollModes,\n    };\n    const rollData = {\n      parts,\n      data,\n      title,\n      flavor,\n      speaker,\n      chatMessage,\n      flags,\n    };\n    if (skipDialog) {\n      return [\"melee\", \"missile\", \"attack\"].includes(data.roll.type)\n        ? OseDice.sendAttackRoll(rollData)\n        : OseDice.sendRoll(rollData);\n    }\n\n    const buttons = {\n      ok: {\n        label: game.i18n.localize(\"OSE.Roll\"),\n        icon: '<i class=\"fas fa-dice-d20\"></i>',\n        callback: (html) => {\n          rolled = true;\n          rollData.form = html[0].querySelector(\"form\");\n          roll = [\"melee\", \"missile\", \"attack\"].includes(data.roll.type)\n            ? OseDice.sendAttackRoll(rollData)\n            : OseDice.sendRoll(rollData);\n        },\n      },\n      cancel: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: game.i18n.localize(\"OSE.Cancel\"),\n        callback: (html) => {},\n      },\n    };\n\n    const html = await renderTemplate(template, dialogData);\n    let roll;\n\n    // Create Dialog window\n    return new Promise((resolve) => {\n      new Dialog({\n        title,\n        content: html,\n        buttons,\n        default: \"ok\",\n        close: () => {\n          resolve(rolled ? roll : false);\n        },\n      }).render(true);\n    });\n  },\n};\n\nexport default OseDice;\n","/**\n * @file The Character Creator application\n */\nimport OSE from \"../config\";\nimport OseDice from \"../helpers-dice\";\n\nexport default class OseCharacterCreator extends FormApplication {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    options.classes = [\"ose\", \"dialog\", \"creator\"];\n    options.id = \"character-creator\";\n    options.template = `${OSE.systemPath()}/templates/actors/dialogs/character-creation.html`;\n    options.width = 235;\n    options.submitOnClose = false;\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   *\n   * @type {string}\n   */\n  get title() {\n    return `${this.object.name}: ${game.i18n.localize(\"OSE.dialog.generator\")}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   *\n   * @returns {object} - Render data for the form application\n   */\n  getData() {\n    const data = foundry.utils.deepClone(this.object);\n    data.user = game.user;\n    data.config = CONFIG.OSE;\n    this.counters = {\n      str: 0,\n      wis: 0,\n      dex: 0,\n      int: 0,\n      cha: 0,\n      con: 0,\n      gold: 0,\n    };\n    this.stats = {\n      sum: 0,\n      avg: 0,\n      std: 0,\n    };\n    this.scores = {};\n    this.gold = 0;\n    return data;\n  }\n\n  /* -------------------------------------------- */\n\n  doStats(ev) {\n    const list = $(ev.currentTarget).closest(\".attribute-list\");\n    const scores = Object.values(this.scores);\n    const n = scores.length;\n    const sum = scores.reduce((acc, next) => acc + next.value, 0);\n    const mean = parseFloat(sum) / n;\n    const std = Math.sqrt(\n      scores\n        .map((x) => (x.value - mean) ** 2)\n        .reduce((acc, next) => acc + next, 0) / n\n    );\n\n    const stats = list.siblings(\".roll-stats\");\n    stats.find(\".sum\").text(sum);\n    stats.find(\".avg\").text(Math.round((10 * sum) / n) / 10);\n    stats.find(\".std\").text(Math.round(100 * std) / 100);\n\n    if (n >= 6) {\n      $(ev.currentTarget)\n        .closest(\"form\")\n        .find('button[type=\"submit\"]')\n        .removeAttr(\"disabled\");\n    }\n\n    this.object.stats = {\n      sum,\n      avg: Math.round((10 * sum) / n) / 10,\n      std: Math.round(100 * std) / 100,\n    };\n  }\n\n  async rollScore(score, options = {}) {\n    // Increase counter\n    this.counters[score] += 1;\n\n    const label =\n      score === \"gold\"\n        ? \"Gold\"\n        : game.i18n.localize(`OSE.scores.${score}.long`);\n    const rollParts = [\"3d6\"];\n    const data = {\n      roll: {},\n    };\n    if (options.skipMessage) {\n      const skipMessagRoll = new Roll(rollParts[0]);\n      await skipMessagRoll.evaluate();\n    }\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.dialog.generateScore\", {\n        score: label,\n        count: this.counters[score],\n      }),\n      title: game.i18n.format(\"OSE.dialog.generateScore\", {\n        score: label,\n        count: this.counters[score],\n      }),\n    });\n  }\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html.find(\"a.score-roll\").click((ev) => {\n      const el = ev.currentTarget.parentElement.parentElement;\n      const { score } = el.dataset;\n      this.rollScore(score, { event: ev }).then((r) => {\n        this.scores[score] = { value: r.total };\n        $(el).find(\"input\").val(r.total).trigger(\"change\");\n      });\n    });\n\n    html.find(\"a.gold-roll\").click((ev) => {\n      const el = ev.currentTarget.parentElement.parentElement.parentElement;\n      this.rollScore(\"gold\", { event: ev }).then((r) => {\n        this.gold = 10 * r.total;\n        $(el).find(\".gold-value\").val(this.gold);\n      });\n    });\n\n    html.find(\"input.score-value\").change((ev) => {\n      this.doStats(ev);\n    });\n\n    html.find(\"a.auto-roll\").click(async (ev) => {\n      const stats = [\"str\", \"int\", \"dex\", \"wis\", \"con\", \"cha\"];\n      for (const char of stats) {\n        const r = await this.rollScore(char, { event: ev, skipMessage: true });\n        this.scores[char] = { value: r.total };\n      }\n      this.doStats(ev);\n      const r = await this.rollScore(\"gold\", { event: ev, skipMessage: true });\n      this.gold = 10 * r.total;\n      this.submit();\n    });\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  async _onSubmit(\n    event,\n    { updateData = null, preventClose = false, preventRender = false } = {}\n  ) {\n    const extendedData = { ...updateData, system: { scores: this.scores } };\n    // eslint-disable-next-line no-underscore-dangle\n    super._onSubmit(event, {\n      updateData: extendedData,\n      preventClose,\n      preventRender,\n    });\n\n    // Gather scores\n    const speaker = ChatMessage.getSpeaker({ actor: this.object.actor });\n    const templateData = {\n      config: CONFIG.OSE,\n      scores: this.scores,\n      title: game.i18n.localize(\"OSE.dialog.generator\"),\n      stats: this.object.stats,\n      gold: this.gold,\n    };\n    const content = await renderTemplate(\n      `${OSE.systemPath()}/templates/chat/roll-creation.html`,\n      templateData\n    );\n\n    await ChatMessage.create({\n      content,\n      speaker,\n    });\n\n    // Generate gold\n    const itemData = {\n      name: game.i18n.localize(\"OSE.items.gp.short\"),\n      type: \"item\",\n      img: `${OSE.assetsPath}/gold.png`,\n      system: {\n        treasure: true,\n        cost: 1,\n        weight: 1,\n        quantity: {\n          value: this.gold,\n        },\n      },\n    };\n    this.object.createEmbeddedDocuments(\"Item\", [itemData]);\n  }\n\n  /**\n   * This method is called upon form submission after form data is validated\n   *\n   * @param {Event} event - The initial triggering submission event\n   * @param {object} formData - The object of validated form data with which to update the object\n   * @private\n   */\n  // eslint-disable-next-line no-underscore-dangle\n  async _updateObject(event, formData) {\n    event.preventDefault();\n    // Update the actor\n    await this.object.update(formData);\n\n    // Re-draw the updated sheet\n    this.object.sheet.render(true);\n  }\n}\n","/**\n * @file An application for deducting currency from an actor using the Shopping Cart feature\n */\n// eslint-disable-next-line no-unused-vars\nimport OSE from \"../config\";\n\nexport default class OseCharacterGpCost extends FormApplication {\n  constructor(event, preparedData, position) {\n    super(event, position);\n    this.object.preparedData = preparedData;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    options.classes = [\"ose\", \"dialog\", \"gp-cost\"];\n    options.id = \"sheet-gp-cost\";\n    options.template = `${OSE.systemPath()}/templates/actors/dialogs/gp-cost-dialog.html`;\n    options.width = 240;\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   *\n   * @type {string}\n   * @returns {string} - A localized window title\n   */\n  get title() {\n    return `${this.object.name}: ${game.i18n.localize(\n      \"OSE.dialog.shoppingCart\"\n    )}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   *\n   * @returns {object} - The template data\n   */\n  async getData() {\n    const data = await foundry.utils.deepClone(this.object.preparedData);\n    data.totalCost = await this.#getTotalCost(data);\n    data.user = game.user;\n    this.inventory = this.object.items;\n    return data;\n  }\n\n  async close(options) {\n    return super.close(options);\n  }\n\n  /**\n   * An object that provides options to _onSubmit\n   *\n   * @typedef submitOptions\n   * @property {boolean} preventClose - Should the application be stopped from closing?\n   * @property {boolean} preventRender - Should the application be stopped from rendering?\n   */\n\n  /**\n   * Override Foundry's default _onSubmit event to add our own behaviors\n   *\n   * @param {Event} event - The native form submit event\n   * @param {submitOptions} options - Options for the _onSubmit event\n   */\n  // eslint-disable-next-line no-underscore-dangle\n  async _onSubmit(event, { preventClose = false, preventRender = false } = {}) {\n    // eslint-disable-next-line no-underscore-dangle\n    super._onSubmit(event, {\n      preventClose,\n      preventRender,\n    });\n    // Generate gold\n    const totalCost = await this.#getTotalCost(await this.getData());\n    const gp = await this.object.items.find((item) => {\n      const itemData = item.system;\n      return (\n        (item.name === game.i18n.localize(\"OSE.items.gp.short\") ||\n          item.name === \"GP\") && // legacy behavior used GP, even for other languages\n        itemData.treasure\n      );\n    });\n    if (!gp) {\n      ui.notifications.error(game.i18n.localize(\"OSE.error.noGP\"));\n      return;\n    }\n    const newGP = gp.system.quantity.value - totalCost;\n    if (newGP >= 0) {\n      this.object.updateEmbeddedDocuments(\"Item\", [\n        { _id: gp.id, \"system.quantity.value\": newGP },\n      ]);\n    } else {\n      ui.notifications.error(game.i18n.localize(\"OSE.error.notEnoughGP\"));\n    }\n  }\n\n  /**\n   * This method is called upon form submission after form data is validated\n   *\n   * @param {Event} event - The initial triggering submission event\n   * @param {object} formData - The object of validated form data with which to update the object\n   * @private\n   */\n  async #updateObject(event, formData) {\n    event.preventDefault();\n\n    const speaker = ChatMessage.getSpeaker({ actor: this });\n    const templateData = await this.getData();\n    const content = await renderTemplate(\n      `${OSE.systemPath()}/templates/chat/inventory-list.html`,\n      templateData\n    );\n    ChatMessage.create({\n      content,\n      speaker,\n    });\n    // Update the actor\n    await this.object.update(formData);\n\n    // Re-draw the updated sheet\n    this.object.sheet.render(true);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async #getTotalCost(data) {\n    let total = 0;\n    const physical = new Set([\"item\", \"container\", \"weapon\", \"armor\"]);\n    data.items.forEach((item) => {\n      const itemData = item.system;\n      if (physical.has(item.type) && !itemData.treasure)\n        total += itemData.quantity.max\n          ? itemData.cost\n          : itemData.cost * itemData.quantity.value;\n    });\n    return total;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html.find(\"a.auto-deduct\").click(() => {\n      this.submit();\n    });\n  }\n}\n","/**\n * @file An application used for setting up roll modifiers\n */\nimport OSE from \"../config\";\n\nexport default class OseCharacterModifiers extends FormApplication {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    options.classes = [\"ose\", \"dialog\", \"modifiers\"];\n    options.id = \"sheet-modifiers\";\n    options.template = `${OSE.systemPath()}/templates/actors/dialogs/modifiers-dialog.html`;\n    options.width = 240;\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   *\n   * @returns {string} - The app title\n   */\n  get title() {\n    return `${this.object.name}: Modifiers`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   *\n   * @returns {object} - The template data\n   */\n  getData() {\n    const data = foundry.utils.deepClone(this.object);\n    data.user = game.user;\n    return data;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n}\n","/**\n * @file Contains helpers for various behaviors\n */\n\n/**\n * Checks if dialogs should be skipped, depending on settings\n *\n * @param {Event} event - Event that triggers a skippable dialog\n * @returns {boolean} - Returns true if dialog should be skipped\n */\nconst skipRollDialogCheck = (event) => {\n  const invertedCtrlBehavior = game.settings.get(\n    game.system.id,\n    \"invertedCtrlBehavior\"\n  );\n  return invertedCtrlBehavior\n    ? !(event && (event.ctrlKey || event.metaKey))\n    : event && (event.ctrlKey || event.metaKey);\n};\n\nexport default skipRollDialogCheck;\n","/**\n * @file An application used to manage Actor configuration.\n */\nimport OSE from \"../config\";\n\nexport default class OseEntityTweaks extends FormApplication {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    options.id = \"sheet-tweaks\";\n    options.classes = [\"sheet-tweaks\"];\n    options.template = `${OSE.systemPath()}/templates/actors/dialogs/tweaks-dialog.html`;\n    options.width = 380;\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   *\n   * @type {string}\n   * @returns {string} - The app title\n   */\n  get title() {\n    return `${this.object.name}: ${game.i18n.localize(\"OSE.dialog.tweaks\")}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   *\n   * @returns {object} - The template data\n   */\n  getData() {\n    const data = foundry.utils.deepClone(this.object);\n    if (data.type === \"character\") {\n      data.isCharacter = true;\n    }\n    data.user = game.user;\n    data.config = {\n      ...CONFIG.OSE,\n      ascendingAC: game.settings.get(game.system.id, \"ascendingAC\"),\n    };\n    return data;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n\n  /**\n   * This method is called upon form submission after form data is validated\n   *\n   * @param {Event} event - The initial triggering submission event\n   * @param {object} formData - The object of validated form data with which to update the object\n   * @private\n   */\n  // eslint-disable-next-line no-underscore-dangle\n  async _updateObject(event, formData) {\n    event.preventDefault();\n    // Update the actor\n    await this.object.update(formData);\n    // Re-draw the updated sheet\n    // eslint-disable-next-line no-underscore-dangle\n    await this.object.sheet._render(true);\n  }\n}\n","/**\n * @file The base class we use for Character and Monster sheets. Shared behavior goes here!\n */\nimport skipRollDialogCheck from \"../helpers-behaviour\";\nimport OSE from \"../config\";\nimport OseEntityTweaks from \"../dialog/entity-tweaks\";\n\nexport default class OseActorSheet extends ActorSheet {\n  getData() {\n    const data = foundry.utils.deepClone(super.getData().data);\n    data.owner = this.actor.isOwner;\n    data.editable = this.actor.sheet.isEditable;\n\n    data.config = {\n      ...CONFIG.OSE,\n      ascendingAC: game.settings.get(game.system.id, \"ascendingAC\"),\n      initiative: game.settings.get(game.system.id, \"initiative\") !== \"group\",\n      encumbrance: game.settings.get(game.system.id, \"encumbranceOption\"),\n    };\n    data.isNew = this.actor.isNew();\n\n    return data;\n  }\n\n  activateEditor(name, options, initialContent) {\n    // remove some controls to the editor as the space is lacking\n    // if (name === \"data.details.description\") {\n    //   options.toolbar = \"styleselect bullist hr table removeFormat save\";\n    // }\n    super.activateEditor(name, options, initialContent);\n  }\n\n  // Helpers\n\n  _getItemFromActor(event) {\n    const li = event.currentTarget.closest(\".item-entry\");\n    return this.actor.items.get(li.dataset.itemId);\n  }\n\n  // end Helpers\n\n  _toggleItemCategory(event) {\n    event.preventDefault();\n    const targetCategory = $(event.currentTarget);\n    const items = targetCategory.next(\".item-list\");\n\n    if (items.css(\"display\") === \"none\") {\n      const el = $(event.currentTarget).find(\".fas.fa-caret-right\");\n      el.removeClass(\"fa-caret-right\");\n      el.addClass(\"fa-caret-down\");\n\n      items.slideDown(200);\n    } else {\n      const el = $(event.currentTarget).find(\".fas.fa-caret-down\");\n      el.removeClass(\"fa-caret-down\");\n      el.addClass(\"fa-caret-right\");\n\n      items.slideUp(200);\n    }\n  }\n\n  _toggleContainedItems(event) {\n    event.preventDefault();\n    const targetItems = $(event.target.closest(\".container\"));\n    const items = targetItems.find(\".item-list.contained-items\");\n\n    if (items.css(\"display\") === \"none\") {\n      const el = targetItems.find(\".fas.fa-caret-right\");\n      el.removeClass(\"fa-caret-right\");\n      el.addClass(\"fa-caret-down\");\n\n      items.slideDown(200);\n    } else {\n      const el = targetItems.find(\".fas.fa-caret-down\");\n      el.removeClass(\"fa-caret-down\");\n      el.addClass(\"fa-caret-right\");\n\n      items.slideUp(200);\n    }\n  }\n\n  _toggleItemSummary(event) {\n    event.preventDefault();\n    const itemSummary = event.currentTarget\n      .closest(\".item-entry.item\")\n      .querySelector(\".item-summary\");\n    itemSummary.style.display = itemSummary.style.display === \"\" ? \"block\" : \"\";\n  }\n\n  async _displayItemInChat(event) {\n    const li = $(event.currentTarget).closest(\".item-entry\");\n    const item = this.actor.items.get(li.data(\"itemId\"));\n    item.show();\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, consistent-return\n  async _removeItemFromActor(item) {\n    if (item.type === \"ability\" || item.type === \"spell\") {\n      // eslint-disable-next-line no-underscore-dangle\n      return this.actor.deleteEmbeddedDocuments(\"Item\", [item._id]);\n    }\n    if (item.type !== \"container\" && item.system.containerId !== \"\") {\n      const { containerId } = item.system;\n      const newItemIds = this.actor.items\n        .get(containerId)\n        .system.itemIds.filter((o) => o !== item.id);\n\n      await this.actor.updateEmbeddedDocuments(\"Item\", [\n        { _id: containerId, system: { itemIds: newItemIds } },\n      ]);\n    }\n    if (item.type === \"container\" && item.system.itemIds) {\n      const containedItems = item.system.itemIds;\n      const updateData = containedItems.reduce((acc, val) => {\n        // Only create update data for items that still exist on the actor\n        if(this.actor.items.get(val))\n          acc.push({ _id: val, \"system.containerId\": \"\" });\n        return acc;\n      }, []);\n\n      await this.actor.updateEmbeddedDocuments(\"Item\", updateData);\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    this.actor.deleteEmbeddedDocuments(\"Item\", [item._id]);\n  }\n\n  /**\n   * @param event\n   * @param {bool} decrement\n   */\n  _useConsumable(event, decrement) {\n    const item = this._getItemFromActor(event);\n    if (!item) return null;\n    let {\n      quantity: { value: quantity },\n    } = item.system;\n    item.update({\n      \"system.quantity.value\": decrement ? --quantity : ++quantity,\n    });\n  }\n\n  async _onSpellChange(event) {\n    event.preventDefault();\n    const item = this._getItemFromActor(event);\n    if (event.target.dataset.field === \"cast\") {\n      return item.update({ \"system.cast\": parseInt(event.target.value) });\n    }\n    if (event.target.dataset.field === \"memorize\") {\n      return item.update({\n        \"system.memorized\": parseInt(event.target.value),\n      });\n    }\n  }\n\n  async _resetSpells(event) {\n    const spells = $(event.currentTarget)\n      .closest(\".inventory.spells\")\n      .find(\".item-entry\");\n    spells.each((_, el) => {\n      const { itemId } = el.dataset;\n      const item = this.actor.items.get(itemId);\n      const itemData = item?.system;\n      item.update({\n        _id: item.id,\n        \"system.cast\": itemData.memorized,\n      });\n    });\n  }\n\n  async _rollAbility(event) {\n    const item = this._getItemFromActor(event);\n    const itemData = item?.system;\n    if (item.type === \"weapon\") {\n      if (this.actor.type === \"monster\") {\n        item.update({\n          \"system.counter.value\": itemData.counter.value - 1,\n        });\n      }\n      item.rollWeapon({ skipDialog: skipRollDialogCheck(event) });\n    } else if (item.type == \"spell\") {\n      item.spendSpell({ skipDialog: skipRollDialogCheck(event) });\n    } else {\n      item.rollFormula({ skipDialog: skipRollDialogCheck(event) });\n    }\n  }\n\n  async _rollSave(event) {\n    const actorObject = this.actor;\n    const element = event.currentTarget;\n    const { save } = element.parentElement.parentElement.dataset;\n    actorObject.rollSave(save, { event });\n  }\n\n  async _rollAttack(event) {\n    const actorObject = this.actor;\n    const element = event.currentTarget;\n    const { attack } = element.parentElement.parentElement.dataset;\n    actorObject.targetAttack({ roll: {} }, attack, {\n      type: attack,\n      skipDialog: skipRollDialogCheck(event),\n    });\n  }\n\n  _onSortItem(event, itemData) {\n    const source = this.actor.items.get(itemData._id);\n    const siblings = this.actor.items.filter(\n      (i) => i.data._id !== source.data._id\n    );\n    const dropTarget = event.target.closest(\"[data-item-id]\");\n    const targetId = dropTarget ? dropTarget.dataset.itemId : null;\n    const target = siblings.find((s) => s.data._id === targetId);\n    if (!target) throw new Error(`Couldn't drop near ${event.target}`);\n    const targetData = target?.system;\n\n    // Dragging items into a container\n    if (\n      (target?.type === \"container\" || target?.data?.type === \"container\") &&\n      targetData.containerId === \"\"\n    ) {\n      this.actor.updateEmbeddedDocuments(\"Item\", [\n        { _id: source.id, \"system.containerId\": target.id },\n      ]);\n      return;\n    }\n    if (source?.system.containerId !== \"\") {\n      this.actor.updateEmbeddedDocuments(\"Item\", [\n        { _id: source.id, \"system.containerId\": \"\" },\n      ]);\n    }\n\n    super._onSortItem(event, itemData);\n  }\n\n  _onDragStart(event) {\n    const li = event.currentTarget;\n    let itemIdsArray = [];\n    if (event.target.classList.contains(\"content-link\")) return;\n\n    let dragData;\n\n    // Owned Items\n    if (li.dataset.itemId) {\n      const item = this.actor.items.get(li.dataset.itemId);\n      dragData = item.toDragData();\n      dragData.item = item;\n      dragData.type = \"Item\";\n      if (item.type === \"container\" && item.system.itemIds.length > 0) {\n        // otherwise JSON.stringify will quadruple stringify for some reason\n        itemIdsArray = item.system.itemIds;\n      }\n    }\n\n    // Create drag data\n    dragData.actorId = this.actor.id;\n    dragData.sceneId = this.actor.isToken ? canvas.scene?.id : null;\n    dragData.tokenId = this.actor.isToken ? this.actor.token.id : null;\n    dragData.pack = this.actor.pack;\n\n    // Active Effect\n    if (li.dataset.effectId) {\n      const effect = this.actor.effects.get(li.dataset.effectId);\n      dragData.type = \"ActiveEffect\";\n      dragData.data = effect.data;\n    }\n\n    // Set data transfer\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify(dragData, (key, value) => {\n        if (key === \"itemIds\") {\n          // something about how this Array is created makes its elements not real Array elements\n          // we go through this hoop to trick stringify into creating our string\n          return JSON.stringify(itemIdsArray);\n        }\n        return value;\n      })\n    );\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  async _onDropFolder(event, data) {\n    const folder = await fromUuid(data.uuid);\n    if (!folder || folder.type !== \"Item\") return;\n\n    let itemArray = folder.contents || [];\n\n    folder.getSubfolders(true).forEach((subfolder) => {\n      itemArray.push(...subfolder.contents);\n    });\n\n    // Compendium items\n    if (itemArray.length > 0 && itemArray[0]?.uuid?.includes(\"Compendium\")) {\n      const items = [];\n      itemArray.forEach(async (item) => {\n        items.push(await fromUuid(item.uuid));\n      });\n      itemArray = items;\n    }\n\n    this._onDropItemCreate(itemArray);\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  async _onDropItem(event, data) {\n    const targetId = event.target.closest(\".item\")?.dataset?.itemId;\n    const targetItem = this.actor.items.get(targetId);\n    const targetIsContainer = targetItem?.type === \"container\";\n\n    // This eats the event.target as it is parsed with the TextEditor.\n    const item = await Item.implementation.fromDropData(data);\n    const itemData = item.toObject();\n\n    const exists = !!this.actor.items.get(item.id);\n\n    const isContainer = this.actor.items.get(item.system.containerId);\n\n    // Issue: https://github.com/vttred/ose/issues/357\n    if (item.id === targetId) return;\n\n    if (!exists && !targetIsContainer)\n      // eslint-disable-next-line no-underscore-dangle\n      return this._onDropItemCreate([itemData]);\n\n    // eslint-disable-next-line no-underscore-dangle\n    if (isContainer) return this._onContainerItemRemove(item, isContainer);\n\n    // eslint-disable-next-line no-underscore-dangle\n    if (targetIsContainer) return this._onContainerItemAdd(item, targetItem);\n  }\n\n  async _onContainerItemRemove(item, container) {\n    const newList = container.system.itemIds.filter((s) => s != item.id);\n    const itemObj = this.object.items.get(item.id);\n    await container.update({ system: { itemIds: newList } });\n    await itemObj.update({ system: { containerId: \"\" } });\n  }\n\n  async _onContainerItemAdd(item, target) {\n    const alreadyExistsInActor = target.parent.items.find(\n      (i) => i.id === item.id\n    );\n    let latestItem = item;\n    if (!alreadyExistsInActor) {\n      // eslint-disable-next-line no-underscore-dangle\n      const newItem = await this._onDropItemCreate([item.toObject()]);\n      latestItem = newItem.pop();\n    }\n\n    const alreadyExistsInContainer = target.system.itemIds.find(\n      (i) => i.id === latestItem.id\n    );\n    if (!alreadyExistsInContainer) {\n      const newList = [...target.system.itemIds, latestItem.id];\n      await target.update({ system: { itemIds: newList } });\n      await latestItem.update({ system: { containerId: target.id } });\n    }\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, consistent-return\n  async _onDropItemCreate(droppedItem, targetContainer = false) {\n    // override to fix hidden items because their original containers don't exist on this actor\n    const droppedItemArray = Array.isArray(droppedItem)\n      ? droppedItem\n      : [droppedItem];\n    droppedItemArray.forEach((item) => {\n      if (item.system.containerId && item.system.containerId !== \"\")\n        // eslint-disable-next-line no-param-reassign\n        item.system.containerId = \"\";\n      if (\n        item.type === \"container\" &&\n        typeof item.system.itemIds === \"string\"\n      ) {\n        // itemIds was double stringified to fix strange behavior with stringify blanking our Arrays\n        const containedItems = JSON.parse(item.system.itemIds);\n        containedItems.forEach((containedItem) => {\n          // eslint-disable-next-line no-param-reassign\n          containedItem.system.containerId = \"\";\n        });\n        droppedItem.push(...containedItems);\n      }\n    });\n    if (!targetContainer) {\n      return this.actor.createEmbeddedDocuments(\"Item\", droppedItem);\n    }\n\n    const { itemIds } = targetContainer.system;\n    itemIds.push(droppedItem.id);\n    const item = this.actor.items.get(droppedItem[0].id);\n    await item.update({ system: { containerId: targetContainer.id } });\n    await targetContainer.update({ system: { itemIds } });\n  }\n\n  /* -------------------------------------------- */\n\n  async _chooseItemType(choices = [\"weapon\", \"armor\", \"shield\", \"gear\"]) {\n    const templateData = { types: choices };\n    const dlg = await renderTemplate(\n      `${OSE.systemPath()}/templates/items/entity-create.html`,\n      templateData\n    );\n    // Create Dialog window\n    return new Promise((resolve) => {\n      new Dialog({\n        title: game.i18n.localize(\"OSE.dialog.createItem\"),\n        content: dlg,\n        buttons: {\n          ok: {\n            label: game.i18n.localize(\"OSE.Ok\"),\n            icon: '<i class=\"fas fa-check\"></i>',\n            callback: (html) => {\n              resolve({\n                type: html.find('select[name=\"type\"]').val(),\n                name: html.find('input[name=\"name\"]').val(),\n              });\n            },\n          },\n          cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: game.i18n.localize(\"OSE.Cancel\"),\n          },\n        },\n        default: \"ok\",\n      }).render(true);\n    });\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  _createItem(event) {\n    event.preventDefault();\n    const header = event.currentTarget;\n    const { treasure, type, lvl } = header.dataset;\n    const createItem = (type, name) => ({\n      name: name || `New ${type.capitalize()}`,\n      type,\n    });\n\n    // Getting back to main logic\n    if (type === \"choice\") {\n      const choices = header.dataset.choices.split(\",\");\n      this._chooseItemType(choices).then((dialogInput) => {\n        const itemData = createItem(dialogInput.type, dialogInput.name);\n        this.actor.createEmbeddedDocuments(\"Item\", [itemData], {});\n      });\n    } else {\n      const itemData = createItem(type);\n      if (treasure) itemData.system = { treasure: true };\n      // when creating a new spell on the character sheet, we need to set the level\n      if (type === \"spell\") itemData.system = lvl ? { lvl } : {lvl: 1};\n      return this.actor.createEmbeddedDocuments(\"Item\", [itemData], {});\n    }\n  }\n\n  async _updateItemQuantity(event) {\n    event.preventDefault();\n    const item = this._getItemFromActor(event);\n\n    if (event.target.dataset.field === \"value\") {\n      return item.update({\n        \"system.quantity.value\": parseInt(event.target.value),\n      });\n    }\n    if (event.target.dataset.field === \"max\") {\n      return item.update({\n        \"system.quantity.max\": parseInt(event.target.value),\n      });\n    }\n  }\n\n  // Override to set resizable initial size\n  // eslint-disable-next-line no-underscore-dangle\n  async _renderInner(...args) {\n    const html = await super._renderInner(...args);\n    this.form = html[0];\n\n    // Resize resizable classes\n    const resizable = html.find(\".resizable\");\n    if (resizable.length === 0) {\n      return;\n    }\n    resizable.each((_, el) => {\n      const heightDelta = this.position.height - this.options.height;\n      el.style.height = `${heightDelta + parseInt(el.dataset.baseSize)}px`;\n    });\n    return html;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  async _onResize(event) {\n    // eslint-disable-next-line no-underscore-dangle\n    super._onResize(event);\n\n    const html = $(this.form);\n    const resizable = html.find(\".resizable\");\n    if (resizable.length === 0) {\n      return;\n    }\n    // Resize divs\n    resizable.each((_, el) => {\n      const heightDelta = this.position.height - this.options.height;\n      el.style.height = `${heightDelta + parseInt(el.dataset.baseSize)}px`;\n    });\n    // Resize editors\n    const editors = html.find(\".editor\");\n    editors.each((id, editor) => {\n      const container = editor.closest(\".resizable-editor\");\n      if (container) {\n        const heightDelta = this.position.height - this.options.height;\n        editor.style.height = `${\n          heightDelta + parseInt(container.dataset.editorSize)\n        }px`;\n      }\n    });\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  _onConfigureActor(event) {\n    event.preventDefault();\n    new OseEntityTweaks(this.actor, {\n      top: this.position.top + 40,\n      left: this.position.left + (this.position.width - 400) / 2,\n    }).render(true);\n  }\n\n  /**\n   * Extend and override the sheet header buttons\n   *\n   * @override\n   */\n  _getHeaderButtons() {\n    let buttons = super._getHeaderButtons();\n\n    // Token Configuration\n    const canConfigure = game.user.isGM || this.actor.isOwner;\n    if (this.options.editable && canConfigure) {\n      buttons = [\n        {\n          label: game.i18n.localize(\"OSE.dialog.tweaks\"),\n          class: \"configure-actor\",\n          icon: \"fas fa-code\",\n          onclick: (event) => this._onConfigureActor(event),\n        },\n      ].concat(buttons);\n    }\n    return buttons;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Attributes\n    html.find(\".saving-throw .attribute-name a\").click((event) => {\n      this._rollSave(event);\n    });\n\n    html.find(\".attack a\").click((event) => {\n      this._rollAttack(event);\n    });\n\n    html.find(\".hit-dice .attribute-name\").click((event) => {\n      this.actor.rollHitDice({ event });\n    });\n\n    // Items (Abilities, Inventory and Spells)\n    html.find(\".item-rollable .item-image\").click(async (event) => {\n      this._rollAbility(event);\n    });\n\n    html.find(\".inventory .item-category-title\").click((event) => {\n      this._toggleItemCategory(event);\n    });\n    html.find(\".inventory .item-category-title input\").click((event) => {\n      event.stopPropagation();\n    });\n    html.find(\".inventory .category-caret\").click((event) => {\n      this._toggleContainedItems(event);\n    });\n\n    html.find(\".item-name\").click((event) => {\n      this._toggleItemSummary(event);\n    });\n\n    html.find(\".item-controls .item-show\").click(async (event) => {\n      this._displayItemInChat(event);\n    });\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.options.editable) return;\n\n    // Item Management\n    html.find(\".item-create\").click((event) => {\n      // eslint-disable-next-line no-underscore-dangle\n      this._createItem(event);\n    });\n\n    html.find(\".item-edit\").click((event) => {\n      const item = this._getItemFromActor(event);\n      item.sheet.render(true);\n    });\n\n    html.find(\".item-delete\").click((event) => {\n      const item = this._getItemFromActor(event);\n\n      if (item?.type !== \"container\" || !item?.system?.itemIds?.length > 0)\n        return this._removeItemFromActor(item);\n\n      Dialog.confirm({\n        title: game.i18n.localize(\"OSE.dialog.deleteContainer\"),\n        content: game.i18n.localize(\"OSE.dialog.confirmDeleteContainer\"),\n        yes: () => {\n          this._removeItemFromActor(item);\n        },\n        defaultYes: false,\n      });\n    });\n\n    html\n      .find(\".quantity input\")\n      .click((ev) => ev.target.select())\n      .change(this._updateItemQuantity.bind(this));\n\n    // Consumables\n    html.find(\".consumable-counter .full-mark\").click((event) => {\n      this._useConsumable(event, true);\n    });\n    html.find(\".consumable-counter .empty-mark\").click((event) => {\n      this._useConsumable(event, false);\n    });\n\n    // Spells\n    html\n      .find(\".memorize input\")\n      .click((event) => event.target.select())\n      .change(this._onSpellChange.bind(this));\n\n    html\n      .find(\".spells .item-reset[data-action='reset-spells']\")\n      .click((event) => {\n        this._resetSpells(event);\n      });\n  }\n}\n","/**\n * @file Extend the basic ActorSheet with some very simple modifications\n */\nimport OSE from \"../config\";\nimport OseCharacterCreator from \"../dialog/character-creation\";\nimport OseCharacterGpCost from \"../dialog/character-gp-cost\";\nimport OseCharacterModifiers from \"../dialog/character-modifiers\";\nimport OseActorSheet from \"./actor-sheet\";\n\nexport default class OseActorSheetCharacter extends OseActorSheet {\n  /**\n   * Extend and override the default options used by the 5e Actor Sheet\n   *\n   * @returns {object} - The default options for this sheet.\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"ose\", \"sheet\", \"actor\", \"character\"],\n      template: `${OSE.systemPath()}/templates/actors/character-sheet.html`,\n      width: 450,\n      height: 530,\n      resizable: true,\n      tabs: [\n        {\n          navSelector: \".sheet-tabs\",\n          contentSelector: \".sheet-body\",\n          initial: \"attributes\",\n        },\n      ],\n      scrollY: [\".inventory\"],\n    });\n  }\n\n  /**\n   * Organize and classify Owned Items for Character sheets\n   *\n   * @param data\n   * @private\n   */\n  _prepareItems(data) {\n    // Assign and return\n    data.owned = {\n      items: this.actor.system.items,\n      armors: this.actor.system.armor,\n      weapons: this.actor.system.weapons,\n      treasures: this.actor.system.treasures,\n      containers: this.actor.system.containers,\n    };\n    data.treasure = this.actor.system.carriedTreasure,\n    data.containers = this.actor.system.containers;\n    data.abilities = this.actor.system.abilities;\n    data.spells = this.actor.system.spells.spellList;\n    data.slots = this.actor.system.spellSlots;\n\n    // These values are getters that aren't getting\n    // cloned when `this.actor.system` is cloned\n    data.system.usesAscendingAC = this.actor.system.usesAscendingAC;\n    data.system.meleeMod = this.actor.system.meleeMod;\n    data.system.rangedMod = this.actor.system.rangedMod;\n    data.system.init = this.actor.system.init;\n\n    // Sort by sort order (see ActorSheet)\n    [\n      ...Object.values(data.owned),\n      ...Object.values(data?.spells?.spellList || {}),\n      data.abilities,\n    ].forEach((o) => o.sort((a, b) => (a.sort || 0) - (b.sort || 0)));\n  }\n\n  generateScores() {\n    new OseCharacterCreator(this.actor, {\n      top: this.position.top + 40,\n      left: this.position.left + (this.position.width - 400) / 2,\n    }).render(true);\n  }\n\n  /**\n   * Prepare data for rendering the Actor sheet\n   * The prepared data object contains both the actor data as well as additional sheet options\n   */\n  async getData() {\n    const data = super.getData();\n    \n    // Prepare owned items\n    this._prepareItems(data);\n\n    data.enrichedBiography = await TextEditor.enrichHTML(\n      this.object.system.details.biography,\n      { async: true }\n    );\n    data.enrichedNotes = await TextEditor.enrichHTML(\n      this.object.system.details.notes,\n      { async: true }\n    );\n    return data;\n  }\n\n  async _chooseLang() {\n    const choices = CONFIG.OSE.languages;\n\n    const templateData = { choices };\n    const dlg = await renderTemplate(\n      `${OSE.systemPath()}/templates/actors/dialogs/lang-create.html`,\n      templateData\n    );\n    // Create Dialog window\n    return new Promise((resolve) => {\n      new Dialog({\n        title: \"\",\n        content: dlg,\n        buttons: {\n          ok: {\n            label: game.i18n.localize(\"OSE.Ok\"),\n            icon: '<i class=\"fas fa-check\"></i>',\n            callback: (html) => {\n              resolve({\n                choice: html.find('select[name=\"choice\"]').val(),\n              });\n            },\n          },\n          cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: game.i18n.localize(\"OSE.Cancel\"),\n          },\n        },\n        default: \"ok\",\n      }).render(true);\n    });\n  }\n\n  _pushLang(table) {\n    const data = this.actor.system;\n    let update = data[table]; // V10 compatibility\n    this._chooseLang().then((dialogInput) => {\n      const name = CONFIG.OSE.languages[dialogInput.choice];\n      if (update.value) {\n        update.value.push(name);\n      } else {\n        update = { value: [name] };\n      }\n\n      const newData = {};\n      newData[table] = update;\n      return this.actor.update({ system: newData });\n    });\n  }\n\n  _popLang(table, lang) {\n    const data = this.actor.system;\n    const update = data[table].value.filter((el) => el != lang);\n    const newData = {};\n    newData[table] = { value: update };\n    return this.actor.update({ system: newData });\n  }\n\n  /* -------------------------------------------- */\n\n  _onShowModifiers(event) {\n    event.preventDefault();\n    new OseCharacterModifiers(this.actor, {\n      top: this.position.top + 40,\n      left: this.position.left + (this.position.width - 400) / 2,\n    }).render(true);\n  }\n\n  async _onShowGpCost(event, preparedData) {\n    event.preventDefault();\n    new OseCharacterGpCost(this.actor, preparedData, {\n      top: this.position.top + 40,\n      left: this.position.left + (this.position.width - 400) / 2,\n    }).render(true);\n  }\n\n  async _onShowItemTooltip(event) {\n    const templateData = {};\n    const dlg = await renderTemplate(\n      `${OSE.systemPath()}/templates/actors/partials/character-item-tooltip.html`,\n      templateData\n    );\n    document.querySelector(\".game\").append(dlg);\n  }\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param html - {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".ability-score .attribute-name a\").click((ev) => {\n      const actorObject = this.actor;\n      const element = ev.currentTarget;\n      const { score } = element.parentElement.parentElement.dataset;\n      const { stat } = element.parentElement.parentElement.dataset;\n      if (score) {\n        actorObject.rollCheck(score, { event: ev });\n      } else if (stat === \"lr\") {\n        actorObject.rollLoyalty(score, { event: ev });\n      }\n    });\n\n    html.find(\".exploration .attribute-name a\").click((ev) => {\n      const actorObject = this.actor;\n      const element = ev.currentTarget;\n      const expl = element.parentElement.parentElement.dataset.exploration;\n      actorObject.rollExploration(expl, { event: ev });\n    });\n\n    html.find(\"a[data-action='modifiers']\").click((ev) => {\n      this._onShowModifiers(ev);\n    });\n\n    html.find(\"a[data-action='gp-cost']\").click((ev) => {\n      this._onShowGpCost(ev, this.getData());\n    });\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.options.editable) return;\n\n    // Language Management\n    html.find(\".item-push\").click((ev) => {\n      ev.preventDefault();\n      const header = ev.currentTarget;\n      const table = header.dataset.array;\n      this._pushLang(table);\n    });\n\n    html.find(\".item-pop\").click((ev) => {\n      ev.preventDefault();\n      const header = ev.currentTarget;\n      const table = header.dataset.array;\n      this._popLang(table, $(ev.currentTarget).closest(\".item\").data(\"lang\"));\n    });\n\n    // Toggle Equipment\n    html.find(\".item-toggle\").click(async (ev) => {\n      const li = $(ev.currentTarget).parents(\".item\");\n      const item = this.actor.items.get(li.data(\"itemId\"));\n      await item.update({\n        system: {\n          equipped: !item.system.equipped,\n        },\n      });\n\n    });\n\n    html.find(\"a[data-action='generate-scores']\").click((ev) => {\n      this.generateScores(ev);\n    });\n  }\n}\n","/**\n * @file A class to handle the nested AC/AAC props on OseDataModelCharacter.\n */\n\ninterface CharacterAC {\n  base: number;\n  naked: number;\n  shield: number;\n  value: number;\n  mod: number;\n}\n\nexport default class OseDataModelCharacterAC implements CharacterAC {\n  static baseAscending = 10;\n\n  static baseDescending = 9;\n\n  static propAscending = \"aac\";\n\n  static propDescending = \"ac\";\n\n  #armor;\n\n  #dexMod;\n\n  #mod;\n\n  #acProp;\n\n  #isAscending;\n\n  /**\n   * AC Constructor\n   *\n   * @param {boolean} isAscending - Is this meant to represent ascending or descending AC?\n   * @param {Item} armor - Currently equipped Items with type of armor\n   * @param {number} dexMod - The bonus/penalty, from -3 to +3, applied to AC.\n   * @param {number} mod - Miscellaneous modifier to AC\n   */\n  constructor(isAscending = false, armor: Item[] = [], dexMod = 0, mod = 0) {\n    this.#isAscending = isAscending;\n    this.#armor = armor;\n    this.#dexMod = dexMod;\n    this.#mod = mod;\n    this.#acProp = this.#isAscending\n      ? OseDataModelCharacterAC.propAscending\n      : OseDataModelCharacterAC.propDescending;\n  }\n\n  #getShieldBonus() {\n    return (\n      this.#armor.find(({ system: { type } }: Item) => type === \"shield\")\n        ?.system[this.#acProp].value || 0\n    );\n  }\n\n  /**\n   * The base AC value for a character, depending on\n   * if we're using ascending or descending AC\n   *\n   * @returns {boolean} - Truthy for ascending, falsy for descending\n   */\n  get base() {\n    return this.#isAscending\n      ? OseDataModelCharacterAC.baseAscending\n      : OseDataModelCharacterAC.baseDescending;\n  }\n\n  /**\n   * A character's armor class without armor or a shield\n   *\n   * @returns {number} - The character's naked AC\n   */\n  get naked() {\n    return this.#isAscending\n      ? this.base + this.#dexMod\n      : this.base - this.#dexMod;\n  }\n\n  /**\n   * A character's shield bonus, if any\n   *\n   * @returns {number} - The shield bonus\n   */\n  get shield() {\n    return this.#getShieldBonus();\n  }\n\n  /**\n   * The AC value from worn armor\n   *\n   * @todo After data migration, armor should be a bonus to naked AC.\n   * @returns {number} - The AC value from worn armor\n   */\n  get #armored() {\n    const armor = this.#armor.find(\n      ({ system: { type } }: Item) => type !== \"shield\"\n    )?.system[this.#acProp].value;\n    // Null if any falsy value but 0\n    if (!armor && armor !== 0) return null;\n\n    return this.#isAscending ? armor + this.#dexMod : armor - this.#dexMod;\n  }\n\n  /**\n   * A character's armor class\n   *\n   * @todo Data migration for armor with AC/AAC to act as a bonus, not an override\n   * @returns {number} - The creature's AC\n   */\n  get value() {\n    const base = this.#armored === null ? this.naked : this.#armored;\n    return this.#isAscending\n      ? base + this.shield + this.mod\n      : base - this.shield - this.mod;\n  }\n\n  // @TODO This will need to be editable once we get to creatures\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  set value(_change: number) {} // eslint-disable-line class-methods-use-this\n\n  /**\n   * A character's miscellaneous armor class modifier\n   *\n   * @returns {number} - The creature's AC modifier\n   */\n  get mod() {\n    return this.#mod;\n  }\n\n  set mod(change) {\n    this.#mod = change;\n  }\n}\n","/**\n * @file A class representing the character's ability to move, depending on encumbrance state\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport OseDataModelCharacterEncumbrance from \"./data-model-character-encumbrance\";\n\nexport interface CharacterMove {\n  base: number;\n  encounter: number;\n  overland: number;\n}\n\n/**\n * A class representing a character's move speeds.\n */\nexport default class OseDataModelCharacterMove implements CharacterMove {\n  static baseMoveRate = 120;\n\n  #moveBase;\n\n  #autocalculate;\n\n  #encumbranceVariant;\n\n  #overEncumbranceLimit;\n\n  #atFirstBreakpoint;\n\n  #atSecondBreakpoint;\n\n  #atThirdBreakpoint;\n\n  /**\n   * The constructor\n   *\n   * @param {OseDataModelCharacterEncumbrance} encumbrance - An object representing the character's encumbrance values\n   * @param {boolean} shouldCalculateMovement - Should the class autocalculate movement?\n   * @param {number} base - The base move rate for the actor\n   */\n  constructor(\n    encumbrance: OseDataModelCharacterEncumbrance = new OseDataModelCharacterEncumbrance(),\n    shouldCalculateMovement = true,\n    base = OseDataModelCharacterMove.baseMoveRate\n  ) {\n    // Props necessary for any encumbrance variant\n    this.#moveBase = base;\n    this.#autocalculate = shouldCalculateMovement;\n    this.#encumbranceVariant = encumbrance.variant;\n    this.#overEncumbranceLimit = encumbrance.encumbered;\n\n    // Encumbrance Breakpoints\n    this.#atFirstBreakpoint = encumbrance.atFirstBreakpoint;\n    this.#atSecondBreakpoint = encumbrance.atSecondBreakpoint;\n    this.#atThirdBreakpoint = encumbrance.atThirdBreakpoint;\n  }\n\n  #derivedSpeed() {\n    if (this.#overEncumbranceLimit) return 0;\n    if (this.#atThirdBreakpoint) return this.#moveBase * 0.25;\n    if (this.#atSecondBreakpoint) return this.#moveBase * 0.5;\n    return this.#atFirstBreakpoint ? this.#moveBase * 0.75 : this.#moveBase;\n  }\n\n  get base() {\n    // Manual entry for movement\n    if (!this.#autocalculate || this.#encumbranceVariant === \"disabled\")\n      return this.#moveBase;\n    // Automatic calculation for movement\n    return this.#derivedSpeed();\n  }\n\n  set base(value) {\n    this.#moveBase = value;\n  }\n\n  get encounter() {\n    return this.base / 3;\n  }\n\n  get overland() {\n    return this.base / 5;\n  }\n}\n","/**\n * @file A class representing a Character's ability scores.\n */\ntype IncomingScore = {\n  value: number;\n  bonus: number;\n};\n\ntype Scores = {\n  str: BaseScore;\n  int: BaseScore;\n  wis: BaseScore;\n  dex: BaseScore;\n  con: BaseScore;\n  cha: BaseScore;\n};\n\ntype BaseScore = IncomingScore & { mod: number };\n\nexport interface CharacterScores {\n  str: BaseScore & { od: number };\n  int: BaseScore & { literacy: string; spoken: string };\n  wis: BaseScore;\n  dex: BaseScore & { init: number };\n  con: BaseScore;\n  cha: BaseScore & { loyalty: number; retain: number; npc: number };\n}\n\n/**\n * A class representing a character's ability scores\n */\nexport default class OseDataModelCharacterScores implements CharacterScores {\n  /**\n   * Standard modifiers, from -3 to 3.\n   *\n   * Applied to:\n   * - `str.mod`\n   * - `int.mod`\n   * - `wis.mod`\n   * - `dex.mod`\n   * - `con.mod`\n   * - `cha.mod`\n   * - `cha.retain` (with a +4 modifier)\n   * - `cha.loyalty` (with a +7 modifier)\n   */\n  static standardAttributeMods = {\n    0: -3,\n    3: -3,\n    4: -2,\n    6: -1,\n    9: 0,\n    13: 1,\n    16: 2,\n    18: 3,\n  };\n\n  /**\n   * Capped modifiers, from -2 to 2.\n   *\n   * Applied to:\n   * - `dex.init`\n   * - `cha.npc`\n   */\n  static cappedAttributeMods = {\n    0: -2,\n    3: -2,\n    4: -1,\n    6: -1,\n    9: 0,\n    13: 1,\n    16: 1,\n    18: 2,\n  };\n\n  /**\n   * Modifier tables for the Open Door exploration skill, from 0 to 5.\n   * Applied to:\n   * - `str.od`\n   */\n  static openDoorMods = {\n    0: 0,\n    3: 1,\n    9: 2,\n    13: 3,\n    16: 4,\n    18: 5,\n  };\n\n  /**\n   * Mapping tables for character literacy.\n   * Applied to:\n   * - `int.literacy`\n   */\n  static literacyMods = {\n    0: \"\",\n    3: \"OSE.Illiterate\",\n    6: \"OSE.LiteracyBasic\",\n    9: \"OSE.Literate\",\n  };\n\n  /**\n   * Mapping tables for character's spoken languages.\n   * Applied to:\n   * - `int.spoken`\n   */\n  static spokenMods = {\n    0: \"OSE.NativeBroken\",\n    3: \"OSE.Native\",\n    13: \"OSE.NativePlus1\",\n    16: \"OSE.NativePlus2\",\n    18: \"OSE.NativePlus3\",\n  };\n\n  static valueFromTable(table: { [str: string]: any }, val: number) {\n    let output;\n    for (let i = 0; i <= val; i += 1) {\n      if (table[i] !== undefined) {\n        output = table[i];\n      }\n    }\n    return output;\n  }\n\n  #str: IncomingScore = { value: 0, bonus: 0 };\n\n  #int: IncomingScore = { value: 0, bonus: 0 };\n\n  #wis: IncomingScore = { value: 0, bonus: 0 };\n\n  #dex: IncomingScore = { value: 0, bonus: 0 };\n\n  #con: IncomingScore = { value: 0, bonus: 0 };\n\n  #cha: IncomingScore = { value: 0, bonus: 0 };\n\n  /**\n   * The constructor\n   *\n   * @param {object} scores - An object containing the six primary ability scores.\n   * @param {string} scores.str - The character's strength\n   * @param {string} scores.int - The character's intelligence\n   * @param {string} scores.wis - The character's wisdom\n   * @param {string} scores.dex - The character's dexterity\n   * @param {string} scores.con - The character's constitution\n   * @param {string} scores.cha - The character's charisma\n   */\n  constructor({ str, int, wis, dex, con, cha }: Scores) {\n    this.#str = str;\n    this.#int = int;\n    this.#wis = wis;\n    this.#dex = dex;\n    this.#con = con;\n    this.#cha = cha;\n  }\n\n  get str() {\n    return {\n      value: this.#str.value,\n      bonus: this.#str.bonus,\n      mod: this.#strMod,\n      od: this.#strOpenDoorsMod,\n    };\n  }\n\n  set str(change) {\n    this.#str = {\n      ...this.#str,\n      ...change,\n    };\n  }\n\n  get #strMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.standardAttributeMods,\n      this.#str.value\n    );\n  }\n\n  get #strOpenDoorsMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.openDoorMods,\n      this.#str.value\n    );\n  }\n\n  get int() {\n    return {\n      value: this.#int.value,\n      bonus: this.#int.bonus,\n      mod: this.#intMod,\n      literacy: this.#intLiteracyMod,\n      spoken: this.#intSpokenLanguagesMod,\n    };\n  }\n\n  set int(change) {\n    this.#int = {\n      ...this.#int,\n      ...change,\n    };\n  }\n\n  get #intMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.standardAttributeMods,\n      this.#int.value\n    );\n  }\n\n  get #intLiteracyMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.literacyMods,\n      this.#int.value\n    );\n  }\n\n  get #intSpokenLanguagesMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.spokenMods,\n      this.#int.value\n    );\n  }\n\n  get wis() {\n    return {\n      value: this.#wis.value,\n      bonus: this.#wis.bonus,\n      mod: this.#wisMod,\n    };\n  }\n\n  set wis(change) {\n    this.#wis = {\n      ...this.#wis,\n      ...change,\n    };\n  }\n\n  get #wisMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.standardAttributeMods,\n      this.#wis.value\n    );\n  }\n\n  get dex() {\n    return {\n      value: this.#dex.value,\n      bonus: this.#dex.bonus,\n      mod: this.#dexMod,\n      init: this.#dexInitMod,\n    };\n  }\n\n  set dex(change) {\n    this.#dex = {\n      ...this.#dex,\n      ...change,\n    };\n  }\n\n  get #dexMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.standardAttributeMods,\n      this.#dex.value\n    );\n  }\n\n  get #dexInitMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.cappedAttributeMods,\n      this.#dex.value\n    );\n  }\n\n  get con() {\n    return {\n      value: this.#con.value,\n      bonus: this.#con.bonus,\n      mod: this.#conMod,\n    };\n  }\n\n  set con(change) {\n    this.#con = {\n      ...this.#con,\n      ...change,\n    };\n  }\n\n  get #conMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.standardAttributeMods,\n      this.#con.value\n    );\n  }\n\n  get cha() {\n    return {\n      value: this.#cha.value,\n      bonus: this.#cha.bonus,\n      mod: this.#chaMod,\n      loyalty: this.#chaLoyaltyMod,\n      retain: this.#chaRetainMod,\n      npc: this.#chaReactionMod,\n    };\n  }\n\n  set cha(change) {\n    this.#cha = {\n      ...this.#cha,\n      ...change,\n    };\n  }\n\n  get #chaMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.standardAttributeMods,\n      this.#cha.value\n    );\n  }\n\n  get #chaReactionMod() {\n    return OseDataModelCharacterScores.valueFromTable(\n      OseDataModelCharacterScores.cappedAttributeMods,\n      this.#cha.value\n    );\n  }\n\n  get #chaRetainMod() {\n    return this.#chaMod + 4;\n  }\n\n  get #chaLoyaltyMod() {\n    return this.#chaMod + 7;\n  }\n}\n","/**\n * @file A class representing a creature's spellcasting abilities\n */\ntype Slot = {\n  used: number;\n  max: number;\n};\n\ntype Slots = {\n  [n: number]: Slot;\n};\n\ntype Spells = {\n  [n: number]: Item[];\n};\n\nconst reducedSpells = (list: Spells, item: Item) => {\n  const { lvl } = item.system;\n  const othersAtLvl = list[lvl] || [];\n  return {\n    ...list,\n    [lvl]: [...othersAtLvl, item].sort((a, b) => a.name.localeCompare(b.name)),\n  };\n};\n\nexport interface CharacterSpells {\n  enabled: boolean;\n  spellList: Spells;\n  slots: Slots;\n}\n\nexport default class OseDataModelCharacterSpells implements CharacterSpells {\n  #slots = {};\n\n  #spellList: Item[] = [];\n\n  #enabled: boolean;\n\n  constructor(\n    {\n      enabled,\n      ...maxSlots\n    }: { enabled?: boolean; [n: number]: { max: number } },\n    spellList: Item[] = []\n  ) {\n    this.#spellList = spellList;\n    this.#enabled = enabled || false;\n\n    const usedSlots = this.#spellList?.reduce(this.#reducedUsedSlots, {}) || {};\n\n    this.#slots = Object.keys(maxSlots || {}).reduce(\n      (list, item, idx) =>\n        this.#usedAndMaxSlots(list, item, idx, usedSlots, maxSlots),\n      {}\n    );\n  }\n\n  get enabled() {\n    return this.#enabled;\n  }\n\n  set enabled(state) {\n    this.#enabled = state;\n  }\n\n  get spellList() {\n    return this.#spellList.reduce(\n      (list, item) => reducedSpells(list, item),\n      {}\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  #reducedUsedSlots(list: { [n: number]: number }, item: Item) {\n    const { lvl } = item.system;\n    let { cast } = item.system;\n    if (Number.isNaN(cast)) cast = 0;\n    const usedAtLvl = list[lvl] || 0;\n    return {\n      ...list,\n      [lvl]: usedAtLvl + cast,\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  #usedAndMaxSlots(\n    list: Slots,\n    item: Item | string,\n    idx: number,\n    usedSlots: { [n: number]: number },\n    maxSlots: { [n: number]: { max: number } }\n  ) {\n    if (item === \"enabled\") return list;\n    const lv = idx + 1;\n    const max = maxSlots[lv]?.max || 0;\n    const used = usedSlots[lv];\n\n    return {\n      ...list,\n      [lv]: { used, max },\n    };\n  }\n\n  get slots(): Slots {\n    return this.#slots;\n  }\n}\n","/**\n * @file The data model for Actors of type Character.\n */\nimport OseDataModelCharacterAC from \"./data-model-classes/data-model-character-ac\";\nimport OseDataModelCharacterMove from \"./data-model-classes/data-model-character-move\";\nimport OseDataModelCharacterScores from \"./data-model-classes/data-model-character-scores\";\nimport OseDataModelCharacterSpells from \"./data-model-classes/data-model-character-spells\";\n\nconst getItemsOfActorOfType = (actor, filterType, filterFn = null) =>\n  actor.items\n    .filter(({ type }) => type === filterType)\n    .filter(filterFn || (() => true));\n\nexport default class OseDataModelCharacter extends foundry.abstract.TypeDataModel {\n  prepareDerivedData() {\n    this.scores = new OseDataModelCharacterScores(this.scores);\n\n    // eslint-disable-next-line new-cap\n    this.encumbrance = new CONFIG.OSE.encumbrance(\n      this.encumbrance.max,\n      [...this.parent.items],\n      {\n        significantTreasure: game.settings.get(\n          game.system.id,\n          \"significantTreasure\"\n        ),\n        scores: this.scores,\n      }\n    );\n\n    this.movement = new OseDataModelCharacterMove(\n      this.encumbrance,\n      this.config.movementAuto,\n      this.movement.base\n    );\n\n    // @todo Once we create the new character sheet,\n    //       we shouldn't need to list both AC schemes\n    this.ac = new OseDataModelCharacterAC(\n      false,\n      [\n        ...getItemsOfActorOfType(\n          this.parent,\n          \"armor\",\n          (a) => a.system.equipped\n        ),\n      ],\n      this.scores.dex.mod,\n      this.ac.mod\n    );\n\n    this.aac = new OseDataModelCharacterAC(\n      true,\n      getItemsOfActorOfType(this.parent, \"armor\", (a) => a.system.equipped),\n      this.scores.dex.mod,\n      this.aac.mod\n    );\n\n    this.spells = new OseDataModelCharacterSpells(this.spells, this.#spellList);\n  }\n\n  // @todo define schema options; stuff like min/max values and so on.\n  static defineSchema() {\n    const { StringField, NumberField, BooleanField, ObjectField, SchemaField } =\n      foundry.data.fields;\n\n    return {\n      spells: new ObjectField(),\n      scores: new ObjectField(),\n      details: new ObjectField(),\n      ac: new ObjectField(),\n      aac: new ObjectField(),\n      encumbrance: new ObjectField(),\n      movement: new ObjectField(),\n      config: new ObjectField(),\n      initiative: new ObjectField(),\n      hp: new SchemaField({\n        hd: new StringField(),\n        value: new NumberField({ integer: true }),\n        max: new NumberField({ integer: true }),\n      }),\n      thac0: new ObjectField(),\n      languages: new ObjectField(),\n      saves: new SchemaField({\n        breath: new SchemaField({ value: new NumberField({ integer: true }) }),\n        death: new SchemaField({ value: new NumberField({ integer: true }) }),\n        paralysis: new SchemaField({\n          value: new NumberField({ integer: true }),\n        }),\n        spell: new SchemaField({ value: new NumberField({ integer: true }) }),\n        wand: new SchemaField({ value: new NumberField({ integer: true }) }),\n      }),\n      exploration: new SchemaField({\n        ft: new NumberField({ integer: true, positive: true }),\n        ld: new NumberField({ integer: true, positive: true }),\n        od: new NumberField({ integer: true, positive: true }),\n        sd: new NumberField({ integer: true, positive: true }),\n      }),\n      retainer: new SchemaField({\n        enabled: new BooleanField(),\n        loyalty: new NumberField({ integer: true }),\n        wage: new StringField(),\n      }),\n    };\n  }\n\n  // @todo This only needs to be public until\n  //       we can ditch sharing out AC/AAC.\n  // eslint-disable-next-line class-methods-use-this\n  get usesAscendingAC() {\n    return game.settings.get(game.system.id, \"ascendingAC\");\n  }\n\n  get meleeMod() {\n    const ascendingAcMod = this.usesAscendingAC ? this.thac0.bba || 0 : 0;\n    return (\n      (this.scores.str?.mod || 0) +\n      (this.thac0?.mod?.melee || 0) +\n      ascendingAcMod\n    );\n  }\n\n  get rangedMod() {\n    const ascendingAcMod = this.usesAscendingAC ? this.thac0.bba || 0 : 0;\n    return (\n      (this.scores.dex?.mod || 0) +\n      (this.thac0?.mod?.missile || 0) +\n      ascendingAcMod\n    );\n  }\n\n  get isNew() {\n    const { str, int, wis, dex, con, cha } = this.scores;\n    return ![str, int, wis, dex, con, cha].reduce(\n      (acc, el) => acc + el.value,\n      0\n    );\n  }\n\n  get containers() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"container\",\n      ({ system: { containerId } }) => !containerId\n    );\n  }\n\n  get treasures() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"item\",\n      ({ system: { treasure, containerId } }) => treasure && !containerId\n    );\n  }\n\n  get carriedTreasure() {\n    const total = this.treasures.reduce(\n      (acc, { system: { quantity, cost } }) => acc + quantity.value * cost,\n      0\n    );\n    return Math.round(total * 100) / 100;\n  }\n\n  get items() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"item\",\n      ({ system: { treasure, containerId } }) => !treasure && !containerId\n    );\n  }\n\n  get weapons() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"weapon\",\n      ({ system: { containerId } }) => !containerId\n    );\n  }\n\n  get armor() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"armor\",\n      ({ system: { containerId } }) => !containerId\n    );\n  }\n\n  get abilities() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"ability\",\n      ({ system: { containerId } }) => !containerId\n    ).sort((a, b) => (a.sort || 0) - (b.sort || 0));\n  }\n\n  get #spellList() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"spell\",\n      ({ system: { containerId } }) => !containerId\n    );\n  }\n\n  get isSlow() {\n    return this.weapons.length === 0\n      ? false\n      : this.weapons.every(\n          (item) =>\n            !(\n              item.type !== \"weapon\" ||\n              !item.system.slow ||\n              !item.system.equipped\n            )\n        );\n  }\n\n  // @todo How to test this?\n  get init() {\n    const group = game.settings.get(game.system.id, \"initiative\") !== \"group\";\n\n    return group\n      ? (this.initiative.value || 0) +\n          (this.initiative.mod || 0) +\n          this.scores.dex.init\n      : 0;\n  }\n}\n","/**\n * @file The data model for Actors of type Monster\n */\n// Encumbrance schemes\nimport OseDataModelCharacterEncumbranceDisabled from \"./data-model-classes/data-model-character-encumbrance-disabled\";\nimport OseDataModelCharacterSpells from \"./data-model-classes/data-model-character-spells\";\nimport OseDataModelCharacterMove from \"./data-model-classes/data-model-character-move\";\n\nconst getItemsOfActorOfType = (actor, filterType, filterFn = null) =>\n  actor.items\n    .filter(({ type }) => type === filterType)\n    .filter(filterFn || (() => true));\n\nexport default class OseDataModelMonster extends foundry.abstract.TypeDataModel {\n  prepareDerivedData() {\n    this.encumbrance = new OseDataModelCharacterEncumbranceDisabled();\n    this.spells = new OseDataModelCharacterSpells(this.spells, this.#spellList);\n    this.movement = new OseDataModelCharacterMove(\n      this.encumbrance,\n      this.config.movementAuto = false,\n      this.movement.base\n      );\n  }\n\n  // @todo define schema options; stuff like min/max values and so on.\n  static defineSchema() {\n    const { StringField, NumberField, BooleanField, ObjectField, SchemaField } =\n      foundry.data.fields;\n\n    return {\n      spells: new ObjectField(),\n      details: new ObjectField(),\n      ac: new ObjectField(),\n      aac: new ObjectField(),\n      encumbrance: new SchemaField({\n        value: new NumberField({ integer: false }),\n        max: new NumberField({ integer: false }),\n      }),\n      movement: new ObjectField(),\n      config: new ObjectField(),\n      initiative: new ObjectField(),\n      hp: new SchemaField({\n        hd: new StringField(),\n        value: new NumberField({ integer: true }),\n        max: new NumberField({ integer: true }),\n      }),\n      thac0: new ObjectField(),\n      languages: new ObjectField(),\n      saves: new SchemaField({\n        breath: new SchemaField({ value: new NumberField({ integer: true }) }),\n        death: new SchemaField({ value: new NumberField({ integer: true }) }),\n        paralysis: new SchemaField({\n          value: new NumberField({ integer: true }),\n        }),\n        spell: new SchemaField({ value: new NumberField({ integer: true }) }),\n        wand: new SchemaField({ value: new NumberField({ integer: true }) }),\n      }),\n      retainer: new SchemaField({\n        enabled: new BooleanField(),\n        loyalty: new NumberField({ integer: true }),\n        wage: new StringField(),\n      }),\n    };\n  }\n\n  // @todo This only needs to be public until\n  //       we can ditch sharing out AC/AAC.\n  // eslint-disable-next-line class-methods-use-this\n  get usesAscendingAC() {\n    return game.settings.get(game.system.id, \"ascendingAC\");\n  }\n\n  get isNew() {\n    return !Object.values(this.saves).reduce(\n      (prev, curr) => prev + (parseInt(curr?.value, 10) || 0),\n      0\n    );\n  }\n\n  get containers() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"container\",\n      ({ system: { containerId } }) => !containerId\n    );\n  }\n\n  get treasures() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"item\",\n      ({ system: { treasure, containerId } }) => treasure && !containerId\n    ).sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  get items() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"item\",\n      ({ system: { treasure, containerId } }) => !treasure && !containerId\n    ).sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  get weapons() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"weapon\",\n      ({ system: { containerId } }) => !containerId\n    ).sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  get armor() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"armor\",\n      ({ system: { containerId } }) => !containerId\n    ).sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  get abilities() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"ability\",\n      ({ system: { containerId } }) => !containerId\n    ).sort((a, b) => (a.sort || 0) - (b.sort || 0));\n  }\n\n  get attackPatterns() {\n    return [...this.weapons, ...this.abilities]\n      .sort((a, b) => {\n        if (\n          a.system.pattern !== \"transparent\" &&\n          b.system.pattern === \"transparent\"\n        )\n          return -1;\n        return b.type.localeCompare(a.type) || a.name.localeCompare(b.name);\n      })\n      .reduce((prev, curr) => {\n        const updated = { ...prev };\n        const { pattern } = curr.system;\n        if (!updated[pattern]) updated[pattern] = [];\n        return { ...updated, [pattern]: [...updated[pattern], curr] };\n      }, {});\n  }\n\n  get #spellList() {\n    return getItemsOfActorOfType(\n      this.parent,\n      \"spell\",\n      ({ system: { containerId } }) => !containerId\n    );\n  }\n\n  get isSlow() {\n    return this.weapons.length === 0\n      ? false\n      : this.weapons.every(\n          (item) => !(item.type !== \"weapon\" || !item.system.slow)\n        );\n  }\n\n  get init() {\n    const group = game.settings.get(game.system.id, \"initiative\") !== \"group\";\n\n    return group ? this.initiative.mod : 0;\n  }\n}\n","/**\n * @file The system-specific Item entity, containing logic for operating on all available Item types.\n */\nimport OSE from \"../config\";\nimport OseDice from \"../helpers-dice\";\n\n/**\n * Override and extend the basic :class:`Item` implementation\n */\nexport default class OseItem extends Item {\n  // Replacing default image */\n  static get defaultIcons() {\n    return {\n      spell: `${OSE.assetsPath}/default/spell.png`,\n      ability: `${OSE.assetsPath}/default/ability.png`,\n      armor: `${OSE.assetsPath}/default/armor.png`,\n      weapon: `${OSE.assetsPath}/default/weapon.png`,\n      item: `${OSE.assetsPath}/default/item.png`,\n      container: `${OSE.assetsPath}/default/bag.png`,\n    };\n  }\n\n  static async create(data, context = {}) {\n    if (data.img === undefined) {\n      data.img = this.defaultIcons[data.type];\n    }\n    return super.create(data, context);\n  }\n\n  static migrateData(source) {\n    if (source?.img === \"\" && source.type) {\n      source.img = this.defaultIcons(source.type);\n    }\n    if (source?.system?.itemslots === undefined) {\n      if (\n        (source?.system?.tags ?? []).some(\n          (tag) => tag.value === \"Two-handed\"\n        ) &&\n        source?.type === \"weapon\"\n      )\n        source.system.itemslots = 2;\n      if (source?.system?.type === \"heavy\" && source.type === \"armor\")\n        source.system.itemslots = 2;\n    }\n\n    return source;\n  }\n\n  prepareData() {\n    super.prepareData();\n  }\n\n  async prepareDerivedData() {\n    // Rich text description\n    this.system.enrichedDescription = await TextEditor.enrichHTML(\n      this.system.details?.description || this.system.description,\n      { async: true }\n    );\n  }\n\n  static chatListeners(html) {\n    html.on(\"click\", \".card-buttons button\", this._onChatCardAction.bind(this));\n    html.on(\"click\", \".item-name\", this._onChatCardToggleContent.bind(this));\n  }\n\n  async getChatData(htmlOptions) {\n    const itemType = this.type;\n\n    const itemData = this.system;\n\n    // Item properties\n    const props = [];\n\n    if (itemType === \"weapon\") {\n      itemData.tags.forEach((t) => props.push(t.value));\n    }\n    if (itemType === \"spell\") {\n      props.push(\n        `${itemData.class} ${itemData.lvl}`,\n        itemData.range,\n        itemData.duration\n      );\n    }\n    if (itemData.hasOwnProperty(\"equipped\")) {\n      props.push(itemData.equipped ? \"Equipped\" : \"Not Equipped\");\n    }\n\n    // Filter properties and return\n    itemData.properties = props.filter((p) => !!p);\n    return itemData;\n  }\n\n  rollWeapon(options = {}) {\n    const isNPC = this.actor.type != \"character\";\n    const targets = 5;\n    const itemData = this.system;\n\n    let type = isNPC ? \"attack\" : \"melee\";\n    const rollData = {\n      item: this._source,\n      actor: this.actor,\n      roll: {\n        save: itemData.save,\n        target: null,\n      },\n    };\n\n    if (itemData.missile && itemData.melee && !isNPC) {\n      // Dialog\n      new Dialog({\n        title: \"Choose Attack Range\",\n        content: \"\",\n        buttons: {\n          melee: {\n            icon: '<i class=\"fas fa-fist-raised\"></i>',\n            label: \"Melee\",\n            callback: () => {\n              this.actor.targetAttack(rollData, \"melee\", options);\n            },\n          },\n          missile: {\n            icon: '<i class=\"fas fa-bullseye\"></i>',\n            label: \"Missile\",\n            callback: () => {\n              this.actor.targetAttack(rollData, \"missile\", options);\n            },\n          },\n        },\n        default: \"melee\",\n      }).render(true);\n      return true;\n    }\n    if (itemData.missile && !isNPC) {\n      type = \"missile\";\n    }\n    this.actor.targetAttack(rollData, type, options);\n    return true;\n  }\n\n  async rollFormula(options = {}) {\n    const itemData = this.system;\n\n    if (!itemData.roll) {\n      throw new Error(\"This Item does not have a formula to roll!\");\n    }\n\n    const label = `${this.name}`;\n    const rollParts = [itemData.roll];\n\n    const type = itemData.rollType;\n\n    const rollData = {\n      actor: this.actor,\n      item: this._source,\n      description: null,\n      save: itemData.save,\n      properties: this.system.autoTags,\n      roll: {\n        type,\n        target: itemData.rollTarget,\n        blindroll: itemData.blindroll,\n      },\n    };\n\n    if (this.type === \"spell\") {\n      rollData.description = itemData.description\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: rollData,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.roll.formula\", { label }),\n      title: game.i18n.format(\"OSE.roll.formula\", { label }),\n    });\n  }\n\n  async spendSpell() {\n    if (this.type !== \"spell\")\n      throw new Error(\n        \"Trying to spend a spell on an item that is not a spell.\"\n      );\n\n    const itemData = this.system;\n    await this.update({\n      system: {\n        cast: itemData.cast - 1,\n      },\n    });\n\n    if (itemData.roll) {\n      await this.rollFormula()\n    } else {\n      await this.show({ skipDialog: true })\n    };\n  }\n\n  _getRollTag(data) {\n    if (data.roll) {\n      const roll = `${data.roll}${data.rollTarget ? CONFIG.OSE.roll_type[data.rollType] : \"\"\n        }${data.rollTarget ? data.rollTarget : \"\"}`;\n      return {\n        label: `${game.i18n.localize(\"OSE.items.Roll\")} ${roll}`,\n      };\n    }\n  }\n\n  _getSaveTag(data) {\n    if (data.save) {\n      return {\n        label: CONFIG.OSE.saves_long[data.save],\n        icon: \"fa-skull\",\n      };\n    }\n  }\n\n  getAutoTagList() {\n    const tagList = [];\n    const data = this.system;\n    const itemType = this.type;\n\n    switch (itemType) {\n      case \"container\":\n      case \"item\": {\n        break;\n      }\n\n      case \"weapon\": {\n        tagList.push({ label: data.damage, icon: \"fa-tint\" });\n        if (data.missile) {\n          tagList.push({\n            label: `${data.range.short}/${data.range.medium}/${data.range.long}`,\n            icon: \"fa-bullseye\",\n          });\n        }\n\n        // Push manual tags\n        data.tags.forEach((t) => {\n          tagList.push({ label: t.value });\n        });\n        break;\n      }\n\n      case \"armor\": {\n        tagList.push({ label: CONFIG.OSE.armor[data.type], icon: \"fa-tshirt\" });\n        break;\n      }\n\n      case \"spell\": {\n        tagList.push(\n          { label: data.class },\n          { label: data.range },\n          { label: data.duration }\n        );\n        break;\n      }\n\n      case \"ability\": {\n        const reqs = data.requirements.split(\",\");\n        reqs.forEach((req) => tagList.push({ label: req }));\n        break;\n      }\n    }\n\n    const rollTag = this._getRollTag(data);\n    if (rollTag) {\n      tagList.push(rollTag);\n    }\n\n    const saveTag = this._getSaveTag(data);\n    if (saveTag) {\n      tagList.push(saveTag);\n    }\n\n    return tagList;\n  }\n\n  pushManualTag(values) {\n    const data = this?.system;\n    let update = [];\n    if (data.tags) {\n      update = data.tags;\n    }\n    const newData = {};\n    const regExp = /\\(([^)]+)\\)/;\n    if (update) {\n      values.forEach((val) => {\n        // Catch infos in brackets\n        const matches = regExp.exec(val);\n        let title = \"\";\n        if (matches) {\n          title = matches[1];\n          val = val.slice(0, Math.max(0, matches.index)).trim();\n        } else {\n          val = val.trim();\n          title = val;\n        }\n        // Auto fill checkboxes\n        switch (val) {\n          case CONFIG.OSE.tags.melee: {\n            newData.melee = true;\n            break;\n          }\n\n          case CONFIG.OSE.tags.slow: {\n            newData.slow = true;\n            break;\n          }\n\n          case CONFIG.OSE.tags.missile: {\n            newData.missile = true;\n            break;\n          }\n        }\n        if (!newData.melee && !newData.slow && !newData.missile)\n          update.push({ title, value: val, label: val });\n      });\n    } else {\n      update = values;\n    }\n    newData.tags = update;\n    return this.update({ system: newData });\n  }\n\n  popManualTag(value) {\n    const itemData = this.system;\n\n    const { tags } = itemData;\n    if (!tags) return;\n\n    const update = tags.filter((el) => el.value != value);\n    const newData = {\n      tags: update,\n    };\n    return this.update({ system: newData });\n  }\n\n  roll(options = {}) {\n    const itemData = this.system;\n    switch (this.type) {\n      case \"weapon\": {\n        this.rollWeapon(options);\n        break;\n      }\n\n      case \"spell\": {\n        this.spendSpell(options);\n        break;\n      }\n\n      case \"ability\": {\n        if (itemData.roll) {\n          this.rollFormula();\n        } else {\n          this.show();\n        }\n        break;\n      }\n\n      case \"item\":\n      case \"armor\": {\n        this.show();\n      }\n    }\n  }\n\n  /**\n   * Show the item to Chat, creating a chat card which contains follow up attack or damage roll options\n   *\n   * @returns {Promise}\n   */\n  async show() {\n    const itemType = this.type;\n    // Basic template rendering data\n    const { token } = this.actor; // v10: prototypeToken?\n    const templateData = {\n      actor: this.actor,\n      tokenId: token ? `${token.parent.id}.${token.id}` : null,\n      item: this._source,\n      itemId: this._source.id,\n      data: await this.getChatData(),\n      labels: this.labels,\n      isHealing: this.isHealing,\n      hasDamage: this.hasDamage,\n      isSpell: itemType === \"spell\",\n      hasSave: this.hasSave,\n      config: CONFIG.OSE,\n    };\n    templateData.rollFormula = new Roll(templateData.data.roll, templateData).formula;\n    templateData.data.properties = this.system.autoTags;\n\n    // Render the chat card template\n    const template = `${OSE.systemPath()}/templates/chat/item-card.html`;\n    const html = await renderTemplate(template, templateData);\n\n    // Basic chat message data\n    const chatData = {\n      user: game.user.id,\n      type: CONST.CHAT_MESSAGE_STYLES.OTHER,\n      content: html,\n      speaker: {\n        actor: this.actor.id,\n        token: this.actor.token,\n        alias: this.actor.name,\n      },\n    };\n\n    // Toggle default roll mode\n    const rollMode = game.settings.get(\"core\", \"rollMode\");\n    if ([\"gmroll\", \"blindroll\"].includes(rollMode))\n      chatData.whisper = ChatMessage.getWhisperRecipients(\"GM\");\n    if (rollMode === \"selfroll\") chatData.whisper = [game.user.id];\n    if (rollMode === \"blindroll\") chatData.blind = true;\n\n    // Create the chat message\n    return ChatMessage.create(chatData);\n  }\n\n  /**\n   * Handle toggling the visibility of chat card content when the name is clicked\n   *\n   * @param {Event} event - The originating click event\n   * @private\n   */\n  static _onChatCardToggleContent(event) {\n    event.preventDefault();\n    const header = event.currentTarget;\n    const card = header.closest(\".chat-card\");\n    const content = card.querySelector(\".card-content\");\n    if (content.style.display === \"none\") {\n      $(content).slideDown(200);\n    } else {\n      $(content).slideUp(200);\n    }\n  }\n\n  static async _onChatCardAction(event) {\n    event.preventDefault();\n\n    // Extract card data\n    const button = event.currentTarget;\n    button.disabled = true;\n    const card = button.closest(\".chat-card\");\n    const { messageId } = card.closest(\".message\").dataset;\n    const message = game.messages.get(messageId);\n    const { action } = button.dataset;\n\n    // Validate permission to proceed with the roll\n    const isTargetted = action === \"save\";\n    if (!(isTargetted || game.user.isGM || message.isAuthor)) return;\n\n    // Get the Actor from a synthetic Token\n    const actor = this._getChatCardActor(card);\n    if (!actor) return;\n\n    // Get the Item\n    const item = actor.items.get(card.dataset.itemId);\n    if (!item) {\n      return ui.notifications.error(\n        game.i18n.format(\"OSE.error.itemNoLongerExistsOnActor\", {\n          actorName: actor.name,\n          itemId: card.dataset.itemId,\n        })\n      );\n    }\n\n    // Get card targets\n    let targets = [];\n    if (isTargetted) {\n      targets = this._getChatCardTargets(card);\n    }\n\n    // Attack and Damage Rolls\n    switch (action) {\n      case \"damage\": {\n        await item.rollDamage({ event });\n        break;\n      }\n\n      case \"formula\": {\n        await item.rollFormula({ event });\n        break;\n      }\n\n      case \"save\": {\n        if (targets.length === 0) {\n          ui.notifications.error(\n            game.i18n.localize(\"OSE.error.noTokenControlled\")\n          );\n          return (button.disabled = false);\n        }\n        for (const t of targets) {\n          await t.rollSave(button.dataset.save, { event });\n        }\n\n        break;\n      }\n      // No default\n    }\n\n    // Re-enable the button\n    button.disabled = false;\n  }\n\n  static _getChatCardActor(card) {\n    // Case 1 - a synthetic actor from a Token\n    const tokenKey = card.dataset.tokenId;\n    if (tokenKey) {\n      const [sceneId, tokenId] = tokenKey.split(\".\");\n      const scene = game.scenes.get(sceneId);\n      if (!scene) return null;\n      const tokenData = scene.getEmbeddedDocument(\"Token\", tokenId);\n      if (!tokenData) return null;\n      const token = new Token(tokenData);\n      return token.actor;\n    }\n\n    // Case 2 - use Actor ID directory\n    const { actorId } = card.dataset;\n    return game.actors.get(actorId) || null;\n  }\n\n  static _getChatCardTargets(card) {\n    const { character } = game.user;\n    const { controlled } = canvas.tokens;\n    const targets = controlled.reduce(\n      (arr, t) => (t.actor ? [...arr, t.actor] : arr),\n      []\n    );\n    if (character && controlled.length === 0) targets.push(character);\n    return targets;\n  }\n}\n","import OseItem from \"../item/entity\";\n\nimport skipRollDialogCheck from \"../helpers-behaviour\";\nimport OseDice from \"../helpers-dice\";\n\n/**\n * Used in the rollAttack function to remove zeroes from rollParts arrays\n *\n * @param {[]} arr - an array\n * @returns {[]} - an array\n */\nconst removeFalsyElements = (arr) =>\n  arr.reduce((a, b) => (b ? [...a, b] : a), []);\n\nexport default class OseActor extends Actor {\n  prepareDerivedData() {\n    if (game.version.startsWith(\"10\")) this.system.prepareDerivedData?.();\n  }\n\n  static migrateData(source) {\n    // Fixing missing img\n    if (source?.img === \"\") {\n      source.img = \"icons/svg/mystery-man.svg\";\n    }\n    if (source?.prototypeToken?.texture?.img === \"\") {\n      source.prototypeToken.texture.img = \"icons/svg/mystery-man.svg\";\n    }\n    // Fixing missing movement.value by moving it to details.movement\n    if (source?.system?.movement?.value && !source?.system?.details.movement){\n      source.system.details.movement = source.system.movement.value;\n      delete source.system.movement.value;\n    }\n\n    return source;\n  }\n\n  async update(data, options = {}) {\n    const newData = { ...data };\n    const {\n      \"system.ac.value\": acValue,\n      \"system.aac.value\": aacValue,\n      \"system.thac0.bba\": bbaValue,\n      \"system.thac0.value\": thac0Value,\n    } = newData;\n    // Compute AAC from AC\n    if (acValue) {\n      newData[\"system.aac.value\"] = 19 - acValue;\n    } else if (aacValue) {\n      newData[\"system.ac.value\"] = 19 - aacValue;\n    }\n\n    // Compute Thac0 from BBA\n    if (thac0Value) {\n      newData[\"system.thac0.bba\"] = 19 - thac0Value;\n    } else if (bbaValue) {\n      newData[\"system.thac0.value\"] = 19 - bbaValue;\n    }\n\n    super.update(newData, options);\n  }\n\n  async createEmbeddedDocuments(embeddedName, data = [], context = {}) {\n    data.map((item) => {\n      if (item.img === undefined) {\n        item.img = OseItem.defaultIcons[item.type];\n      }\n    });\n    return super.createEmbeddedDocuments(embeddedName, data, context);\n  }\n\n  /* -------------------------------------------- */\n  /*  Socket Listeners and Handlers\n    /* -------------------------------------------- */\n  getExperience(value, options = {}) {\n    const actorData = this.system;\n    const actorType = this.type;\n    // @TODO this seems like not the best spot for defining the xpKey const\n    const xpKey = \"system.details.xp.value\";\n\n    if (actorType !== \"character\") {\n      return;\n    }\n    const modified = Math.floor(\n      value + (actorData.details.xp.bonus * value) / 100\n    );\n    return this.update({\n      [xpKey]: modified + actorData.details.xp.value,\n    }).then(() => {\n      const speaker = ChatMessage.getSpeaker({ actor: this });\n      ChatMessage.create({\n        content: game.i18n.format(\"OSE.messages.GetExperience\", {\n          name: this.name,\n          value: modified,\n        }),\n        speaker,\n      });\n    });\n  }\n\n  isNew() {\n    return this.system.isNew;\n  }\n\n  generateSave(hd) {\n    hd = hd.includes(\"+\") ? parseInt(hd) + 1 : parseInt(hd);\n\n    // Compute saves\n    let saves = {};\n    for (let i = 0; i <= hd; i++) {\n      const tmp = CONFIG.OSE.monster_saves[i];\n      if (tmp) {\n        saves = tmp;\n      }\n    }\n\n    // Compute Thac0\n    let thac0 = 20;\n    Object.keys(CONFIG.OSE.monster_thac0).forEach((k) => {\n      if (hd < parseInt(k)) return;\n      thac0 = CONFIG.OSE.monster_thac0[k];\n    });\n\n    this.update({\n      \"system.thac0.value\": thac0,\n      \"system.thac0.bba\": 19 - thac0,\n      \"system.saves\": {\n        death: {\n          value: saves.d,\n        },\n        wand: {\n          value: saves.w,\n        },\n        paralysis: {\n          value: saves.p,\n        },\n        breath: {\n          value: saves.b,\n        },\n        spell: {\n          value: saves.s,\n        },\n      },\n    });\n  }\n\n  /* -------------------------------------------- */\n  /*  Rolls                                       */\n  /* -------------------------------------------- */\n\n  async rollHP(options = {}) {\n    const { total } = await new Roll(this.system.hp.hd).roll({ async: true });\n    return this.update({ \"system.hp\": { max: total, value: total } });\n  }\n\n  rollSave(save, options = {}) {\n    const label = game.i18n.localize(`OSE.saves.${save}.long`);\n    const rollParts = [\"1d20\"];\n    const actorData = this.system;\n    const actorType = this.type;\n\n    const data = {\n      actor: this,\n      roll: {\n        type: \"above\",\n        target: actorData.saves[save].value,\n        magic: actorType === \"character\" ? actorData.scores.wis.mod : 0,\n      },\n      details: game.i18n.format(\"OSE.roll.details.save\", { save: label }),\n    };\n\n    const rollMethod =\n      actorType === \"character\" ? OseDice.RollSave : OseDice.Roll;\n\n    // Roll and return\n    return rollMethod({\n      event: options.event,\n      parts: rollParts,\n      data,\n      skipDialog: options.fastForward || skipRollDialogCheck(options.event),\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.roll.save\", { save: label }),\n      title: game.i18n.format(\"OSE.roll.save\", { save: label }),\n      chatMessage: options.chatMessage,\n    });\n  }\n\n  rollMorale(options = {}) {\n    const actorData = this.system;\n\n    const rollParts = [\"2d6\"];\n\n    const data = {\n      actor: this,\n      roll: {\n        type: \"below\",\n        target: actorData.details.morale,\n      },\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.localize(\"OSE.roll.morale\"),\n      title: game.i18n.localize(\"OSE.roll.morale\"),\n    });\n  }\n\n  rollLoyalty(options = {}) {\n    const label = game.i18n.localize(`OSE.roll.loyalty`);\n    const rollParts = [\"2d6\"];\n\n    const actorData = this.system;\n\n    const data = {\n      actor: this,\n      roll: {\n        type: \"below\",\n        target: actorData.retainer.loyalty,\n      },\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: label,\n      title: label,\n    });\n  }\n\n  rollReaction(options = {}) {\n    const rollParts = [\"2d6\"];\n\n    const data = {\n      actor: this,\n      roll: {\n        type: \"table\",\n        table: {\n          2: game.i18n.format(\"OSE.reaction.Hostile\", {\n            name: this.name,\n          }),\n          3: game.i18n.format(\"OSE.reaction.Unfriendly\", {\n            name: this.name,\n          }),\n          6: game.i18n.format(\"OSE.reaction.Neutral\", {\n            name: this.name,\n          }),\n          9: game.i18n.format(\"OSE.reaction.Indifferent\", {\n            name: this.name,\n          }),\n          12: game.i18n.format(\"OSE.reaction.Friendly\", {\n            name: this.name,\n          }),\n        },\n      },\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data,\n      skipDialog: options.fastForward || skipRollDialogCheck(options.event),\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.localize(\"OSE.reaction.check\"),\n      title: game.i18n.localize(\"OSE.reaction.check\"),\n    });\n  }\n\n  rollCheck(score, options = {}) {\n    const actorType = this.type;\n\n    if (actorType !== \"character\") return;\n\n    const actorData = this.system;\n\n    const label = game.i18n.localize(`OSE.scores.${score}.long`);\n    const rollParts = [\"1d20\"];\n\n    const data = {\n      actor: this,\n      roll: {\n        type: \"check\",\n        target: actorData.scores[score].value,\n      },\n\n      details: game.i18n.format(\"OSE.roll.details.attribute\", {\n        score: label,\n      }),\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data,\n      skipDialog: options.fastForward || skipRollDialogCheck(options.event),\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.roll.attribute\", { attribute: label }),\n      title: game.i18n.format(\"OSE.roll.attribute\", { attribute: label }),\n      chatMessage: options.chatMessage,\n    });\n  }\n\n  rollHitDice(options = {}) {\n    const actorType = this.type;\n\n    const actorData = this.system;\n\n    const label = game.i18n.localize(`OSE.roll.hd`);\n    const rollParts = [actorData.hp.hd];\n    \n    if (actorType === \"character\") {\n      rollParts.push(actorData.scores.con.mod * actorData.details.level);\n    }\n\n    const data = {\n      actor: this,\n      roll: {\n        type: \"hitdice\",\n      },\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: label,\n      title: label,\n    });\n  }\n\n  rollAppearing(options = {}) {\n    const actorType = this.type;\n    if (actorType !== \"monster\") return;\n\n    const actorData = this.system;\n\n    const rollParts = [];\n    let label = \"\";\n    if (options.check === \"wilderness\") {\n      rollParts.push(actorData.details.appearing.w);\n      label = \"(2)\";\n    } else {\n      rollParts.push(actorData.details.appearing.d);\n      label = \"(1)\";\n    }\n    const data = {\n      actor: this,\n      roll: {\n        type: {\n          type: \"appearing\",\n        },\n      },\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.roll.appearing\", { type: label }),\n      title: game.i18n.format(\"OSE.roll.appearing\", { type: label }),\n    });\n  }\n\n  rollExploration(expl, options = {}) {\n    const actorType = this.type;\n    if (actorType !== \"character\") return;\n    const actorData = this.system;\n\n    const label = game.i18n.localize(`OSE.exploration.${expl}.long`);\n    const rollParts = [\"1d6\"];\n\n    const data = {\n      actor: this,\n      roll: {\n        type: \"below\",\n        target: actorData.exploration[expl],\n        blindroll: true,\n      },\n      details: game.i18n.format(\"OSE.roll.details.exploration\", {\n        expl: label,\n      }),\n    };\n\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data,\n      skipDialog: options.fastForward || skipRollDialogCheck(options.event),\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: game.i18n.format(\"OSE.roll.exploration\", { exploration: label }),\n      title: game.i18n.format(\"OSE.roll.exploration\", { exploration: label }),\n    });\n  }\n\n  rollDamage(attData, options = {}) {\n    const data = this.system;\n\n    const rollData = {\n      actor: this,\n      item: attData.item,\n      roll: {\n        type: \"damage\",\n      },\n    };\n\n    const dmgParts = [];\n    if (attData.roll.dmg) {\n      dmgParts.push(attData.roll.dmg);\n    } else {\n      dmgParts.push(\"1d6\");\n    }\n\n    // Add Str to damage\n    if (attData.roll.type === \"melee\" && data.scores.str.mod) {\n      dmgParts.push(data.scores.str.mod);\n    }\n\n    // Damage roll\n    OseDice.Roll({\n      event: options.event,\n      parts: dmgParts,\n      data: rollData,\n      skipDialog: true,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: `${attData.label} - ${game.i18n.localize(\"OSE.Damage\")}`,\n      title: `${attData.label} - ${game.i18n.localize(\"OSE.Damage\")}`,\n    });\n  }\n\n  async targetAttack(data, type, options) {\n    if (game.user.targets.size > 0) {\n      for (const t of game.user.targets.values()) {\n        data.roll.target = t;\n        await this.rollAttack(data, {\n          type,\n          skipDialog: options.skipDialog,\n        });\n      }\n    } else {\n      this.rollAttack(data, { type, skipDialog: options.skipDialog });\n    }\n  }\n\n  /**\n   * Constructs the attack roll formula for an attack\n   *\n   * @param {object} attData - the attack data\n   * @param {OseItem} attData.item - the item being used in the attack\n   * @param {OseActor} attData.actor - this actor (at least it should be!)\n   * @param {object} attData.roll - the attack roll data\n   * @param {string} attData.roll.save - the save roll that may be used against the attack\n   * @param {OseActor} attData.roll.target - the target of the attack\n   * @param {object} options - the type of attack and whether to skip the dialog\n   * @param {string} options.type - the type of attack, i.e. melee or missile\n   * @param {boolean} options.skipDialog - whether to skip the dialog\n   * @returns {OseDice.Roll} - the attack roll with completed rollParts and other data\n   */\n  rollAttack(attData, options = {}) {\n    const data = this.system;\n\n    const label = attData.item\n      ? game.i18n.format(\"OSE.roll.attacksWith\", {\n          name: attData.item.name,\n        })\n      : game.i18n.format(\"OSE.roll.attacks\", {\n          name: this.name,\n        });\n\n    const dmgParts = removeFalsyElements([\n      // Weapon damage roll value\n      attData.item?.system?.damage ?? \"1d6\",\n    ]);\n    if (!this.system.config?.ignoreBonusDamage && attData.item?.system?.bonus)\n      // Weapon Damage Bonus\n      dmgParts.push(attData.item?.system?.bonus);\n\n    const rollParts = [\"1d20\"];\n    const ascending = game.settings.get(game.system.id, \"ascendingAC\");\n\n    if (ascending && data.thac0.bba) rollParts.push(data.thac0.bba);\n\n    // for each type of attack, add the Tweaks bonus\n    // and str/dex modifier only if it's non-zero\n    let attackMods = [];\n\n    if (options.type === \"melee\")\n      attackMods = [data.scores.str.mod, data.thac0.mod.melee];\n\n    dmgParts.push(...removeFalsyElements(attackMods));\n\n    // Add missile mod to attack roll only (missile attacks don't get bonus damage)\n    if (options.type === \"missile\")\n      attackMods = [data.scores.dex.mod, data.thac0.mod.missile];\n\n    // Add weapon bonus to attack roll only (already added to dmgParts)\n    if (attData.item) attackMods.push(attData.item?.system?.bonus);\n\n    rollParts.push(...removeFalsyElements(attackMods));\n\n    const rollData = {\n      actor: this,\n      item: attData.item,\n      itemId: attData.item?._id,\n      roll: {\n        type: options.type,\n        thac0: data.thac0.value,\n        dmg: dmgParts,\n        save: attData.roll.save,\n        target: attData.roll.target,\n      },\n    };\n    // Roll and return\n    return OseDice.Roll({\n      event: options.event,\n      parts: rollParts,\n      data: rollData,\n      skipDialog: options.skipDialog,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor: label,\n      flags: { ose: { roll: \"attack\", itemId: attData.item?._id } },\n      title: label,\n    });\n  }\n\n  /**\n   * @param {number | string} amount\n   * @param {1 | -1} multiplier\n   * @returns\n   */\n  async applyDamage(amount = 0, multiplier = 1) {\n    amount = Math.floor(parseInt(amount) * multiplier);\n\n    const { value, max } = this.system.hp;\n\n    // Update the Actor\n    return this.update({\n      \"system.hp.value\": Math.clamp(value - amount, 0, max),\n    });\n  }\n}\n","/**\n * @file The sheet class for Actors of type Monster\n */\nimport OSE from \"../config\";\nimport OseActorSheet from \"./actor-sheet\";\n\n/**\n * Extend the basic ActorSheet with some very simple modifications\n */\nexport default class OseActorSheetMonster extends OseActorSheet {\n  /**\n   * Extend and override the default options used by the Actor Sheet\n   *\n   * @returns {object} - The sheet's default options\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"ose\", \"sheet\", \"monster\", \"actor\"],\n      template: `${OSE.systemPath()}/templates/actors/monster-sheet.html`,\n      width: 450,\n      height: 560,\n      resizable: true,\n      tabs: [\n        {\n          navSelector: \".tabs\",\n          contentSelector: \".sheet-body\",\n          initial: \"attributes\",\n        },\n      ],\n    });\n  }\n\n  /**\n   * Organize and classify Owned Items for Character sheets\n   *\n   * @param data\n   * @private\n   */\n  _prepareItems(data) {\n    // Assign and return\n    data.owned = {\n      weapons: this.actor.system.weapons,\n      items: this.actor.system.items,\n      containers: this.actor.system.containers,\n      armors: this.actor.system.armor,\n      treasures: this.actor.system.treasures,\n    };\n\n    data.attackPatterns = this.actor.system.attackPatterns;\n    data.spells = this.actor.system.spells.spellList;\n  }\n\n  /**\n   * Prepare data for rendering the Actor sheet\n   * The prepared data object contains both the actor data as well as additional sheet options\n   */\n  async getData() {\n    const data = super.getData();\n    // Prepare owned items\n    this._prepareItems(data);\n\n    const monsterData = data?.system;\n\n    // Settings\n    data.config.morale = game.settings.get(game.system.id, \"morale\");\n    monsterData.details.treasure.link = await TextEditor.enrichHTML(\n      monsterData.details.treasure.table,\n      { async: true }\n    );\n    data.isNew = this.actor.isNew();\n\n    if (foundry.utils.isNewerVersion(game.version, \"10.264\")) {\n      data.enrichedBiography = await TextEditor.enrichHTML(\n        this.object.system.details.biography,\n        { async: true }\n      );\n    }\n    return data;\n  }\n\n  /**\n   * Monster creation helpers\n   */\n  async generateSave() {\n    const choices = CONFIG.OSE.monster_saves;\n\n    const templateData = { choices };\n    const dlg = await renderTemplate(\n      `${OSE.systemPath()}/templates/actors/dialogs/monster-saves.html`,\n      templateData\n    );\n    // Create Dialog window\n    new Dialog(\n      {\n        title: game.i18n.localize(\"OSE.dialog.generateSaves\"),\n        content: dlg,\n        buttons: {\n          ok: {\n            label: game.i18n.localize(\"OSE.Ok\"),\n            icon: '<i class=\"fas fa-check\"></i>',\n            callback: (html) => {\n              const hd = html.find('input[name=\"hd\"]').val();\n              this.actor.generateSave(hd);\n            },\n          },\n          cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: game.i18n.localize(\"OSE.Cancel\"),\n          },\n        },\n        default: \"ok\",\n      },\n      {\n        width: 250,\n      }\n    ).render(true);\n  }\n\n  async _onDrop(event) {\n    super._onDrop(event);\n    let data;\n    try {\n      data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n      if (data.type !== \"RollTable\") return;\n    } catch (error) {\n      return false;\n    }\n\n    let link = \"\";\n    if (data.pack) {\n      const tableDatum = game.packs\n        .get(data.pack)\n        .index.find((el) => el._id === data.id);\n      link = `@UUID[${data.uuid}]{${tableDatum.name}}`;\n    } else {\n      link = `@UUID[${data.uuid}]`;\n    }\n    this.actor.update({ \"system.details.treasure.table\": link });\n  }\n\n  /* -------------------------------------------- */\n  async _resetAttacks(event) {\n    return Promise.all(\n      this.actor.items\n        .filter((i) => i.type === \"weapon\")\n        .map((weapon) =>\n          weapon.update({\n            \"system.counter.value\": parseInt(weapon.system.counter.max),\n          })\n        )\n    );\n  }\n\n  async _updateAttackCounter(event) {\n    event.preventDefault();\n    const item = this._getItemFromActor(event);\n\n    if (event.target.dataset.field === \"value\") {\n      return item.update({\n        \"system.counter.value\": parseInt(event.target.value),\n      });\n    }\n    if (event.target.dataset.field === \"max\") {\n      return item.update({\n        \"system.counter.max\": parseInt(event.target.value),\n      });\n    }\n  }\n\n  _cycleAttackPatterns(event) {\n    const item = super._getItemFromActor(event);\n    const currentColor = item.system.pattern;\n    // Attack patterns include all OSE colors and transparent\n    const colors = Object.keys(CONFIG.OSE.colors);\n    colors.push(\"transparent\");\n    let index = colors.indexOf(currentColor);\n    if (index + 1 === colors.length) {\n      index = 0;\n    } else {\n      index++;\n    }\n    item.update({\n      \"system.pattern\": colors[index],\n    });\n  }\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param html - {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".morale-check a\").click((ev) => {\n      const actorObject = this.actor;\n      actorObject.rollMorale({ event: ev });\n    });\n\n    html.find(\".reaction-check a\").click((ev) => {\n      const actorObject = this.actor;\n      actorObject.rollReaction({ event: ev });\n    });\n\n    html.find(\".appearing-check a\").click((ev) => {\n      const actorObject = this.actor;\n      const check = $(ev.currentTarget).closest(\".check-field\").data(\"check\");\n      actorObject.rollAppearing({ event: ev, check });\n    });\n\n    html.find(\".treasure-table a\").contextmenu((ev) => {\n      this.actor.update({ \"system.details.treasure.table\": null });\n    });\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.options.editable) return;\n\n    html.find(\".item-reset[data-action='reset-attacks']\").click((ev) => {\n      this._resetAttacks(ev);\n    });\n\n    html\n      .find(\".counter input\")\n      .click((ev) => ev.target.select())\n      .change(this._updateAttackCounter.bind(this));\n\n    html.find(\".hp-roll\").click((ev) => {\n      this.actor.rollHP({ event: ev });\n    });\n\n    html.find(\".item-pattern\").click((ev) => this._cycleAttackPatterns(ev));\n\n    html\n      .find('button[data-action=\"generate-saves\"]')\n      .click(() => this.generateSave());\n  }\n}\n","/**\n * @file Contains helpers for tag generation\n */\n\nconst OseTags = {\n  /**\n  * Returns the formula used for dice roll calculations\n  * @param actor - The actor object which owns the item with roll data\n  * @param data.roll - The string used to generate a formula\n  * @returns tagFormula - The constructed roll formula\n  */\n  rollTagFormula({\n    actor = {},\n    data = {\n      roll: \"\",\n    },\n  } = {}) {\n\n    const formulaData = {\n      actor,\n      data,\n    };\n\n    const tagFormula = new Roll(data.roll, formulaData).formula;\n    return tagFormula;\n  },\n\n  /**\n  * Returns the roll type and target value of rolls\n  * @param rollType - Type of roll target used\n  * @returns tagTarget - The constructed type and target value\n  */\n  rollTagTarget({\n    rollType = \"\" as keyof typeof CONFIG.OSE.roll_type,\n    rollTarget = null,\n  } = {}) {\n\n    const tagTarget =\n      rollTarget === null\n        ? \"\"\n        : ` ${CONFIG.OSE.roll_type[rollType]}${rollTarget}`;\n\n    return tagTarget;\n  },\n};\n\nexport default OseTags;\n","/**\n * @file The data model for Items of type Ability\n */\nimport OseTags from \"../helpers-tags\";\n\nexport default class OseDataModelAbility extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const { StringField, NumberField, BooleanField, ArrayField, ObjectField } =\n      foundry.data.fields;\n    return {\n      save: new StringField(),\n      pattern: new StringField(),\n      requirements: new StringField(),\n      roll: new StringField(),\n      rollType: new StringField(),\n      rollTarget: new NumberField(),\n      blindroll: new BooleanField(),\n      description: new StringField(),\n      tags: new ArrayField(new ObjectField()),\n    };\n  }\n\n  get #rollTag() {\n    if (!this.roll) return null;\n\n    const rollLabel = game.i18n.localize(\"OSE.items.Roll\");\n\n    const rollFormula = OseTags.rollTagFormula({\n      actor: this.parent.actor,\n      data: this._source,\n    });\n\n    const rollTarget = OseTags.rollTagTarget({\n      rollType: this.rollType,\n      rollTarget: this.rollTarget,\n    });\n\n    return {\n      label: `${rollLabel} ${rollFormula}${rollTarget}`\n    };\n  }\n\n  get #saveTag() {\n    if (!this.save) return null;\n\n    return {\n      label: CONFIG.OSE.saves_long[this.save],\n      icon: \"fa-skull\",\n    };\n  }\n\n  get manualTags() {\n    return this.tags || [];\n  }\n\n  get autoTags() {\n    return [\n      ...this.requirements.split(\",\").map((req) => ({ label: req.trim() })),\n      this.#rollTag,\n      this.#saveTag,\n    ].filter((t) => !!t);\n  }\n}\n","/**\n * @file The data model for Items of type Armor\n */\nexport default class OseDataModelArmor extends foundry.abstract.TypeDataModel {\n  static ArmorTypes = {\n    unarmored: \"OSE.armor.unarmored\",\n    light: \"OSE.armor.light\",\n    heavy: \"OSE.armor.heavy\",\n    shield: \"OSE.armor.shield\",\n  };\n\n  static defineSchema() {\n    const {\n      SchemaField,\n      StringField,\n      NumberField,\n      BooleanField,\n      ArrayField,\n      ObjectField,\n    } = foundry.data.fields;\n    return {\n      type: new StringField({\n        initial: \"light\",\n        choices: Object.keys(OseDataModelArmor.ArmorTypes),\n      }),\n      ac: new SchemaField({\n        value: new NumberField({\n          initial: 9,\n        }),\n      }),\n      aac: new SchemaField({\n        value: new NumberField({\n          initial: 10,\n        }),\n      }),\n      description: new StringField(),\n      tags: new ArrayField(new ObjectField()),\n      equipped: new BooleanField(),\n      cost: new NumberField({ min: 0, initial: 0 }),\n      containerId: new StringField(),\n      quantity: new SchemaField({\n        value: new NumberField({ min: 0, initial: 0 }),\n        max: new NumberField({ min: 0, initial: 0 }),\n      }),\n      weight: new NumberField({ min: 0, initial: 0 }),\n      itemslots: new NumberField({ min: 0, initial: 1 }),\n    };\n  }\n\n  get manualTags() {\n    if (!this.tags) return null;\n\n    const tagNames = new Set(\n      Object.values(CONFIG.OSE.auto_tags).map(({ label }) => label)\n    );\n    return this.tags\n      .filter(({ value }) => !tagNames.has(value))\n      .map(({ title, value }) => ({\n        title,\n        value,\n        label: value,\n      }));\n  }\n\n  get autoTags() {\n    const tagNames = Object.values(CONFIG.OSE.auto_tags);\n\n    const autoTags = this.tags.map(({ value }) =>\n      tagNames.find(({ label }) => value === label)\n    );\n\n    return [\n      { label: OseDataModelArmor.ArmorTypes[this.type], icon: \"fa-tshirt\" },\n      ...autoTags,\n      ...this.manualTags,\n    ]\n      .flat()\n      .filter((t) => !!t);\n  }\n}\n","/**\n * @file The data model for Items of type Container\n */\nexport default class OseDataModelContainer extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const {\n      SchemaField,\n      StringField,\n      NumberField,\n      ArrayField,\n      ObjectField,\n      BooleanField,\n    } = foundry.data.fields;\n    return {\n      itemIds: new ArrayField(new StringField()),\n      description: new StringField(),\n      tags: new ArrayField(new ObjectField()),\n      equipped: new BooleanField(),\n      cost: new NumberField({ min: 0, initial: 0 }),\n      containerId: new StringField(),\n      quantity: new SchemaField({\n        value: new NumberField({ min: 0, initial: 0 }),\n        max: new NumberField({ min: 0, initial: 0 }),\n      }),\n      weight: new NumberField({ min: 0, initial: 0 }),\n      itemslots: new NumberField({ min: 0, initial: 1 }),\n    };\n  }\n\n  get contents() {\n    if (!this.itemIds) return null;\n    if (!this?.parent?.parent?.items) return null;\n    const { id } = this.parent;\n    return this.parent.parent.items.filter(\n      ({ system: { containerId } }) => id === containerId\n    );\n  }\n\n  get totalWeight() {\n    return this.contents.reduce(\n      (acc, { system: { weight, quantity } }) =>\n        acc + weight * (quantity?.value || 1),\n      0\n    );\n  }\n\n  get manualTags() {\n    if (!this.tags) return null;\n\n    const tagNames = new Set(\n      Object.values(CONFIG.OSE.auto_tags).map(({ label }) => label)\n    );\n    return this.tags\n      .filter(({ value }) => !tagNames.has(value))\n      .map(({ title, value }) => ({ title, value, label: value }));\n  }\n\n  get autoTags() {\n    const tagNames = Object.values(CONFIG.OSE.auto_tags);\n\n    const autoTags = this.tags.map(({ value }) =>\n      tagNames.find(({ label }) => value === label)\n    );\n\n    return [...autoTags, ...this.manualTags].flat().filter((t) => !!t);\n  }\n}\n","/**\n * @file The data model for Items of type Ability\n */\nexport default class OseDataModelItem extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const {\n      SchemaField,\n      StringField,\n      NumberField,\n      BooleanField,\n      ArrayField,\n      ObjectField,\n    } = foundry.data.fields;\n    return {\n      treasure: new BooleanField(),\n      description: new StringField(),\n      tags: new ArrayField(new ObjectField()),\n      equipped: new BooleanField(),\n      cost: new NumberField({ min: 0, initial: 0 }),\n      containerId: new StringField(),\n      quantity: new SchemaField({\n        value: new NumberField({ min: 0, initial: 1 }),\n        max: new NumberField({ min: 0, initial: 0 }),\n      }),\n      weight: new NumberField({ min: 0, initial: 0 }),\n      itemslots: new NumberField({ min: 0, initial: 0 }),\n    };\n  }\n  get cumulativeWeight(){\n    return this.weight * this.quantity.value;\n  }\n\n  get cumulativeCost(){\n    return this.cost * this.quantity.value;\n  }\n\n  get cumulativeItemslots(){\n    return Math.ceil(this.itemslots * this.quantity.value);\n  }\n\n  static migrateData(source) {\n    if (source.details?.description && !source.description)\n      source.description = source.details.description;\n    return source;\n  }\n\n  get manualTags() {\n    if (!this.tags) return null;\n\n    const tagNames = new Set(\n      Object.values(CONFIG.OSE.auto_tags).map(({ label }) => label)\n    );\n    return this.tags\n      .filter(({ value }) => !tagNames.has(value))\n      .map(({ title, value }) => ({ title, value, label: value }));\n  }\n\n  get autoTags() {\n    const tagNames = Object.values(CONFIG.OSE.auto_tags);\n\n    const autoTags = this.tags.map(({ value }) =>\n      tagNames.find(({ label }) => value === label)\n    );\n\n    return [...autoTags, ...this.manualTags].flat().filter((t) => !!t);\n  }\n}\n","/**\n * @file The data model for Items of type Spell\n */\nimport OseTags from \"../helpers-tags\";\n\nexport default class OseDataModelSpell extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const { StringField, NumberField, ArrayField, ObjectField } =\n      foundry.data.fields;\n    return {\n      save: new StringField(),\n      lvl: new NumberField({ positive: true, min: 0 }),\n      class: new StringField(),\n      duration: new StringField(),\n      range: new StringField(),\n      roll: new StringField(),\n      memorized: new NumberField({ min: 0 }),\n      cast: new NumberField({ min: 0 }),\n      description: new StringField(),\n      tags: new ArrayField(new ObjectField()),\n    };\n  }\n\n  get #rollTag() {\n    if (!this.roll) return null;\n\n    const rollLabel = game.i18n.localize(\"OSE.items.Roll\");\n\n    const rollFormula = OseTags.rollTagFormula({\n      actor: this.parent.actor,\n      data: this._source,\n    });\n\n    return {\n      label: `${rollLabel} ${rollFormula}`\n    };\n  }\n\n  get #saveTag() {\n    if (!this.save) return null;\n\n    return {\n      label: CONFIG.OSE.saves_long[this.save],\n      icon: \"fa-skull\",\n    };\n  }\n\n  get manualTags() {\n    return this.tags || [];\n  }\n\n  get autoTags() {\n    return [\n      { label: this.class },\n      { label: this.range },\n      { label: this.duration },\n      this.#rollTag,\n      this.#saveTag,\n    ].filter((t) => !!t);\n  }\n}\n","/**\n * @file The data model for Items of type Weapon\n */\nexport default class OseDataModelWeapon extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const {\n      SchemaField,\n      StringField,\n      NumberField,\n      BooleanField,\n      ArrayField,\n      ObjectField,\n    } = foundry.data.fields;\n    return {\n      damage: new StringField(),\n      description: new StringField(),\n      tags: new ArrayField(new ObjectField()),\n      equipped: new BooleanField(),\n      save: new StringField(),\n      range: new SchemaField({\n        short: new NumberField({ integer: true, min: 0, initial: 0 }),\n        medium: new NumberField({ integer: true, min: 0, initial: 0 }),\n        long: new NumberField({ integer: true, min: 0, initial: 0 }),\n      }),\n      bonus: new NumberField({}),\n      pattern: new StringField(),\n      missile: new BooleanField(),\n      melee: new BooleanField(),\n      slow: new BooleanField(),\n      counter: new SchemaField({\n        value: new NumberField({ integer: true, min: 0, initial: 0 }),\n        max: new NumberField({ integer: true, min: 0, initial: 0 }),\n      }),\n      cost: new NumberField({ min: 0, initial: 0 }),\n      containerId: new StringField(),\n      quantity: new SchemaField({\n        value: new NumberField({ min: 0 }),\n        max: new NumberField({ min: 0 }),\n      }),\n      weight: new NumberField({ min: 0 }),\n      itemslots: new NumberField({ min: 0, initial: 1 }),\n    };\n  }\n\n  get #missileTag() {\n    if (!this.missile) return null;\n    return [\n      CONFIG.OSE.auto_tags.missile,\n      {\n        label: `${this.range.short}/${this.range.medium}/${this.range.long}`,\n        icon: \"fa-bullseye\",\n      },\n    ];\n  }\n\n  get #meleeTag() {\n    if (!this.melee) return null;\n    return CONFIG.OSE.auto_tags.melee;\n  }\n\n  get #slowTag() {\n    if (!this.slow) return null;\n    return CONFIG.OSE.auto_tags.slow;\n  }\n\n  get #saveTag() {\n    if (!this.save) return null;\n\n    return {\n      label: CONFIG.OSE.saves_long[this.save],\n      icon: \"fa-skull\",\n    };\n  }\n\n  get manualTags() {\n    if (!this.tags) return null;\n\n    const tagNames = new Set(\n      Object.values(CONFIG.OSE.auto_tags).map(({ label }) => label)\n    );\n    return this.tags.filter(({ value }) => !tagNames.has(value));\n  }\n\n  /**\n   * Icons that display in the inventory grid's weapon row, under \"Qualities\"\n   *\n   * @returns {Array} - An array of qualities that display in the \"Qualities\" column on an Actor's Inventory sheet\n   */\n  get qualities() {\n    return [\n      ...this.autoTags\n        .filter((t) => !!t.image)\n        .map((t) => ({\n          ...t,\n          title: t.label,\n        })),\n      ...this.manualTags,\n    ];\n  }\n\n  get autoTags() {\n    const tagNames = Object.values(CONFIG.OSE.auto_tags);\n\n    const autoTags = this.tags.map(({ value }) =>\n      tagNames.find(({ label }) => value === label)\n    );\n\n    return [\n      { label: this.damage, icon: \"fa-tint\" },\n      this.#meleeTag,\n      this.#missileTag,\n      this.#slowTag,\n      ...autoTags,\n      this.#saveTag,\n    ]\n      .flat()\n      .filter((t) => !!t);\n  }\n}\n","/**\n * @file The system-level sheet for items of any type\n */\nimport OSE from \"../config\";\n\n/**\n * Extend the basic ItemSheet with some very simple modifications\n */\nexport default class OseItemSheet extends ItemSheet {\n  /**\n   * Extend and override the default options used by the Simple Item Sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"ose\", \"sheet\", \"item\"],\n      width: 520,\n      height: 390,\n      resizable: true,\n      tabs: [\n        {\n          navSelector: \".tabs\",\n          contentSelector: \".sheet-body\",\n          initial: \"description\",\n        },\n      ],\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  get template() {\n    const path = `${OSE.systemPath()}/templates/items`;\n    return `${path}/${this.item.type}-sheet.html`;\n  }\n\n  /**\n   * Prepare data for rendering the Item sheet\n   * The prepared data object contains both the actor data as well as additional sheet options\n   *\n   * @returns {object} Data for the Handlebars template\n   */\n  async getData() {\n    const { data } = super.getData();\n    data.editable = this.document.sheet.isEditable;\n    data.config = {\n      ...CONFIG.OSE,\n      encumbrance: game.settings.get(game.system.id, \"encumbranceOption\"),\n    };\n    data.enriched = {\n      description: await TextEditor.enrichHTML(\n        this.item.system?.description || \"\",\n        { async: true }\n      ),\n    };\n    return data;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param {JQuery} html - The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    html.find('input[data-action=\"add-tag\"]').keypress((ev) => {\n      if (ev.which === 13) {\n        const value = $(ev.currentTarget).val();\n        const values = value.split(\",\");\n        this.object.pushManualTag(values);\n      }\n    });\n    html.find(\".tag-delete\").click((ev) => {\n      const value = ev.currentTarget.parentElement.dataset.tag;\n      this.object.popManualTag(value);\n    });\n    html.find(\"a.melee-toggle\").click(() => {\n      this.object.update({ \"system.melee\": !this.object.system.melee });\n    });\n\n    html.find(\"a.missile-toggle\").click(() => {\n      this.object.update({ \"system.missile\": !this.object.system.missile });\n    });\n\n    super.activateListeners(html);\n  }\n}\n","/**\n * @file A collection of helper utils for chat cards\n */\nimport OseActor from \"./actor/entity\";\n\n/**\n * Apply rolled dice damage to the token or tokens which are currently controlled.\n * This allows for damage to be scaled by a multiplier to account for healing, critical hits, or resistance\n *\n * @param {HTMLElement} html - The chat entry which contains the roll data\n * @param {number} multiplier - A damage multiplier to apply to the rolled damage.\n */\nfunction applyChatCardDamage(html: JQuery, multiplier: 1 | -1) {\n  const amount = html.find(\".dice-total\").last().text();\n  const dmgTgt = game.settings.get(game.system.id, \"applyDamageOption\");\n  if (dmgTgt === CONFIG.OSE.apply_damage_options.originalTarget) {\n    const victimId = html.find(\".chat-target\").last().data(\"id\");\n    (async () => {\n      const actor = ((await fromUuid(victimId || '')) as TokenDocument)?.actor;\n      await applyDamageToTarget(actor, amount, multiplier, actor?.name || victimId || 'original target');\n    })();\n  }\n  if (dmgTgt === CONFIG.OSE.apply_damage_options.targeted) {\n    game.user?.targets.forEach((t) => applyDamageToTarget(t.actor, amount, multiplier, t.name));\n  }\n  if (dmgTgt === CONFIG.OSE.apply_damage_options.selected) {\n    canvas.tokens?.controlled.forEach((t) => applyDamageToTarget(t.actor, amount, multiplier, t.name));\n  }\n}\n\nasync function applyDamageToTarget(actor: Actor | null, amount: string, multiplier: 1 | -1, nameOrId: string) {\n  if (!game.user?.isGM || !(actor instanceof OseActor)) {\n    ui.notifications?.error(game.i18n.format(\"OSE.error.cantDealDamageTo\", { nameOrId }));\n    return;\n  }\n  await actor.applyDamage(amount, multiplier);\n}\n\nconst canApply: ContextMenuEntry[\"condition\"] = (li) =>\n  canApplyDamage(li) && !!li.find(\".dice-roll\").length;;\n\nfunction canApplyDamage(html: JQuery) {\n  if (!html.find('.dice-total').length) return false;\n  const applyDamageOption = game.settings.get(game.system.id, \"applyDamageOption\");\n  switch (applyDamageOption) {\n    case CONFIG.OSE.apply_damage_options.originalTarget:\n      return !!html.find(\".chat-target\").last().data(\"id\");\n    case CONFIG.OSE.apply_damage_options.targeted:\n      return !!game.user?.targets?.size;\n    case CONFIG.OSE.apply_damage_options.selected:\n      return !!canvas.tokens?.controlled.length;\n    default: {\n      ui.notifications?.error(game.i18n.format(\"OSE.error.unexpectedSettings\", {\n        configName: 'applyDamageOption',\n        configValue: applyDamageOption,\n      }));\n      return false;\n    }\n  }\n}\n\n/**\n * This function is used to hook into the Chat Log context menu to add additional options to each message\n * These options make it easy to conveniently apply damage to controlled tokens based on the value of a Roll\n *\n * @param {object} _ - Unused jQuery collection\n * @param {Array} options - The list of context menu options\n * @returns {undefined}\n */\nexport const addChatMessageContextOptions = (\n  _: JQuery,\n  options: ContextMenuEntry[]\n) => {\n  options.push(\n    {\n      name: game.i18n.localize(\"OSE.messages.applyDamage\"),\n      icon: '<i class=\"fas fa-user-minus\"></i>',\n      condition: canApply,\n      callback: (li) => applyChatCardDamage(li, 1),\n    },\n    {\n      name: game.i18n.localize(\"OSE.messages.applyHealing\"),\n      icon: '<i class=\"fas fa-user-plus\"></i>',\n      condition: canApply,\n      callback: (li) => applyChatCardDamage(li, -1),\n    }\n  );\n  return options;\n};\n\n/* -------------------------------------------- */\n\nexport const addChatMessageButtons = (msg: ChatMessage, html: JQuery) => {\n  // Hide blind rolls\n  const blindable = html.find(\".blindable\");\n  if (\n    // @ts-ignore need to add ChatMessage document property updates.\n    msg?.blind &&\n    !game.user?.isGM &&\n    blindable &&\n    blindable.data(\"blind\") === true\n  ) {\n    blindable.replaceWith(\n      \"<div class='dice-roll'><div class='dice-result'><div class='dice-formula'>???</div></div></div>\"\n    );\n  }\n  // Buttons\n  const roll = html.find(\".damage-roll\");\n  if (roll.length > 0 && canApplyDamage(html)) {\n    roll.append(\n      $(\n        `<div class=\"dice-damage\"><button type=\"button\" data-action=\"apply-damage\"><i class=\"fas fa-tint\"></i></button></div>`\n      )\n    );\n    roll.find('button[data-action=\"apply-damage\"]').on(\"click\", (ev) => {\n      ev.preventDefault();\n      applyChatCardDamage(html, 1);\n    });\n  }\n};\n\nexport const functionsForTesting = {\n  applyChatCardDamage,\n};\n","/**\n * @file System-level odifications to the way combat works\n */\nimport OSE from \"./config\";\n\nconst OseCombat = {\n  STATUS_SLOW: -789,\n  STATUS_DIZZY: -790,\n\n  debounce(callback, wait) {\n    let timeoutId = null;\n    return (...args) => {\n      window.clearTimeout(timeoutId);\n      timeoutId = window.setTimeout(() => {\n        callback.apply(null, args);\n      }, wait);\n    };\n  },\n  async rollInitiative(combat, data) {\n    // Check groups\n    data.combatants = [];\n    const groups = {};\n    const combatants = combat?.combatants;\n    combatants.forEach((cbt) => {\n      const group = cbt.getFlag(game.system.id, \"group\");\n      groups[group] = { present: true };\n      data.combatants.push(cbt);\n    });\n    // Roll init\n    for (const group in groups) {\n      // Object.keys(groups).forEach((group) => {\n      const roll = new Roll(\"1d6\");\n      await roll.evaluate();\n      await roll.toMessage({\n        flavor: game.i18n.format(\"OSE.roll.initiative\", {\n          group: CONFIG.OSE.colors[group],\n        }),\n      });\n      groups[group].initiative = roll.total;\n      // });\n    }\n    // Set init\n    for (let i = 0; i < data.combatants.length; ++i) {\n      if (game.user.isGM) {\n        if (!data.combatants[i].actor) {\n          return;\n        }\n        const actorData = data.combatants[i].actor?.system;\n        if (actorData.isSlow) {\n          await data.combatants[i].update({\n            initiative: OseCombat.STATUS_SLOW,\n          });\n        } else {\n          const group = data.combatants[i].getFlag(game.system.id, \"group\");\n          this.debounce(\n            data.combatants[i].update({ initiative: groups[group].initiative }),\n            500\n          );\n        }\n      }\n    }\n\n    await combat.setupTurns();\n  },\n\n  async resetInitiative(combat, data) {\n    const reroll = game.settings.get(game.system.id, \"rerollInitiative\");\n    if (![\"reset\", \"reroll\"].includes(reroll)) {\n      return;\n    }\n    combat.resetAll();\n  },\n\n  async individualInitiative(combat, data) {\n    const updates = [];\n    const rolls = [];\n    const combatants = combat?.combatants;\n    for (let i = 0; i < combatants.size; i++) {\n      const c = combatants.contents[i];\n      // check if actor initiative has already been set for round 1\n      if (c?.initiative && combat.round === 0) {\n        continue;\n      }\n      // This comes from foundry.js, had to remove the update turns thing\n      // Roll initiative\n      const cf = await c._getInitiativeFormula(c);\n      const roll = await c.getInitiativeRoll(cf);\n      rolls.push(roll);\n      const data = { _id: c.id };\n      updates.push(data);\n    }\n    // combine init rolls\n    const pool = PoolTerm.fromRolls(rolls);\n    const combinedRoll = await Roll.fromTerms([pool]);\n    // get evaluated chat message\n    const evalRoll = await combinedRoll.toMessage({}, { create: false });\n    const rollArr = combinedRoll.terms[0].rolls;\n    let msgContent = ``;\n    for (const [i, roll] of rollArr.entries()) {\n      // get combatant\n      const cbt = game.combats.viewed.combatants.find(\n        (c) => c.id === updates[i]._id\n      );\n      // add initiative value to update\n      // check if actor is slow\n      let value = cbt.actor?.system?.isSlow\n        ? OseCombat.STATUS_SLOW\n        : roll.total;\n      // check if actor is defeated\n      if (combat.settings.skipDefeated && cbt.isDefeated) {\n        value = OseCombat.STATUS_DIZZY;\n      }\n      updates[i].initiative = value;\n\n      // render template\n      const template = `${OSE.systemPath()}/templates/chat/roll-individual-initiative.html`;\n      const tData = {\n        name: cbt.name,\n        formula: roll.formula,\n        result: roll.result,\n        total: roll.total,\n      };\n      const rendered = await renderTemplate(template, tData);\n      msgContent += rendered;\n    }\n    evalRoll.content = `\n    <details>\n    <summary>${game.i18n.localize(\"OSE.roll.individualInitGroup\")}</summary>\n    ${msgContent}\n    </details>`;\n    ChatMessage.create(evalRoll);\n    // update tracker\n    if (game.user.isGM)\n      await combat.updateEmbeddedDocuments(\"Combatant\", updates);\n    data.turn = 0;\n  },\n\n  format(object, html, user) {\n    html.find(\".initiative\").each((_, span) => {\n      span.innerHTML =\n        span.innerHTML === `${OseCombat.STATUS_SLOW}`\n          ? '<i class=\"fas fa-weight-hanging\"></i>'\n          : span.innerHTML;\n      span.innerHTML =\n        span.innerHTML === `${OseCombat.STATUS_DIZZY}`\n          ? '<i class=\"fas fa-dizzy\"></i>'\n          : span.innerHTML;\n    });\n\n    html.find(\".combatant\").each((_, ct) => {\n      // Append spellcast and retreat\n      const controls = $(ct).find(\".combatant-controls .combatant-control\");\n      const cmbtant = object.viewed.combatants.get(ct.dataset.combatantId);\n      const moveInCombat = cmbtant.getFlag(game.system.id, \"moveInCombat\");\n      const preparingSpell = cmbtant.getFlag(game.system.id, \"prepareSpell\");\n      const moveActive = moveInCombat ? \"active\" : \"\";\n      controls\n        .eq(1)\n        .after(\n          `<a class='combatant-control move-combat ${moveActive}' title=\"${game.i18n.localize(\n            \"OSE.CombatFlag.RetreatFromMeleeDeclared\"\n          )}\"><i class='fas fa-walking'></i></a>`\n        );\n      const spellActive = preparingSpell ? \"active\" : \"\";\n      controls\n        .eq(1)\n        .after(\n          `<a class='combatant-control prepare-spell ${spellActive}' title=\"${game.i18n.localize(\n            \"OSE.CombatFlag.SpellDeclared\"\n          )}\"><i class='fas fa-magic'></i></a>`\n        );\n    });\n    OseCombat.announceListener(html);\n\n    const init = game.settings.get(game.system.id, \"initiative\") === \"group\";\n    if (!init) {\n      return;\n    }\n\n    html.find('.combat-control[data-control=\"rollNPC\"]').remove();\n    html.find('.combat-control[data-control=\"rollAll\"]').remove();\n    const trash = html.find(\n      '.encounters .combat-control[data-control=\"endCombat\"]'\n    );\n    $(\n      '<a class=\"combat-control\" data-control=\"reroll\"><i class=\"fas fa-dice\"></i></a>'\n    ).insertBefore(trash);\n\n    html.find(\".combatant\").each((_, ct) => {\n      // Can't roll individual inits\n      $(ct).find(\".roll\").remove();\n\n      // Get group color\n      const cmbtant = object.viewed.combatants.get(ct.dataset.combatantId);\n      const color = cmbtant.getFlag(game.system.id, \"group\");\n\n      // Append colored flag\n      const controls = $(ct).find(\".combatant-controls\");\n      controls.prepend(\n        `<a class='combatant-control flag' style='color:${color}' title=\"${CONFIG.OSE.colors[color]}\"><i class='fas fa-flag'></i></a>`\n      );\n    });\n    OseCombat.addListeners(html);\n  },\n\n  updateCombatant(combatant, data) {\n    const init = game.settings.get(game.system.id, \"initiative\");\n    // Why do you reroll ?\n    const actorData = combatant.actor?.system;\n    if (actorData.isSlow) {\n      data.initiative = -789;\n      return;\n    }\n    if (data.initiative && init === \"group\") {\n      const groupInit = data.initiative;\n      const cmbtGroup = combatant.getFlag(game.system.id, \"group\");\n      // Check if there are any members of the group with init\n      game.combats.viewed.combatants.forEach((ct) => {\n        const group = ct.getFlag(game.system.id, \"group\");\n        if (\n          ct.initiative &&\n          ct.initiative != \"-789.00\" &&\n          ct.id != data.id &&\n          group === cmbtGroup &&\n          game.user.isGM\n        ) {\n          // Set init\n          combatant.update({ initiative: parseInt(groupInit) });\n        }\n      });\n    }\n  },\n\n  announceListener(html) {\n    html.find(\".combatant-control.prepare-spell\").click((ev) => {\n      ev.preventDefault();\n      // Toggle spell announcement\n      const id = $(ev.currentTarget).closest(\".combatant\")[0].dataset\n        .combatantId;\n      const isActive = ev.currentTarget.classList.contains(\"active\");\n      const combatant = game.combat.combatants.get(id);\n      combatant.setFlag(game.system.id, \"prepareSpell\", !isActive);\n    });\n    html.find(\".combatant-control.move-combat\").click((ev) => {\n      ev.preventDefault();\n      // Toggle spell announcement\n      const id = $(ev.currentTarget).closest(\".combatant\")[0].dataset\n        .combatantId;\n      const isActive = ev.currentTarget.classList.contains(\"active\");\n      const combatant = game.combat.combatants.get(id);\n      if (game.user.isGM) {\n        combatant.setFlag(game.system.id, \"moveInCombat\", !isActive);\n      }\n    });\n  },\n\n  addListeners(html) {\n    // Cycle through colors\n    html.find(\".combatant-control.flag\").click((ev) => {\n      if (!game.user.isGM) {\n        return;\n      }\n      const currentColor = ev.currentTarget.style.color;\n      const colors = Object.keys(CONFIG.OSE.colors);\n      let index = colors.indexOf(currentColor);\n      if (index + 1 === colors.length) {\n        index = 0;\n      } else {\n        index++;\n      }\n      const id = $(ev.currentTarget).closest(\".combatant\")[0].dataset\n        .combatantId;\n      const combatant = game.combat.combatants.get(id);\n      if (game.user.isGM) {\n        combatant.setFlag(game.system.id, \"group\", colors[index]);\n      }\n    });\n\n    html.find('.combat-control[data-control=\"reroll\"]').click((ev) => {\n      if (!game.combat) {\n        return;\n      }\n      const data = {};\n      OseCombat.rollInitiative(game.combat, data);\n      if (game.user.isGM) {\n        game.combat.update({ data }).then(() => {\n          game.combat.setupTurns();\n        });\n      }\n    });\n  },\n\n  addCombatant(combat, data, options, id) {\n    const token = canvas.tokens.get(data.tokenId);\n    let color = \"black\";\n    const disposition = token?.disposition || token?.data?.disposition;\n    switch (disposition) {\n      case -1: {\n        color = \"red\";\n        break;\n      }\n\n      case 0: {\n        color = \"yellow\";\n        break;\n      }\n\n      case 1: {\n        color = \"green\";\n        break;\n      }\n    }\n    data.flags = {\n      ose: {\n        group: color,\n      },\n    };\n    combat.updateSource({ flags: { ose: { group: color } } });\n  },\n\n  activateCombatant(li) {\n    const turn = game.combat.turns.findIndex(\n      (turn) => turn.id === li.data(\"combatant-id\")\n    );\n    if (game.user.isGM) {\n      game.combat.update({ turn });\n    }\n  },\n\n  addContextEntry(html, options) {\n    options.unshift({\n      name: \"Set Active\",\n      icon: '<i class=\"fas fa-star-of-life\"></i>',\n      callback: OseCombat.activateCombatant,\n    });\n  },\n\n  async preUpdateCombat(combat, data, diff, id) {\n    const init = game.settings.get(game.system.id, \"initiative\");\n    const reroll = game.settings.get(game.system.id, \"rerollInitiative\");\n    if (!data.round) {\n      return;\n    }\n    if (data.round !== 1) {\n      if (reroll === \"reset\") {\n        OseCombat.resetInitiative(combat, data, diff, id);\n        return;\n      }\n      if (reroll === \"keep\") {\n        return;\n      }\n    }\n    if (init === \"group\") {\n      OseCombat.rollInitiative(combat, data, diff, id);\n    } else if (init === \"individual\") {\n      OseCombat.individualInitiative(combat, data, diff, id);\n    }\n  },\n};\n\nexport default OseCombat;\n","/**\n * @file Helper functions related to treasure table rolls\n */\nimport OSE from \"./config\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const augmentTable = (table, html) => {\n  // Treasure Toggle\n  const isTreasureTable = Boolean(\n    table.object.getFlag(game.system.id, \"treasure\")\n  );\n\n  const treasureTableToggle = $(\n    \"<div class='toggle-treasure' title='Toggle Treasure Table'></div>\"\n  );\n  treasureTableToggle.toggleClass(\"active\", isTreasureTable);\n\n  const head = html.find(\".sheet-header\");\n  head.append(treasureTableToggle);\n\n  html.find(\".toggle-treasure\").click((ev) => {\n    const isTreasure = Boolean(\n      table.object.getFlag(game.system.id, \"treasure\")\n    );\n    table.object.setFlag(game.system.id, \"treasure\", !isTreasure);\n  });\n\n  // Treasure table formatting\n  if (!isTreasureTable) {\n    return;\n  }\n\n  // Hide irrelevant standard fields\n  html.find(\".result-range\").hide(); // We only hide this column because the underlying model requires two fields for the range and throw an error if they are missing\n  html.find(\".normalize-results\").remove();\n\n  const chanceHeader = html.find(\".table-header .result-weight\");\n  chanceHeader.text(\"Chance (%)\");\n\n  const chanceColumn = html.find(\".result-weight\");\n  chanceColumn.css(\"flex\", \"0 0 75px\");\n\n  const formula = html.find(\"input[name=formula]\");\n  formula.attr(\"value\", \"1d100\");\n  formula.attr(\"disabled\", true);\n\n  // Replace Roll button\n  const roll = `<button class=\"roll-treasure\" type=\"button\"><i class=\"fas fa-gem\"></i> ${game.i18n.localize(\n    \"OSE.table.treasure.roll\"\n  )}</button>`;\n  html.find(\".sheet-footer .roll\").replaceWith(roll);\n\n  html.find(\".roll-treasure\").click((ev) => {\n    rollTreasure(table.object, { event: ev });\n  });\n};\n\n/**\n *\n * @param table\n * @param data\n */\nasync function drawTreasure(table, data) {\n  const percent = async (chance) => {\n    const roll = new Roll(\"1d100\");\n    await roll.evaluate();\n    return roll.total <= chance;\n  };\n  data.treasure = {};\n  if (table.getFlag(game.system.id, \"treasure\")) {\n    table.results.forEach(async (r) => {\n      if (await percent(r.weight)) {\n        const text = r.getChatText(r);\n        data.treasure[r.id] = {\n          img: r.img,\n          text: TextEditor.enrichHTML(text, { async: false }),\n        };\n        if (\n          r.type === CONST.TABLE_RESULT_TYPES.DOCUMENT &&\n          r.collection === \"RollTable\"\n        ) {\n          const embeddedTable = game.tables.get(r.resultId);\n          await drawTreasure(embeddedTable, data.treasure[r.id]);\n        }\n      }\n    });\n  } else {\n    const { results } = await table.roll();\n    results.forEach((s) => {\n      data.treasure[s.id] = { img: s.img, text: s.text };\n    });\n  }\n  return data;\n}\n\n/**\n *\n * @param table\n * @param options\n */\nexport async function rollTreasure(table, options = {}) {\n  // Draw treasure\n  const data = await drawTreasure(table, {});\n  const templateData = {\n    treasure: data.treasure,\n    table,\n  };\n\n  // Animation\n  if (options.event) {\n    const results = $(options.event.currentTarget.parentElement)\n      .prev()\n      .find(\".table-result\");\n    results.each((_, item) => {\n      item.classList.remove(\"active\");\n      if (data.treasure[item.dataset.resultId]) {\n        item.classList.add(\"active\");\n      }\n    });\n  }\n\n  const html = await renderTemplate(\n    `${OSE.systemPath()}/templates/chat/roll-treasure.html`,\n    templateData\n  );\n\n  const chatData = {\n    content: html,\n    // sound: \"systems/ose/assets/coins.mp3\"\n  };\n\n  const rollMode = game.settings.get(\"core\", \"rollMode\");\n  if ([\"gmroll\", \"blindroll\"].includes(rollMode))\n    chatData.whisper = ChatMessage.getWhisperRecipients(\"GM\");\n  if (rollMode === \"selfroll\") chatData.whisper = [game.user._id];\n  if (rollMode === \"blindroll\") chatData.blind = true;\n\n  ChatMessage.create(chatData);\n}\n\nexport const functionsForTesting = {\n  drawTreasure,\n  rollTreasure,\n};\n","/**\n * @file Functions that make working with hotbar macros easier\n */\nimport {rollTreasure} from \"./helpers-treasure\";\n/* -------------------------------------------- */\n/*  Hotbar Macros                               */\n/* -------------------------------------------- */\n\n/**\n * Create a Macro from an Item drop.\n * Get an existing item macro if one exists, otherwise create a new one.\n *\n * @param {object} data - The dropped data\n * @param {number} slot - The hotbar slot to use\n * @returns {Promise} - Promise of assigned macro or a notification\n */\nexport async function createOseMacro(data, slot) {\n  if (data.type === \"Macro\") {\n    return game.user.assignHotbarMacro(await fromUuid(data.uuid), slot);\n  }\n  if (data.type === \"RollTable\") {\n    const command = `game.ose.rollTableMacro(\"${data.uuid}\");`;\n    const table = await fromUuid(data.uuid);\n    const macro = await Macro.create({\n      name: table.name,\n      type: \"script\",\n      img: table.img,\n      command,\n      flags: { \"ose.tableMacro\": true },\n    });\n    return game.user.assignHotbarMacro(macro, slot);\n  }\n  if (data.type !== \"Item\")\n    return ui.notifications.warn(\n      game.i18n.localize(\"OSE.warn.macrosNotAnItem\")\n    );\n  if (data.uuid.indexOf(\"Item.\") <= 0)\n    return ui.notifications.warn(\n      game.i18n.localize(\"OSE.warn.macrosOnlyForOwnedItems\")\n    );\n  const { item } = data;\n\n  // Create the macro command\n  const command = `game.ose.rollItemMacro(\"${item.name}\");`;\n  let macro = game.macros.contents.find(\n    (m) => m.name === item.name && m.command === command\n  );\n  if (!macro || macro.ownership[game.userId] === undefined) {\n    macro = await Macro.create({\n      name: item.name,\n      type: \"script\",\n      img: item.img,\n      command,\n      flags: { \"ose.itemMacro\": true },\n    });\n  }\n  return game.user.assignHotbarMacro(macro, slot);\n}\n\n/* -------------------------------------------- */\n\n/**\n * Create a Macro from an Item drop.\n * Get an existing item macro if one exists, otherwise create a new one.\n *\n * @param {string} itemName - Name of item to roll\n * @returns {Promise} - Promise of item roll or notification\n */\nexport function rollItemMacro(itemName) {\n  const speaker = ChatMessage.getSpeaker();\n  // Active actor, or inactive actor + token on scene allowed\n  if (!(speaker.actor && speaker.scene))\n    return ui.notifications.warn(\n      game.i18n.localize(\"OSE.warn.macrosNoTokenOwnedInScene\")\n    );\n\n  let actor;\n  if (speaker.token) actor = game.actors.tokens[speaker.token];\n  if (!actor) actor = game.actors.get(speaker.actor);\n\n  // Get matching items\n  const items = actor ? actor.items.filter((i) => i.name === itemName) : [];\n  if (items.length > 1) {\n    ui.notifications.warn(\n      game.i18n.format(\"OSE.warn.moreThanOneItemWithName\", {\n        actorName: actor.name,\n        itemName,\n      })\n    );\n  } else if (items.length === 0) {\n    return ui.notifications.error(\n      game.i18n.format(\"OSE.error.noItemWithName\", {\n        actorName: actor.name,\n        itemName,\n      })\n    );\n  }\n  const item = items[0];\n\n  // Trigger the item roll\n  return item.roll();\n}\n\n/**\n * Roll on a RollTable by uuid if it exists.\n *\n * @param {string} tableUuId - UuId of the RollTable\n */\nexport function rollTableMacro(tableUuId) {\n  fromUuid(tableUuId).then((table) => {\n    if (table === null) {\n      return ui.notifications.error(\n        game.i18n.format(\"OSE.error.noRollTableWithUuId\", {\n          uuid: tableUuId,\n        })\n      );\n    }\n    //\n\n    if (table.getFlag(game.system.id, \"treasure\")) {\n      return rollTreasure(table);\n    }\n    return table.draw({ displayChat: true });\n  });\n}\n","/**\n * @file Static OseParty methods\n */\n\nconst OseParty = {\n  /**\n   * Returns all characters currently in the Party\n   *\n   * @public\n   * @returns {OseActor[]} - A list of party members\n   */\n  get currentParty() {\n    return game.actors.filter(\n      (act) =>\n        act.type === \"character\" &&\n        act.flags[game.system.id] &&\n        act.flags[game.system.id].party === true\n    );\n  },\n};\n\nexport default OseParty;\n","/**\n * @file An application for dispensing XP to party members\n */\nimport OSE from \"../config\";\nimport OseParty from \"./party\";\n\nexport default class OsePartyXP extends FormApplication {\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"ose\", \"dialog\", \"party-xp\"],\n      template: `${OSE.systemPath()}/templates/apps/party-xp.html`,\n      width: 300,\n      height: \"auto\",\n      resizable: false,\n      closeOnSubmit: true,\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   *\n   * @type {string}\n   */\n  // eslint-disable-next-line class-methods-use-this\n  get title() {\n    return game.i18n.localize(\"OSE.dialog.xp.deal\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   *\n   * @returns {object}\n   */\n  getData() {\n    return {\n      actors: OseParty.currentParty,\n      data: this.object,\n      config: CONFIG.OSE,\n      user: game.user,\n      settings: game.settings,\n    };\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, class-methods-use-this\n  _onDrop(event) {\n    event.preventDefault();\n    // WIP Drop Item Quantity\n    let data;\n    try {\n      data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n      if (data.type !== \"Item\") return;\n    } catch (error) {\n      return false;\n    }\n  }\n  /* -------------------------------------------- */\n\n  // eslint-disable-next-line no-underscore-dangle\n  _updateObject(event) {\n    // eslint-disable-next-line no-underscore-dangle\n    this._dealXP(event);\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  _calculateShare() {\n    const { currentParty } = OseParty;\n\n    const html = $(this.form);\n    const totalXP = html.find('input[name=\"total\"]').val();\n    const baseXpShare = parseFloat(totalXP) / currentParty.length;\n\n    currentParty.forEach((a) => {\n      const actorData = a?.system;\n      const xpShare = Math.floor(\n        (actorData.details.xp.share / 100) * baseXpShare\n      );\n      html.find(`li[data-actor-id='${a.id}'] input`).val(xpShare);\n    });\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  _dealXP() {\n    const html = $(this.form);\n    const rows = html.find(\".actor\");\n    rows.each((_, row) => {\n      const qRow = $(row);\n      const value = qRow.find(\"input\").val();\n      const id = qRow.data(\"actorId\");\n      const actor = OseParty.currentParty.find((e) => e.id === id);\n      if (value) {\n        actor.getExperience(Math.floor(parseInt(value, 10)));\n      }\n    });\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    const totalField = html.find('input[name=\"total\"]');\n    // eslint-disable-next-line no-underscore-dangle\n    totalField.on(\"input\", this._calculateShare.bind(this));\n\n    html.find('button[data-action=\"deal-xp\"').click((event) => {\n      super.submit(event);\n    });\n  }\n}\n","/**\n * @file An application for managing the current party.\n */\nimport OSE from \"../config\";\nimport OseParty from \"./party\";\nimport OsePartyXP from \"./party-xp\";\n\nconst Party = {\n  partySheet: void 0,\n};\n\nexport default class OsePartySheet extends FormApplication {\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"ose\", \"dialog\", \"party-sheet\"],\n      template: `${OSE.systemPath()}/templates/apps/party-sheet.html`,\n      width: 280,\n      height: 400,\n      resizable: true,\n      dragDrop: [\n        { dragSelector: \".actor-list .actor\", dropSelector: \".party-members\" },\n      ],\n      closeOnSubmit: false,\n    });\n  }\n\n  static init() {\n    Party.partySheet = new OsePartySheet();\n  }\n\n  static showPartySheet(options = {}) {\n    OsePartySheet.partySheet.render(true, { focus: true, ...options });\n  }\n\n  static get partySheet() {\n    return Party.partySheet;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add the Entity name into the window title\n   *\n   * @type {string}\n   */\n  get title() {\n    return game.i18n.localize(\"OSE.dialog.partysheet\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Construct and return the data object used to render the HTML template for this form application.\n   *\n   * @returns {object}\n   */\n  getData() {\n    const settings = {\n      ascending: game.settings.get(game.system.id, \"ascendingAC\"),\n    };\n\n    return {\n      partyActors: OseParty.currentParty,\n      // data: this.object,\n      config: CONFIG.OSE,\n      user: game.user,\n      settings,\n    };\n  }\n\n  async _addActorToParty(actor) {\n    if (actor.type !== \"character\") {\n      return;\n    }\n\n    await actor.setFlag(game.system.id, \"party\", true);\n  }\n\n  async _removeActorFromParty(actor) {\n    await actor.setFlag(game.system.id, \"party\", false);\n  }\n\n  /* ---------------------- */\n  /* --Drag&Drop Behavior-- */\n  /* ---------------------- */\n\n  /* - Adding to the Party Sheet -*/\n  _onDrop(event) {\n    event.preventDefault();\n    // WIP Drop Items\n    let data;\n    try {\n      data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n\n      switch (data.type) {\n        case \"Actor\": {\n          return this._onDropActor(event, data);\n        }\n\n        case \"Folder\": {\n          return this._onDropFolder(event, data);\n        }\n      }\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async _onDropActor(event, data) {\n    if (data.type !== \"Actor\") {\n      return;\n    }\n\n    const { actors } = game;\n    const droppedActor = await fromUuid(data.uuid);\n\n    this._addActorToParty(droppedActor);\n  }\n\n  _recursiveAddFolder(folder) {\n    folder.contents.forEach((actor) => this._addActorToParty(actor));\n    folder.children.forEach((folder) => this._recursiveAddFolder(folder.folder));\n  }\n\n  async _onDropFolder(event, data) {\n    if (data.documentName !== \"Actor\") {\n      return;\n    }\n\n    const folder = await fromUuid(data.uuid);\n    if (!folder) return;\n\n    this._recursiveAddFolder(folder);\n  }\n\n  /* - Dragging from the Party Sheet - */\n  async _onDragStart(event) {\n    try {\n      const { uuid } = event.currentTarget.dataset;\n      const dragData = (await fromUuid(uuid)).toDragData();\n      // Set data transfer\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    } catch (error) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /* -------------------------------------------- */\n\n  async _dealXP(ev) {\n    new OsePartyXP(this.object, {}).render(true);\n  }\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".header #deal-xp\").click(this._dealXP.bind(this));\n\n    // Actor buttons\n    const getActor = (event) => {\n      const id = event.currentTarget.closest(\".actor\").dataset.actorId;\n      return game.actors.get(id);\n    };\n\n    html.find(\".field-img button[data-action='open-sheet']\").click((event) => {\n      getActor(event).sheet.render(true);\n    });\n\n    html\n      .find(\".field-img button[data-action='remove-actor']\")\n      .click(async (event) => {\n        await this._removeActorFromParty(getActor(event));\n      });\n  }\n}\n","/**\n * @file Helper functions for managing the Party Sheet\n */\nimport OsePartySheet from \"./party/party-sheet\";\n\nexport const addControl = (object, html) => {\n  const control = `<button class='ose-party-sheet' type=\"button\" title='${game.i18n.localize(\n    \"OSE.dialog.partysheet\"\n  )}'><i class='fas fa-users'></i></button>`;\n  html.find(\".fas.fa-search\").replaceWith($(control));\n  html.find(\".ose-party-sheet\").click((ev) => {\n    ev.preventDefault();\n    Hooks.call(\"OSE.Party.showSheet\");\n  });\n};\n\nexport const update = (actor) => {\n  const partyFlag = actor.getFlag(game.system.id, \"party\");\n\n  if (partyFlag === null) {\n    return;\n  }\n\n  OsePartySheet.partySheet.render();\n};\n","/**\n * @file Utilities for our Quench tests\n */\n\nconst inputDelay = 120;\n\nexport const delay = (ms: number) =>\n  new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n\n/**\n * If there are messages, purge them.\n */\nexport const trashChat = (): any => {\n  if (game.messages?.size)\n    game.messages?.documentClass.deleteDocuments([], { deleteAll: true });\n};\n\n/**\n * Delays execution so the UI can catch up.\n *\n * @returns {Promise} The delay.\n */\nexport const waitForInput = () => delay(inputDelay);\n\nexport const openWindows = (className: string) =>\n  Object.values(ui.windows).filter((o) =>\n    o.options.classes.includes(className)\n  );\n\nexport const openDialogs = () =>\n  Object.values(ui.windows).filter((o) => o.options.classes.includes(\"dialog\"));\n\nexport const closeDialogs = async () => {\n  openDialogs()?.forEach(async (o) => {\n    await o.close();\n  });\n};\n\nexport const closeSheets = async () => {\n  openWindows(\"sheet\").forEach(async (w) => w.close());\n  waitForInput();\n};\n\n/**\n * MOCKING HELPERS\n */\n\nexport const createMockActorKey = async (\n  type: string,\n  data: object = {},\n  key: string = \"\"\n) =>\n  Actor.create({\n    ...data,\n    name: `Test Actor ${key}`,\n    type,\n  });\n\nexport const createWorldTestItem = async (\n  type: string,\n  name: string = `New World Test ${type.capitalize()}`\n) =>\n  Item.create({\n    type,\n    name,\n  });\n\nexport const createActorTestItem = async (\n  actor: StoredDocument<Actor> | undefined,\n  type: string,\n  name: string = `New Actor Test ${type.capitalize()}`,\n  data: object = {}\n) => actor?.createEmbeddedDocuments(\"Item\", [{ type, name, ...data }]);\n\nexport const createMockMacro = async () =>\n  Macro.create({\n    name: `Mock Macro ${foundry.utils.randomID()}`,\n    type: \"script\",\n    command: \"console.log('Testing Macro');\",\n  });\n\nexport const createMockScene = async () =>\n  Scene.create({ name: \"Mock Scene\", tokenVision: true });\n\nexport const getMockActorKey = async (key: string) =>\n  game.actors?.getName(`Test Actor ${key}`);\n\n/**\n * CLEANUP HELPERS\n */\n\nexport const cleanUpMacros = async () => {\n  const mockMacros = game.macros?.filter((o) => o.name?.includes(\"Mock Macro\"));\n  mockMacros?.forEach(async (o) => await o.delete());\n  return true;\n};\n\nexport const cleanUpActorsByKey = async (key: string) => {\n  game.actors\n    ?.filter((a) => a.name === `Test Actor ${key}`)\n    .forEach(async (a) => await a.delete());\n};\n\nexport const cleanUpWorldItems = async () => {\n  game.items\n    ?.filter((a) => a?.name?.includes(\"New World Test\"))\n    .forEach(async (a) => await a.delete());\n};\n\nexport const cleanUpScenes = async () => {\n  game.scenes\n    ?.filter((s) => s.name === \"Mock Scene\")\n    .forEach(async (s) => await s.delete());\n};\n\n/**\n * CONSTS\n */\nexport const itemTypes = new Set([\n  \"spell\",\n  \"ability\",\n  \"armor\",\n  \"weapon\",\n  \"item\",\n  \"container\",\n]);\n","/**\n * @file Quench unit tests for the Character data model class.\n */\n// eslint-disable-next-line import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  createMockActorKey,\n  getMockActorKey,\n} from \"../../../e2e/testUtils\";\nimport OseDataModelCharacter from \"../data-model-character\";\n\nexport const key = \"ose.actor.datamodel.character\";\nexport const options = { displayName: \"OSE: Actor: Data Model: Character\" };\n\nconst createMockActor = () => createMockActorKey(\"character\", {}, key);\n\nexport default ({ describe, it, expect, after, before }: QuenchMethods) => {\n  const dataModel = new OseDataModelCharacter();\n  const ascendingACSetting = game.settings.get(game.system.id, \"ascendingAC\");\n  const initiativeSetting = game.settings.get(game.system.id, \"initiative\");\n  const encumbranceSetting = game.settings.get(\n    game.system.id,\n    \"encumbranceOption\"\n  );\n\n  after(() => {\n    game.settings.set(game.system.id, \"ascendingAC\", ascendingACSetting);\n    game.settings.set(game.system.id, \"initiative\", initiativeSetting);\n    game.settings.set(game.system.id, \"encumbranceOption\", encumbranceSetting);\n    cleanUpActorsByKey(key);\n  });\n\n  // @todo: Can this be tested without creating an actor?\n  describe(\"prepareDerivedData()\", () => {\n    before(async () => {\n      await game.settings.set(game.system.id, \"encumbranceOption\", \"detailed\");\n      await createMockActor();\n    });\n\n    it(\"has scores\", async () => {\n      const actor = await getMockActorKey(key);\n      expect(actor?.system.scores).not.undefined;\n      expect(actor?.system.scores.str).not.undefined;\n      expect(actor?.system.scores.str.od).not.undefined;\n      expect(actor?.system.scores.int).not.undefined;\n      expect(actor?.system.scores.int.literacy).not.undefined;\n      expect(actor?.system.scores.int.spoken).not.undefined;\n      expect(actor?.system.scores.wis).not.undefined;\n      expect(actor?.system.scores.dex).not.undefined;\n      expect(actor?.system.scores.dex.init).not.undefined;\n      expect(actor?.system.scores.con).not.undefined;\n      expect(actor?.system.scores.cha).not.undefined;\n      expect(actor?.system.scores.cha.loyalty).not.undefined;\n      expect(actor?.system.scores.cha.retain).not.undefined;\n      expect(actor?.system.scores.cha.npc).not.undefined;\n    });\n\n    it(\"has encumbrance\", async () => {\n      const actor = await getMockActorKey(key);\n      expect(actor?.system.encumbrance).not.undefined;\n      expect(actor?.system.encumbrance.variant).not.undefined;\n      expect(actor?.system.encumbrance.enabled).not.undefined;\n      expect(actor?.system.encumbrance.pct).not.undefined;\n      expect(actor?.system.encumbrance.encumbered).not.undefined;\n      expect(actor?.system.encumbrance.steps).not.undefined;\n      expect(actor?.system.encumbrance.value).not.undefined;\n      expect(actor?.system.encumbrance.max).not.undefined;\n      expect(actor?.system.encumbrance.steps).not.undefined;\n      //expect(actor?.system.encumbrance.atQuarterEncumbered).not.undefined;\n      //expect(actor?.system.encumbrance.atEighthEncumbered).not.undefined;\n    });\n\n    it(\"has movement\", async () => {\n      const actor = await getMockActorKey(key);\n      expect(actor?.system.movement).not.undefined;\n      expect(actor?.system.movement.base).not.undefined;\n      expect(actor?.system.movement.encounter).not.undefined;\n      expect(actor?.system.movement.overland).not.undefined;\n    });\n\n    it(\"has ac\", async () => {\n      const actor = await getMockActorKey(key);\n      expect(actor?.system.ac).not.undefined;\n      expect(actor?.system.ac.base).not.undefined;\n      expect(actor?.system.ac.naked).not.undefined;\n      expect(actor?.system.ac.shield).not.undefined;\n      expect(actor?.system.ac.value).not.undefined;\n      expect(actor?.system.ac.mod).not.undefined;\n    });\n\n    it(\"has aac\", async () => {\n      const actor = await getMockActorKey(key);\n      expect(actor?.system.aac).not.undefined;\n      expect(actor?.system.aac.base).not.undefined;\n      expect(actor?.system.aac.naked).not.undefined;\n      expect(actor?.system.aac.shield).not.undefined;\n      expect(actor?.system.aac.value).not.undefined;\n      expect(actor?.system.aac.mod).not.undefined;\n    });\n\n    describe(\"has spells\", () => {\n      const spellLevels = new Set([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]);\n\n      it(\"has spells\", async () => {\n        const actor = await getMockActorKey(key);\n        expect(actor?.system.spells).not.undefined;\n        expect(actor?.system.spells.enabled).not.undefined;\n        expect(actor?.system.spells.spellList).not.undefined;\n        expect(actor?.system.spells.slots).not.undefined;\n      });\n\n      spellLevels.forEach((lvl) => {\n        it(`has spell level ${lvl}`, async () => {\n          const actor = await getMockActorKey(key);\n          expect(actor?.system.spells.slots[lvl]).not.undefined;\n          expect(Object.keys(actor?.system.spells.slots[lvl])).contain(\"used\");\n          expect(Object.keys(actor?.system.spells.slots[lvl])).contain(\"max\");\n        });\n      });\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"defineSchema()\", () => {\n    before(async () => {\n      await createMockActor();\n    });\n\n    const flatFields = [\"config\", \"initiative\", \"thac0\", \"languages\"];\n    flatFields.forEach((field) => {\n      it(`has ${field}`, async () => {\n        const actor = await getMockActorKey(key);\n        expect(actor?.system[field]).not.undefined;\n      });\n    });\n\n    const recursiveFields = [\n      { field: \"hp\", subFields: [\"hd\", \"value\", \"max\"] },\n      { field: \"exploration\", subFields: [\"ft\", \"ld\", \"od\", \"sd\"] },\n      { field: \"retainer\", subFields: [\"enabled\", \"loyalty\", \"wage\"] },\n    ];\n    recursiveFields.forEach(({ field, subFields }) => {\n      subFields.forEach((subField) => {\n        it(`${field} field has ${subField} subfield`, async () => {\n          const actor = await getMockActorKey(key);\n          expect(actor?.system[field]).not.undefined;\n          expect(actor?.system[field][subField]).not.undefined;\n        });\n      });\n    });\n\n    const doubleRecursiveFields = [\n      {\n        field: \"saves\",\n        subFields: [\n          { subField: \"breath\", subSubField: [\"value\"] },\n          { subField: \"death\", subSubField: [\"value\"] },\n          { subField: \"paralysis\", subSubField: [\"value\"] },\n          { subField: \"spell\", subSubField: [\"value\"] },\n          { subField: \"wand\", subSubField: [\"value\"] },\n        ],\n      },\n    ];\n    doubleRecursiveFields.forEach(({ field, subFields }) => {\n      subFields.forEach(({ subField, subSubField }) => {\n        it(`${field} field has ${subField} subfield, which has ${subSubField} field`, async () => {\n          const actor = await getMockActorKey(key);\n          expect(actor?.system[field]).not.undefined;\n          expect(actor?.system[field][subField]).not.undefined;\n          expect(actor?.system[field][subField][subSubField]).not.undefined;\n        });\n      });\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"usesAscendingAC()\", () => {\n    it(\"successfully reads from settings\", () => {\n      expect(dataModel.usesAscendingAC).equal(\n        game.settings.get(game.system.id, \"ascendingAC\")\n      );\n    });\n  });\n\n  describe(\"meleeMod()\", () => {\n    describe(\"ascendingAC on\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"ascendingAC\", true);\n      });\n\n      it(\"without scores, return 0 if bba undefined\", () => {\n        expect(dataModel.meleeMod).equal(0);\n      });\n\n      it(\"without scores, return thac0.bba when bba defined\", () => {\n        dataModel.thac0.bba = 12;\n        expect(dataModel.meleeMod).equal(12);\n        dataModel.thac0.bba = 0;\n        expect(dataModel.thac0.bba).equal(0);\n      });\n    });\n\n    describe(\"ascendingAC off\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"ascendingAC\", false);\n      });\n\n      it(\"without scores, return 0\", async () => {\n        expect(dataModel.meleeMod).equal(0);\n      });\n    });\n\n    it(\"adds str modifier\", () => {\n      dataModel.scores.str = { mod: 10 };\n      expect(dataModel.meleeMod).equal(10);\n      dataModel.scores.str.mod = 0;\n      expect(dataModel.scores.str.mod).equal(0);\n    });\n\n    it(\"adds thac0 melee modifier\", () => {\n      dataModel.thac0.mod = { melee: 5 };\n      expect(dataModel.meleeMod).equal(5);\n      dataModel.thac0.mod.melee = 0;\n      expect(dataModel.thac0.mod.melee).equal(0);\n    });\n  });\n\n  describe(\"rangedMod()\", () => {\n    describe(\"ascendingAC on\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"ascendingAC\", true);\n      });\n\n      it(\"without scores, return 0 if bba undefined\", () => {\n        expect(dataModel.rangedMod).equal(0);\n      });\n\n      it(\"without scores, return thac0.bba when bba defined\", () => {\n        dataModel.thac0.bba = 12;\n        expect(dataModel.rangedMod).equal(12);\n        dataModel.thac0.bba = 0;\n        expect(dataModel.thac0.bba).equal(0);\n      });\n    });\n\n    describe(\"ascendingAC off\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"ascendingAC\", false);\n      });\n\n      it(\"without scores, return 0\", async () => {\n        expect(dataModel.rangedMod).equal(0);\n      });\n    });\n\n    it(\"adds dex modifier\", () => {\n      dataModel.scores.dex = { mod: 10 };\n      expect(dataModel.rangedMod).equal(10);\n      dataModel.scores.dex.mod = 0;\n      expect(dataModel.scores.dex.mod).equal(0);\n    });\n\n    it(\"adds thac0 missile modifier\", () => {\n      dataModel.thac0.mod = { missile: 5 };\n      expect(dataModel.rangedMod).equal(5);\n      dataModel.thac0.mod.missile = 0;\n      expect(dataModel.thac0.mod.missile).equal(0);\n    });\n  });\n\n  describe(\"isNew()\", () => {\n    it(\"New when all ability scores are at 0\", async () => {\n      const testActor = await createMockActorKey(\n        \"character\",\n        {\n          system: {\n            scores: {\n              str: { value: 0 },\n              int: { value: 0 },\n              wis: { value: 0 },\n              dex: { value: 0 },\n              con: { value: 0 },\n              cha: { value: 0 },\n            },\n          },\n        },\n        key\n      );\n      expect(testActor?.system.isNew).to.be.true;\n    });\n\n    it(\"Not new when any ability score is above 0\", async () => {\n      const testActor = await createMockActorKey(\n        \"character\",\n        {\n          system: {\n            scores: {\n              str: { value: 10 },\n              int: { value: 0 },\n              wis: { value: 0 },\n              dex: { value: 0 },\n              con: { value: 0 },\n              cha: { value: 0 },\n            },\n          },\n        },\n        key\n      );\n      expect(testActor?.system.isNew).to.be.false;\n    });\n\n    it(\"New when all saves are at 0\", async () => {\n      const testActor = await createMockActorKey(\n        \"monster\",\n        {\n          system: {\n            saves: {\n              breath: { value: 0 },\n              death: { value: 0 },\n              paralysis: { value: 0 },\n              spell: { value: 0 },\n              wand: { value: 0 },\n            },\n          },\n        },\n        key\n      );\n      expect(testActor?.system.isNew).to.be.true;\n    });\n\n    it(\"Not new when any save is above 0\", async () => {\n      const testActor = await createMockActorKey(\n        \"monster\",\n        {\n          system: {\n            saves: {\n              breath: { value: 10 },\n              death: { value: 0 },\n              paralysis: { value: 0 },\n              spell: { value: 0 },\n              wand: { value: 0 },\n            },\n          },\n        },\n        key\n      );\n      expect(testActor?.system.isNew).to.be.false;\n    });\n  });\n\n  describe(\"containers()\", () => {\n    it(\"returns all containers\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.containers.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        { type: \"container\", name: \"test container\" },\n      ]);\n      expect(actor?.items.contents.length).equal(1);\n      expect(actor?.items.contents[0].name).equal(\"test container\");\n      // eslint-disable-next-line no-underscore-dangle\n      const itemId = actor?.items.contents[0].id;\n      expect(actor?.system.containers.length).equal(1);\n      // eslint-disable-next-line no-underscore-dangle\n      expect(actor?.system.containers[0]._id).equal(itemId);\n      actor?.delete();\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"treasures()\", () => {\n    it(\"returns treasures on actor\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.treasures.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        { type: \"item\", name: \"test treasure\", system: { treasure: true } },\n      ]);\n      expect(actor?.items.contents.length).equal(1);\n      expect(actor?.items.contents[0].name).equal(\"test treasure\");\n      expect(actor?.items.contents[0].system.treasure).is.true;\n      // eslint-disable-next-line no-underscore-dangle\n      const itemId = actor?.items.contents[0].id;\n      expect(actor?.system.treasures.length).equal(1);\n      // eslint-disable-next-line no-underscore-dangle\n      expect(actor?.system.treasures[0]._id).equal(itemId);\n      actor?.delete();\n    });\n\n    it(\"doesn't returns treasures on actor if in container\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.treasures.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        { type: \"container\", name: \"test container\" },\n      ]);\n      const container = actor?.items.getName(\"test container\");\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        // eslint-disable-next-line no-underscore-dangle\n        {\n          type: \"item\",\n          name: \"test treasure\",\n          system: { treasure: true, containerId: container?.id },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(2);\n      expect(actor?.items.contents[0].name).equal(\"test container\");\n      expect(actor?.items.contents[1].name).equal(\"test treasure\");\n      expect(actor?.items.contents[1].system.treasure).is.true;\n      expect(actor?.items.contents[1].system.containerId).equal(container?.id);\n      expect(actor?.system.treasures.length).equal(0);\n      actor?.delete();\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"carriedTreasure()\", () => {\n    it(\"return treasure value on actor\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.carriedTreasure).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"item\",\n          name: \"test treasure\",\n          system: { treasure: true, quantity: { value: 1 }, cost: 10 },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(1);\n      expect(actor?.items.contents[0].name).equal(\"test treasure\");\n      expect(actor?.items.contents[0].system.treasure).is.true;\n      expect(actor?.system.carriedTreasure).equal(10);\n      actor?.delete();\n    });\n\n    it(\"return multiple treasure value on actor\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.carriedTreasure).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"item\",\n          name: \"test treasure\",\n          system: { treasure: true, quantity: { value: 1 }, cost: 10 },\n        },\n        {\n          type: \"item\",\n          name: \"test treasure 2\",\n          system: { treasure: true, quantity: { value: 3 }, cost: 4 },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(2);\n      expect(actor?.items.contents[0].name).equal(\"test treasure\");\n      expect(actor?.items.contents[0].system.treasure).is.true;\n      expect(actor?.items.contents[1].name).equal(\"test treasure 2\");\n      expect(actor?.items.contents[1].system.treasure).is.true;\n      expect(actor?.system.carriedTreasure).equal(10 + 3 * 4);\n      actor?.delete();\n    });\n\n    it(\"doesn't returns treasure value on actor if in container\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.carriedTreasure).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        { type: \"container\", name: \"test container\" },\n      ]);\n      const container = actor?.items.getName(\"test container\");\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        // eslint-disable-next-line no-underscore-dangle\n        {\n          type: \"item\",\n          name: \"test treasure\",\n          system: {\n            treasure: true,\n            containerId: container?.id,\n            quantity: { value: 1 },\n            cost: 10,\n          },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(2);\n      expect(actor?.items.contents[0].name).equal(\"test container\");\n      expect(actor?.items.contents[1].name).equal(\"test treasure\");\n      expect(actor?.items.contents[1].system.treasure).is.true;\n      // eslint-disable-next-line no-underscore-dangle\n      expect(actor?.items.contents[1].system.containerId).equal(container?.id);\n      expect(actor?.system.carriedTreasure).equal(0);\n      actor?.delete();\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"items()\", () => {\n    it(\"only returns other items than treasure\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.items.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"item\",\n          name: \"test item\",\n        },\n        {\n          type: \"item\",\n          name: \"test treasure\",\n          system: { treasure: true, quantity: { value: 3 }, cost: 4 },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(2);\n      expect(actor?.items.contents[0].name).equal(\"test item\");\n      expect(actor?.items.contents[1].name).equal(\"test treasure\");\n      expect(actor?.items.contents[1].system.treasure).is.true;\n      expect(actor?.system.items.length).equal(1);\n      expect(actor?.system.items[0].name).equal(\"test item\");\n      actor?.delete();\n    });\n\n    it(\"only returns other items than stored in containers\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.items.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"container\",\n          name: \"test container\",\n        },\n      ]);\n      const container = actor?.items.getName(\"test container\");\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        // eslint-disable-next-line no-underscore-dangle\n        {\n          type: \"item\",\n          name: \"test item in container\",\n          system: { containerId: container?.id },\n        },\n        {\n          type: \"item\",\n          name: \"test item\",\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(3);\n      expect(actor?.items.contents[0].name).equal(\"test container\");\n      expect(actor?.items.contents[1].name).equal(\"test item in container\");\n      expect(actor?.items.contents[2].name).equal(\"test item\");\n      expect(actor?.system.items.length).equal(1);\n      expect(actor?.system.items[0].name).equal(\"test item\");\n      actor?.delete();\n    });\n  });\n\n  const testTypes = [\n    { type: \"weapon\", getter: \"weapons\" },\n    { type: \"ability\", getter: \"abilities\" },\n    { type: \"armor\", getter: \"armor\" },\n    { type: \"spell\", getter: \"#spellList\" },\n  ];\n  testTypes.forEach(({ type, getter }) => {\n    describe(`${getter}()`, () => {\n      it(`returns all ${getter}`, async () => {\n        const actor = await createMockActor();\n        expect(actor?.items.contents.length).equal(0);\n        expect(actor?.system[getter].length).equal(0);\n        await actor?.createEmbeddedDocuments(\"Item\", [\n          { type, name: `test ${type}` },\n        ]);\n        expect(actor?.items.contents.length).equal(1);\n        expect(actor?.items.contents[0].name).equal(`test ${type}`);\n        // eslint-disable-next-line no-underscore-dangle\n        const itemId = actor?.items.contents[0].id;\n        expect(actor?.system[getter].length).equal(1);\n        // eslint-disable-next-line no-underscore-dangle\n        expect(actor?.system[getter][0]._id).equal(itemId);\n        actor?.delete();\n      });\n\n      it(`returns all ${getter} except ones in container`, async () => {\n        if (getter === \"abilities\") return;\n\n        const actor = await createMockActor();\n        expect(actor?.items.contents.length).equal(0);\n        expect(actor?.system[getter].length).equal(0);\n        await actor?.createEmbeddedDocuments(\"Item\", [\n          {\n            type: \"container\",\n            name: \"test container\",\n          },\n        ]);\n        const container = actor?.items.getName(\"test container\");\n        await actor?.createEmbeddedDocuments(\"Item\", [\n          // eslint-disable-next-line no-underscore-dangle\n          {\n            type,\n            name: `test ${type} in container`,\n            system: { containerId: container?.id },\n          },\n          {\n            type,\n            name: `test ${type}`,\n          },\n        ]);\n        expect(actor?.items.contents.length).equal(3);\n        expect(actor?.items.contents[0].name).equal(\"test container\");\n        expect(actor?.items.contents[1].name).equal(\n          `test ${type} in container`\n        );\n        expect(actor?.items.contents[2].name).equal(`test ${type}`);\n        // eslint-disable-next-line no-underscore-dangle\n        const itemId = actor?.items.contents[2].id;\n        expect(actor?.system[getter].length).equal(1);\n        // eslint-disable-next-line no-underscore-dangle\n        expect(actor?.system[getter][0]._id).equal(itemId);\n        actor?.delete();\n      });\n\n      after(() => {\n        cleanUpActorsByKey(key);\n      });\n    });\n  });\n\n  describe(\"isSlow()\", () => {\n    it(\"returns false if no weapons\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.system.isSlow).is.false;\n      actor?.delete();\n    });\n\n    it(\"returns false if weapon that has slow tag and not equipped\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"weapon\",\n          name: \"test weapon\",\n          system: { slow: true, equipped: false },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(1);\n      expect(actor?.items.contents[0].name).equal(\"test weapon\");\n      expect(actor?.system.isSlow).is.false;\n      actor?.delete();\n    });\n\n    it(\"returns false if weapon that doesn't have slow tag and not equipped\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"weapon\",\n          name: \"test weapon\",\n          system: { slow: false, equipped: true },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(1);\n      expect(actor?.items.contents[0].name).equal(\"test weapon\");\n      expect(actor?.system.isSlow).is.false;\n      actor?.delete();\n    });\n\n    it(\"returns true if weapon that has slow tag and is equipped\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"weapon\",\n          name: \"test weapon\",\n          system: { slow: true, equipped: true },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(1);\n      expect(actor?.items.contents[0].name).equal(\"test weapon\");\n      expect(actor?.system.isSlow).is.true;\n      actor?.delete();\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"init()\", () => {\n    describe(\"group inititative\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"initiative\", \"group\");\n      });\n\n      it(\"returns 0\", () => {\n        expect(dataModel.init).equal(0);\n      });\n\n      it(\"returns 0 with initiative value set\", async () => {\n        dataModel.initiative.value = 12;\n        expect(dataModel.init).equal(0);\n        dataModel.initiative.value = 0;\n        expect(dataModel.initiative.value).equal(0);\n      });\n\n      it(\"returns 0 with initiative mod set\", async () => {\n        dataModel.initiative.mod = 10;\n        expect(dataModel.init).equal(0);\n        dataModel.initiative.mod = 0;\n        expect(dataModel.initiative.mod).equal(0);\n      });\n\n      it(\"returns 0 with dex mod init set\", async () => {\n        dataModel.dex = { mod: { init: 5 } };\n        expect(dataModel.init).equal(0);\n        dataModel.dex.mod.init = 0;\n        expect(dataModel.dex.mod.init).equal(0);\n      });\n    });\n\n    describe(\"individual inititative\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"initiative\", \"individual\");\n        // @todo: tests fails if scores.dex.init isn't initiated\n        // dataModel.scores.dex = { init: 0 };\n      });\n\n      it(\"returns 0 by default\", () => {\n        expect(dataModel.initiative.value).equal(0);\n        expect(dataModel.initiative.mod).equal(0);\n        expect(dataModel.scores.dex.init).equal(0);\n        expect(dataModel.init).equal(0);\n      });\n\n      it(\"returns correctly with initiative value set\", async () => {\n        dataModel.initiative.value = 12;\n        expect(dataModel.init).equal(12);\n        dataModel.initiative.value = 0;\n        expect(dataModel.initiative.value).equal(0);\n      });\n\n      it(\"returns correctly with initiative mod set\", async () => {\n        dataModel.initiative.mod = 10;\n        expect(dataModel.init).equal(10);\n        dataModel.initiative.mod = 0;\n        expect(dataModel.initiative.mod).equal(0);\n      });\n      it(\"returns correctly with dex mod init set\", async () => {\n        dataModel.scores.dex = { init: 5 };\n        expect(dataModel.init).equal(5);\n        dataModel.scores.dex.init = 0;\n        expect(dataModel.scores.dex.init).equal(0);\n      });\n    });\n  });\n};\n","/**\n * @file Tests for the class representing a creature data model's AC\n */\nimport { QuenchMethods } from \"../../../../e2e\";\nimport OseDataModelCharacterAC from \"../data-model-character-ac\";\n\nexport const key = \"ose.actor.datamodel.character.ac\";\nexport const options = { displayName: \"OSE: Actor: Data Model: Character AC\" };\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  const armorAC = 4;\n  const shieldAC = 2;\n  // eslint-disable-next-line new-cap\n  const armor = new Item.implementation({\n    name: \"Armor\",\n    type: \"armor\",\n    system: {\n      ac: { value: armorAC },\n      aac: { value: armorAC },\n      type: \"light\",\n      equipped: true,\n    },\n  }) as Item;\n\n  // eslint-disable-next-line new-cap\n  const shield = new Item.implementation({\n    name: \"Shield\",\n    type: \"armor\",\n    system: {\n      ac: { value: shieldAC },\n      aac: { value: shieldAC },\n      type: \"shield\",\n      equipped: true,\n    },\n  }) as Item;\n\n  const itemsArmor = [armor];\n  const itemsShield = [shield] as Item[];\n  const itemsBoth = [armor, shield] as Item[];\n\n  const positiveDexMod = 3;\n  const negativeDexMod = -1;\n\n  const positiveArbitraryMod = 2;\n  const negativeArbitraryMod = -4;\n\n  describe(\"Naked AC values\", () => {\n    describe(\"Returns the default base AC\", () => {\n      it(\"When ascending\", () => {\n        const ac = new OseDataModelCharacterAC(true);\n        expect(ac.value).to.equal(OseDataModelCharacterAC.baseAscending);\n      });\n      it(\"When descending\", () => {\n        const ac = new OseDataModelCharacterAC();\n        expect(ac.value).to.equal(OseDataModelCharacterAC.baseDescending);\n      });\n    });\n  });\n\n  describe(\"Armored AC values\", () => {\n    describe(\"Returns the expected AC, provided equipment\", () => {\n      describe(\"With armor\", () => {\n        it(\"When ascending\", () => {\n          const ac = new OseDataModelCharacterAC(true, itemsArmor);\n          // @todo this should be the expectation, needs to happen after data migration\n          // expect(ac,value).to.equal(OseDataModelCharacterAC.baseAscending + armorAC)\n          expect(ac.value).to.equal(armorAC);\n        });\n        it(\"When descending\", () => {\n          const ac = new OseDataModelCharacterAC(false, itemsArmor);\n          // @todo this should be the expectation, needs to happen after data migration\n          // expect(ac,value).to.equal(OseDataModelCharacterAC.baseDescending - armorAC)\n          expect(ac.value).to.equal(armorAC);\n        });\n      });\n\n      describe(\"With shield\", () => {\n        it(\"When ascending\", () => {\n          const ac = new OseDataModelCharacterAC(true, itemsShield);\n          expect(ac.value).to.equal(\n            OseDataModelCharacterAC.baseAscending + shieldAC\n          );\n        });\n        it(\"When descending\", () => {\n          const ac = new OseDataModelCharacterAC(false, itemsShield);\n          expect(ac.value).to.equal(\n            OseDataModelCharacterAC.baseDescending - shieldAC\n          );\n        });\n      });\n\n      describe(\"With armor and shield\", () => {\n        it(\"When ascending\", () => {\n          const ac = new OseDataModelCharacterAC(true, itemsBoth);\n          // @todo this should be the expectation, needs to happen after data migration\n          // expect(ac,value).to.equal(OseDataModelCharacterAC.baseAscending + armorAC + shieldAC)\n          expect(ac.value).to.equal(armorAC + shieldAC);\n        });\n        it(\"When descending\", () => {\n          const ac = new OseDataModelCharacterAC(false, itemsBoth);\n          // @todo this should be the expectation, needs to happen after data migration\n          // expect(ac,value).to.equal(OseDataModelCharacterAC.baseDescending - armorAC - shieldAC)\n          expect(ac.value).to.equal(armorAC - shieldAC);\n        });\n      });\n    });\n  });\n\n  describe(\"With a dexterity modifier\", () => {\n    describe(\"Positive modifier\", () => {\n      describe(\"When ascending\", () => {\n        const base = OseDataModelCharacterAC.baseAscending;\n        it(\"Unarmored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(true, [], positiveDexMod);\n          expect(ac.value).to.equal(base + positiveDexMod);\n        });\n        it(\"Armored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsArmor,\n            positiveDexMod\n          );\n          expect(ac.value).to.equal(armorAC + positiveDexMod);\n        });\n        it(\"Unarmored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsShield,\n            positiveDexMod\n          );\n          expect(ac.value).to.equal(base + shieldAC + positiveDexMod);\n        });\n        it(\"Armored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsBoth,\n            positiveDexMod\n          );\n          expect(ac.value).to.equal(armorAC + shieldAC + positiveDexMod);\n        });\n      });\n      describe(\"When descending\", () => {\n        const base = OseDataModelCharacterAC.baseDescending;\n        it(\"Unarmored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(false, [], positiveDexMod);\n          expect(ac.value).to.equal(base - positiveDexMod);\n        });\n        it(\"Armored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsArmor,\n            positiveDexMod\n          );\n          expect(ac.value).to.equal(armorAC - positiveDexMod);\n        });\n        it(\"Unarmored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsShield,\n            positiveDexMod\n          );\n          expect(ac.value).to.equal(base - shieldAC - positiveDexMod);\n        });\n        it(\"Armored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsBoth,\n            positiveDexMod\n          );\n          expect(ac.value).to.equal(armorAC - shieldAC - positiveDexMod);\n        });\n      });\n    });\n    describe(\"Negative modifier\", () => {\n      describe(\"When ascending\", () => {\n        const base = OseDataModelCharacterAC.baseAscending;\n        it(\"Unarmored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(true, [], negativeDexMod);\n          expect(ac.value).to.equal(base + negativeDexMod);\n        });\n        it(\"Armored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsArmor,\n            negativeDexMod\n          );\n          expect(ac.value).to.equal(armorAC + negativeDexMod);\n        });\n        it(\"Unarmored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsShield,\n            negativeDexMod\n          );\n          expect(ac.value).to.equal(base + shieldAC + negativeDexMod);\n        });\n        it(\"Armored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsBoth,\n            negativeDexMod\n          );\n          expect(ac.value).to.equal(armorAC + shieldAC + negativeDexMod);\n        });\n      });\n      describe(\"When descending\", () => {\n        const base = OseDataModelCharacterAC.baseDescending;\n        it(\"Unarmored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(false, [], negativeDexMod);\n          expect(ac.value).to.equal(base - negativeDexMod);\n        });\n        it(\"Armored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsArmor,\n            negativeDexMod\n          );\n          expect(ac.value).to.equal(armorAC - negativeDexMod);\n        });\n        it(\"Unarmored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsShield,\n            negativeDexMod\n          );\n          expect(ac.value).to.equal(base - shieldAC - negativeDexMod);\n        });\n        it(\"Armored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsBoth,\n            negativeDexMod\n          );\n          expect(ac.value).to.equal(armorAC - shieldAC - negativeDexMod);\n        });\n      });\n    });\n  });\n\n  describe(\"With an arbitrary modifier\", () => {\n    describe(\"Positive modifier\", () => {\n      describe(\"When ascending\", () => {\n        const base = OseDataModelCharacterAC.baseAscending;\n        it(\"Unarmored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            [],\n            0,\n            positiveArbitraryMod\n          );\n          expect(ac.value).to.equal(base + positiveArbitraryMod);\n        });\n        it(\"Armored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsArmor,\n            0,\n            positiveArbitraryMod\n          );\n          expect(ac.value).to.equal(armorAC + positiveArbitraryMod);\n        });\n        it(\"Unarmored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsShield,\n            0,\n            positiveArbitraryMod\n          );\n          expect(ac.value).to.equal(base + shieldAC + positiveArbitraryMod);\n        });\n        it(\"Armored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsBoth,\n            0,\n            positiveArbitraryMod\n          );\n          expect(ac.value).to.equal(armorAC + shieldAC + positiveArbitraryMod);\n        });\n      });\n      describe(\"When descending\", () => {\n        const base = OseDataModelCharacterAC.baseDescending;\n        it(\"Unarmored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            [],\n            0,\n            positiveArbitraryMod\n          );\n          expect(ac.value).to.equal(base - positiveArbitraryMod);\n        });\n        it(\"Armored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsArmor,\n            0,\n            positiveArbitraryMod\n          );\n          expect(ac.value).to.equal(armorAC - positiveArbitraryMod);\n        });\n        it(\"Unarmored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsShield,\n            0,\n            positiveArbitraryMod\n          );\n          expect(ac.value).to.equal(base - shieldAC - positiveArbitraryMod);\n        });\n        it(\"Armored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsBoth,\n            0,\n            positiveArbitraryMod\n          );\n          expect(ac.value).to.equal(armorAC - shieldAC - positiveArbitraryMod);\n        });\n      });\n    });\n    describe(\"Negative modifier\", () => {\n      describe(\"When ascending\", () => {\n        const base = OseDataModelCharacterAC.baseAscending;\n        it(\"Unarmored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            [],\n            0,\n            negativeArbitraryMod\n          );\n          expect(ac.value).to.equal(base + negativeArbitraryMod);\n        });\n        it(\"Armored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsArmor,\n            0,\n            negativeArbitraryMod\n          );\n          expect(ac.value).to.equal(armorAC + negativeArbitraryMod);\n        });\n        it(\"Unarmored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsShield,\n            0,\n            negativeArbitraryMod\n          );\n          expect(ac.value).to.equal(base + shieldAC + negativeArbitraryMod);\n        });\n        it(\"Armored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            true,\n            itemsBoth,\n            0,\n            negativeArbitraryMod\n          );\n          expect(ac.value).to.equal(armorAC + shieldAC + negativeArbitraryMod);\n        });\n      });\n      describe(\"When descending\", () => {\n        const base = OseDataModelCharacterAC.baseDescending;\n        it(\"Unarmored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            [],\n            0,\n            negativeArbitraryMod\n          );\n          expect(ac.value).to.equal(base - negativeArbitraryMod);\n        });\n        it(\"Armored, no shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsArmor,\n            0,\n            negativeArbitraryMod\n          );\n          expect(ac.value).to.equal(armorAC - negativeArbitraryMod);\n        });\n        it(\"Unarmored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsShield,\n            0,\n            negativeArbitraryMod\n          );\n          expect(ac.value).to.equal(base - shieldAC - negativeArbitraryMod);\n        });\n        it(\"Armored, shield\", () => {\n          const ac = new OseDataModelCharacterAC(\n            false,\n            itemsBoth,\n            0,\n            negativeArbitraryMod\n          );\n          expect(ac.value).to.equal(armorAC - shieldAC - negativeArbitraryMod);\n        });\n      });\n    });\n  });\n};\n","/**\n * @file Tests for encumbrance schemes that are part of the Old School Essentials SRD\n */\nimport { QuenchMethods } from \"../../../../e2e\";\nimport OseDataModelCharacterEncumbrance from \"../data-model-character-encumbrance\";\nimport EncumbranceBasic from \"../data-model-character-encumbrance-basic\";\nimport EncumbranceComplete from \"../data-model-character-encumbrance-complete\";\nimport EncumbranceDetailed from \"../data-model-character-encumbrance-detailed\";\nimport EncumbranceDisabled from \"../data-model-character-encumbrance-disabled\";\nimport EncumbranceItemBased from \"../data-model-character-encumbrance-item-based\";\n\nexport const key = \"ose.actor.datamodel.character.encumbrance\";\nexport const options = {\n  displayName: \"OSE: Actor: Data Model: Character Encumbrance\",\n};\n\nconst toPct = (value: number, max: number) =>\n  Math.clamp((100 * value) / max, 0, 100);\nconst createMockItem = (\n  type: string,\n  weight: number,\n  quantity: number,\n  itemOptions = {}\n): Item =>\n  // eslint-disable-next-line new-cap\n  new Item.implementation({\n    name: `Mock ${type} ${foundry.utils.randomID()}`,\n    type,\n    system: { ...itemOptions, weight, quantity: { value: quantity } },\n  }) as Item;\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  describe(\"Disabled Encumbrance\", () => {\n    it(\"Is disabled\", () => {\n      let enc = new OseDataModelCharacterEncumbrance();\n      expect(enc.enabled).to.be.false;\n\n      enc = new EncumbranceDisabled();\n      expect(enc.enabled).to.be.false;\n    });\n  });\n\n  describe(\"Basic Encumbrance\", () => {\n    it(\"Is enabled\", () => {\n      const enc = new EncumbranceBasic();\n      expect(enc.enabled).to.be.true;\n    });\n\n    it(\"Returns the appropriate encumbrance steps\", () => {\n      const enc = new EncumbranceBasic();\n      const step = game.settings.get(game.system.id, \"significantTreasure\");\n      const expectedSteps = [(100 * (step as number)) / enc.max];\n      expect(enc.steps).to.have.members(expectedSteps);\n    });\n\n    describe(\"Returns current carried weight\", () => {\n      it(\"As Percentage\", () => {\n        const max = 1600;\n        const pct25 = 400;\n        const pct50 = 800;\n        const pct75 = 1200;\n\n        let enc = new EncumbranceBasic(max, [\n          createMockItem(\"item\", pct25, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct25, max));\n\n        enc = new EncumbranceBasic(max, [\n          createMockItem(\"item\", pct50, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct50, max));\n\n        enc = new EncumbranceBasic(max, [\n          createMockItem(\"item\", pct75, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct75, max));\n\n        enc = new EncumbranceBasic(max, [\n          createMockItem(\"item\", max, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(100);\n\n        enc = new EncumbranceBasic(max, [\n          createMockItem(\"item\", max, 1, { treasure: false }),\n        ]);\n        expect(enc.pct).to.equal(0);\n      });\n      it(\"As Value\", () => {\n        const max = 1600;\n        const pct25 = 400;\n        const pct50 = 800;\n        const pct75 = 1200;\n\n        let enc = new EncumbranceBasic(max, [\n          createMockItem(\"item\", pct25, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct25);\n\n        enc = new EncumbranceBasic(max, [\n          createMockItem(\"item\", pct50, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct50);\n\n        enc = new EncumbranceBasic(max, [\n          createMockItem(\"item\", pct75, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct75);\n\n        enc = new EncumbranceBasic(max, [\n          createMockItem(\"item\", max, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(max);\n\n        enc = new EncumbranceBasic(max, [\n          createMockItem(\"item\", max, 1, { treasure: false }),\n        ]);\n        expect(enc.value).to.equal(0);\n      });\n      describe(\"As fully encumbered flag\", () => {\n        it(\"Encumbered over full load (1600.1)\", () => {\n          const enc = new EncumbranceBasic(1600, [\n            createMockItem(\"item\", 1600.1, 1, { treasure: true }),\n          ]);\n          expect(enc.encumbered).to.be.true;\n        });\n        describe(\"Not encumbered\", () => {\n          it(\"from non-treasure items\", () => {\n            const enc = new EncumbranceBasic(1600, [\n              createMockItem(\"weapon\", 1600.1, 1),\n              createMockItem(\"armor\", 1600.1, 1),\n              createMockItem(\"container\", 1600.1, 1),\n              createMockItem(\"item\", 1600.1, 1),\n            ]);\n            expect(enc.encumbered).to.be.false;\n          });\n          it(\"from a partial load\", () => {\n            const enc = new EncumbranceBasic(1600, [\n              createMockItem(\"item\", 400, 1, { treasure: true }),\n            ]);\n            expect(enc.encumbered).to.be.false;\n          });\n        });\n      });\n      it('As \"over significant treasure threshold\" flag', () => {\n        let enc = new EncumbranceBasic(1600, [\n          createMockItem(\"item\", 400, 1, { treasure: true }),\n        ]);\n        expect(enc.overSignificantTreasureThreshold).to.be.false;\n\n        enc = new EncumbranceBasic(1600, [\n          createMockItem(\"item\", 800, 1, { treasure: true }),\n        ]);\n        expect(enc.overSignificantTreasureThreshold).to.be.true;\n\n        enc = new EncumbranceBasic(1600, [createMockItem(\"weapon\", 800, 1)]);\n        expect(enc.overSignificantTreasureThreshold).to.be.false;\n      });\n    });\n\n    it(\"Returns max carry weight\", () => {\n      const setMax = 2000;\n\n      let enc = new EncumbranceBasic(setMax);\n      expect(enc.max).to.equal(setMax);\n\n      enc = new EncumbranceBasic();\n      expect(enc.max).to.equal(\n        OseDataModelCharacterEncumbrance.baseEncumbranceCap\n      );\n    });\n  });\n\n  describe(\"Detailed Encumbrance\", () => {\n    it(\"Is enabled\", () => {\n      const enc = new EncumbranceDetailed();\n      expect(enc.enabled).to.be.true;\n    });\n    it(\"Returns the appropriate encumbrance steps\", () => {\n      const enc = new EncumbranceDetailed();\n      expect(enc.steps).to.have.members(\n        Object.values(OseDataModelCharacterEncumbrance.encumbranceSteps)\n      );\n    });\n    describe(\"Returns current carried weight\", () => {\n      it(\"As Percentage\", () => {\n        const max = 1600;\n        const pct25 = 400;\n        const pct50 = 800;\n        const pct75 = 1200;\n\n        let enc = new EncumbranceDetailed(max, [\n          createMockItem(\"item\", pct25, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct25, max));\n\n        enc = new EncumbranceDetailed(max, [\n          createMockItem(\"item\", pct50, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct50, max));\n\n        enc = new EncumbranceDetailed(max, [\n          createMockItem(\"item\", pct75, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct75, max));\n\n        enc = new EncumbranceDetailed(max, [\n          createMockItem(\"item\", max, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(100);\n\n        enc = new EncumbranceDetailed(max, [\n          createMockItem(\"item\", max, 1, { treasure: false }),\n        ]);\n        expect(enc.pct).to.equal(toPct(EncumbranceDetailed.gearWeight, max));\n      });\n      it(\"As Value\", () => {\n        const max = 1600;\n        const pct25 = 400;\n        const pct50 = 800;\n        const pct75 = 1200;\n\n        let enc = new EncumbranceDetailed(max, [\n          createMockItem(\"item\", pct25, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct25);\n\n        enc = new EncumbranceDetailed(max, [\n          createMockItem(\"item\", pct50, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct50);\n\n        enc = new EncumbranceDetailed(max, [\n          createMockItem(\"item\", pct75, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct75);\n\n        enc = new EncumbranceDetailed(max, [\n          createMockItem(\"item\", max, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(max);\n\n        enc = new EncumbranceDetailed(max, [\n          createMockItem(\"item\", max, 1, { treasure: false }),\n        ]);\n        expect(enc.value).to.equal(EncumbranceDetailed.gearWeight);\n      });\n      describe(\"As fully encumbered flag\", () => {\n        it(\"Encumbered over full load (1600.1)\", () => {\n          const enc = new EncumbranceDetailed(1600, [\n            createMockItem(\"item\", 1600.1, 1, { treasure: true }),\n          ]);\n          expect(enc.encumbered).to.be.true;\n        });\n        describe(\"Not encumbered\", () => {\n          it(\"from non-treasure items\", () => {\n            const enc = new EncumbranceDetailed(1600, [\n              createMockItem(\"item\", 1600.1, 1),\n            ]);\n            expect(enc.encumbered).to.be.false;\n            expect(enc.value).to.equal(80);\n          });\n          it(\"from a partial load\", () => {\n            const enc = new EncumbranceDetailed(1600, [\n              createMockItem(\"item\", 400, 1, { treasure: true }),\n            ]);\n            expect(enc.encumbered).to.be.false;\n          });\n        });\n      });\n    });\n\n    it(\"Returns max carry weight\", () => {\n      const setMax = 2000;\n\n      let enc = new EncumbranceDetailed(setMax);\n      expect(enc.max).to.equal(setMax);\n\n      enc = new EncumbranceDetailed();\n      expect(enc.max).to.equal(\n        OseDataModelCharacterEncumbrance.baseEncumbranceCap\n      );\n    });\n  });\n\n  describe(\"Complete Encumbrance\", () => {\n    it(\"Is enabled\", () => {\n      const enc = new EncumbranceComplete();\n      expect(enc.enabled).to.be.true;\n    });\n    it(\"Returns the appropriate encumbrance steps\", () => {\n      const enc = new EncumbranceComplete();\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(enc.steps).to.have.members(\n        Object.values(OseDataModelCharacterEncumbrance.encumbranceSteps)\n      );\n    });\n    describe(\"Returns current carried weight\", () => {\n      it(\"As Percentage\", () => {\n        const max = 1600;\n        const pct25 = 400;\n        const pct50 = 800;\n        const pct75 = 1200;\n\n        let enc = new EncumbranceComplete(max, [\n          createMockItem(\"item\", pct25, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct25, max));\n\n        enc = new EncumbranceComplete(max, [\n          createMockItem(\"item\", pct50, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct50, max));\n\n        enc = new EncumbranceComplete(max, [\n          createMockItem(\"item\", pct75, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct75, max));\n\n        enc = new EncumbranceComplete(max, [\n          createMockItem(\"item\", max, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(100);\n\n        enc = new EncumbranceComplete(max, [\n          createMockItem(\"item\", max, 1, { treasure: false }),\n        ]);\n        expect(enc.pct).to.equal(100);\n      });\n      it(\"As Value\", () => {\n        const max = 1600;\n        const pct25 = 400;\n        const pct50 = 800;\n        const pct75 = 1200;\n\n        let enc = new EncumbranceComplete(max, [\n          createMockItem(\"item\", pct25, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct25);\n\n        enc = new EncumbranceComplete(max, [\n          createMockItem(\"item\", pct50, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct50);\n\n        enc = new EncumbranceComplete(max, [\n          createMockItem(\"item\", pct75, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct75);\n\n        enc = new EncumbranceComplete(max, [\n          createMockItem(\"item\", max, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(max);\n\n        enc = new EncumbranceComplete(max, [\n          createMockItem(\"item\", max, 1, { treasure: false }),\n        ]);\n        expect(enc.value).to.equal(max);\n      });\n      describe(\"As fully encumbered flag\", () => {\n        it(\"Encumbered over full load (1600.1)\", () => {\n          let enc = new EncumbranceComplete(1600, [\n            createMockItem(\"item\", 1600.1, 1, { treasure: true }),\n          ]);\n          expect(enc.encumbered).to.be.true;\n          enc = new EncumbranceComplete(1600, [\n            createMockItem(\"item\", 1600.1, 1, { treasure: false }),\n          ]);\n          expect(enc.encumbered).to.be.true;\n        });\n        describe(\"Not encumbered\", () => {\n          it(\"from a partial load\", () => {\n            const enc = new EncumbranceComplete(1600, [\n              createMockItem(\"item\", 400, 1, { treasure: true }),\n            ]);\n            expect(enc.encumbered).to.be.false;\n          });\n          it(\"from a full load\", () => {\n            let enc = new EncumbranceComplete(1600, [\n              createMockItem(\"item\", 1600, 1, { treasure: true }),\n            ]);\n            expect(enc.encumbered).to.be.false;\n            enc = new EncumbranceComplete(1600, [\n              createMockItem(\"item\", 1600, 1, { treasure: false }),\n            ]);\n            console.info(enc);\n            expect(enc.encumbered).to.be.false;\n          });\n        });\n      });\n    });\n\n    it(\"Returns max carry weight\", () => {\n      const setMax = 2000;\n\n      let enc = new EncumbranceComplete(setMax);\n      expect(enc.max).to.equal(setMax);\n\n      enc = new EncumbranceComplete();\n\n      expect(enc.max).to.equal(\n        OseDataModelCharacterEncumbrance.baseEncumbranceCap\n      );\n    });\n  });\n\n  describe(\"Item-based Encumbrance\", () => {\n    it(\"Is enabled\", () => {\n      const enc = new EncumbranceItemBased();\n      expect(enc.enabled).to.be.true;\n    });\n    it(\"Returns the appropriate encumbrance steps\", () => {\n      const enc = new EncumbranceItemBased();\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(enc.steps).to.have.members(\n        Object.values(OseDataModelCharacterEncumbrance.encumbranceSteps)\n      );\n    });\n    describe(\"Returns current carried weight\", () => {\n      it(\"As Percentage\", () => {\n        const max = 1600;\n        const pct25 = 400;\n        const pct50 = 800;\n        const pct75 = 1200;\n\n        let enc = new EncumbranceItemBased(max, [\n          createMockItem(\"item\", pct25, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct25, max));\n\n        enc = new EncumbranceItemBased(max, [\n          createMockItem(\"item\", pct50, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct50, max));\n\n        enc = new EncumbranceItemBased(max, [\n          createMockItem(\"item\", pct75, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(toPct(pct75, max));\n\n        enc = new EncumbranceItemBased(max, [\n          createMockItem(\"item\", max, 1, { treasure: true }),\n        ]);\n        expect(enc.pct).to.equal(100);\n\n        enc = new EncumbranceItemBased(max, [\n          createMockItem(\"item\", max, 1, { treasure: false }),\n        ]);\n        expect(enc.pct).to.equal(100);\n      });\n      it(\"As Value\", () => {\n        const max = 1600;\n        const pct25 = 400;\n        const pct50 = 800;\n        const pct75 = 1200;\n\n        let enc = new EncumbranceItemBased(max, [\n          createMockItem(\"item\", pct25, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct25);\n\n        enc = new EncumbranceItemBased(max, [\n          createMockItem(\"item\", pct50, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct50);\n\n        enc = new EncumbranceItemBased(max, [\n          createMockItem(\"item\", pct75, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(pct75);\n\n        enc = new EncumbranceItemBased(max, [\n          createMockItem(\"item\", max, 1, { treasure: true }),\n        ]);\n        expect(enc.value).to.equal(max);\n\n        enc = new EncumbranceItemBased(max, [\n          createMockItem(\"item\", max, 1, { treasure: false }),\n        ]);\n        expect(enc.value).to.equal(max);\n      });\n      describe(\"As fully encumbered flag\", () => {\n        it(\"Encumbered over full load (1600.1)\", () => {\n          let enc = new EncumbranceItemBased(1600, [\n            createMockItem(\"item\", 1600.1, 1, { treasure: true }),\n          ]);\n          expect(enc.encumbered).to.be.true;\n          enc = new EncumbranceItemBased(1600, [\n            createMockItem(\"item\", 1600.1, 1, { treasure: false }),\n          ]);\n          expect(enc.encumbered).to.be.true;\n        });\n        describe(\"Not encumbered\", () => {\n          it(\"from a partial load\", () => {\n            const enc = new EncumbranceItemBased(1600, [\n              createMockItem(\"item\", 400, 1, { treasure: true }),\n            ]);\n            expect(enc.encumbered).to.be.false;\n          });\n          it(\"from a full load\", () => {\n            let enc = new EncumbranceItemBased(1600, [\n              createMockItem(\"item\", 1600, 1, { treasure: true }),\n            ]);\n            expect(enc.encumbered).to.be.false;\n            enc = new EncumbranceItemBased(1600, [\n              createMockItem(\"item\", 1600, 1, { treasure: false }),\n            ]);\n            console.info(enc);\n            expect(enc.encumbered).to.be.false;\n          });\n        });\n      });\n    });\n\n    it(\"Returns max carry weight\", () => {\n      const setMax = 2000;\n\n      let enc = new EncumbranceItemBased(setMax);\n      expect(enc.max).to.equal(setMax);\n\n      enc = new EncumbranceItemBased();\n\n      expect(enc.max).to.equal(\n        OseDataModelCharacterEncumbrance.baseEncumbranceCap\n      );\n    });\n  });\n};\n","/**\n * @file Tests for the data model class that determines character movement speed\n */\nimport { QuenchMethods } from \"../../../../e2e\";\nimport OseDataModelCharacterEncumbrance from \"../data-model-character-encumbrance\";\nimport EncumbranceBasic from \"../data-model-character-encumbrance-basic\";\nimport EncumbranceComplete from \"../data-model-character-encumbrance-complete\";\nimport EncumbranceDetailed from \"../data-model-character-encumbrance-detailed\";\nimport OseDataModelCharacterMove from \"../data-model-character-move\";\n\nexport const key = \"ose.actor.datamodel.character.move\";\nexport const options = {\n  displayName: \"OSE: Actor: Data Model: Character Movement\",\n};\n\nconst createMockItem = (\n  type: string,\n  weight: number,\n  quantity: number,\n  itemOptions = {}\n): Item =>\n  // eslint-disable-next-line new-cap\n  new Item.implementation({\n    name: `Mock ${type} ${foundry.utils.randomID()}`,\n    type,\n    system: { ...itemOptions, weight, quantity: { value: quantity } },\n  }) as Item;\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  describe(\"Prevent autocalculation when...\", () => {\n    it(\"Autocalculation is off\", () => {\n      const enc = new EncumbranceBasic();\n      const move = new OseDataModelCharacterMove(enc, false);\n      expect(move.base).to.equal(OseDataModelCharacterMove.baseMoveRate);\n    });\n    it(\"Encumbrance is disabled\", () => {\n      const enc = new OseDataModelCharacterEncumbrance(\"disabled\");\n      const move = new OseDataModelCharacterMove(enc);\n      expect(move.base).to.equal(OseDataModelCharacterMove.baseMoveRate);\n    });\n    it(\"Encumbrance is not provided\", () => {\n      const move = new OseDataModelCharacterMove();\n      expect(move.base).to.equal(OseDataModelCharacterMove.baseMoveRate);\n    });\n  });\n\n  describe(\"Correctly calculates from Basic Encumbrance\", () => {\n    it(\"While unarmored\", () => {\n      let enc = new EncumbranceBasic();\n      let move = new OseDataModelCharacterMove(enc);\n      expect(move.base).to.equal(OseDataModelCharacterMove.baseMoveRate);\n\n      enc = new EncumbranceBasic(undefined, [\n        createMockItem(\"armor\", 100, 1, { type: \"unarmored\", equipped: true }),\n        createMockItem(\"armor\", 100, 1, { type: \"light\", equipped: false }),\n        createMockItem(\"armor\", 100, 1, { type: \"heavy\", equipped: false }),\n      ]);\n      move = new OseDataModelCharacterMove(enc);\n      expect(move.base).to.equal(OseDataModelCharacterMove.baseMoveRate);\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(move.encounter).to.equal(\n        OseDataModelCharacterMove.baseMoveRate / 3\n      );\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(move.overland).to.equal(\n        OseDataModelCharacterMove.baseMoveRate / 5\n      );\n    });\n    it(\"While lightly armored\", () => {\n      const enc = new EncumbranceBasic(undefined, [\n        createMockItem(\"armor\", 100, 1, { type: \"unarmored\", equipped: false }),\n        createMockItem(\"armor\", 100, 1, { type: \"light\", equipped: true }),\n        createMockItem(\"armor\", 100, 1, { type: \"heavy\", equipped: false }),\n      ]);\n      const move = new OseDataModelCharacterMove(enc);\n      expect(move.base).to.equal(OseDataModelCharacterMove.baseMoveRate * 0.75);\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(move.encounter).to.equal(\n        (OseDataModelCharacterMove.baseMoveRate * 0.75) / 3\n      );\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(move.overland).to.equal(\n        (OseDataModelCharacterMove.baseMoveRate * 0.75) / 5\n      );\n    });\n    it(\"While heavily armored\", () => {\n      const enc = new EncumbranceBasic(undefined, [\n        createMockItem(\"armor\", 100, 1, { type: \"unarmored\", equipped: false }),\n        createMockItem(\"armor\", 100, 1, { type: \"light\", equipped: false }),\n        createMockItem(\"armor\", 100, 1, { type: \"heavy\", equipped: true }),\n      ]);\n      const move = new OseDataModelCharacterMove(enc);\n      expect(move.base).to.equal(OseDataModelCharacterMove.baseMoveRate * 0.5);\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(move.encounter).to.equal(\n        (OseDataModelCharacterMove.baseMoveRate * 0.5) / 3\n      );\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(move.overland).to.equal(\n        (OseDataModelCharacterMove.baseMoveRate * 0.5) / 5\n      );\n    });\n    it(\"While carrying a significant amount of treasure\", () => {\n      let enc = new EncumbranceBasic(undefined, [\n        createMockItem(\"item\", EncumbranceBasic.significantTreasure - 1, 1, {\n          treasure: true,\n        }),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n      expect(move.base).to.equal(OseDataModelCharacterMove.baseMoveRate);\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(move.encounter).to.equal(\n        OseDataModelCharacterMove.baseMoveRate / 3\n      );\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(move.overland).to.equal(\n        OseDataModelCharacterMove.baseMoveRate / 5\n      );\n\n      enc = new EncumbranceBasic(undefined, [\n        createMockItem(\"item\", EncumbranceBasic.significantTreasure, 1, {\n          treasure: true,\n        }),\n      ]);\n      move = new OseDataModelCharacterMove(enc);\n      expect(move.base).to.equal(OseDataModelCharacterMove.baseMoveRate - 30);\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(move.encounter).to.equal(\n        (OseDataModelCharacterMove.baseMoveRate - 30) / 3\n      );\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(move.overland).to.equal(\n        (OseDataModelCharacterMove.baseMoveRate - 30) / 5\n      );\n    });\n  });\n  describe(\"Correctly calculates from Detailed Encumbrance\", () => {\n    it(\"At unencumbered\", () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n\n      let enc = new EncumbranceDetailed();\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter);\n      expect(move.overland).to.equal(expectedOverland);\n\n      enc = new EncumbranceDetailed(undefined, [\n        createMockItem(\"item\", 800, 1),\n      ]);\n      move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter);\n      expect(move.overland).to.equal(expectedOverland);\n    })\n    it('At 12.5% encumbered (100% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n\n      const enc = new EncumbranceDetailed(undefined, [\n        createMockItem(\n          \"item\",\n          OseDataModelCharacterEncumbrance.baseEncumbranceCap * 0.125,\n          1,\n          { treasure: true }\n        ),\n      ]);\n      const move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 25% encumbered (100% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n\n      const enc = new EncumbranceDetailed(undefined, [\n        createMockItem(\n          \"item\",\n          OseDataModelCharacterEncumbrance.baseEncumbranceCap * 0.25,\n          1,\n          { treasure: true }\n        ),\n      ]);\n      const move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 25.1% encumbered (75% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .75;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceDetailed(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .251, 1, {treasure: true}),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 37.5% encumbered (75% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .75;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceDetailed(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .375, 1, {treasure: true}),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 37.51% encumbered (50% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .50;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceDetailed(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .3751, 1, {treasure: true}),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 50% encumbered (50% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .50;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceDetailed(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .5, 1, {treasure: true}),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 50.1% encumbered (25% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .25;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceDetailed(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .501, 1, {treasure: true}),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 100% encumbered (25% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .25;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceDetailed(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap, 1, {treasure: true}),\n      ]);\n      const move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 100.1% encumbered (0% moverate)', () => {\n      const expectedBase = 0;\n      const expectedEncounter = 0;\n      const expectedOverland = 0;\n      \n      let enc = new EncumbranceDetailed(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap, 1.001, {treasure: true}),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n  })\n  describe('Correctly calculates from Complete Encumbrance', () => {\n    it('At 0% encumbered (100% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n\n      const enc = new EncumbranceComplete();\n      const move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter);\n      expect(move.overland).to.equal(expectedOverland);\n    })\n    it('At 12.5% encumbered (100% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceComplete(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .125, 1 ),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 25% encumbered (100% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceComplete(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .25, 1 ),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 25.1% encumbered (75% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .75;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceComplete(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .251, 1 ),\n      ]);\n      const move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 37.5% encumbered (75% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .75;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceComplete(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .375, 1 ),\n      ]);\n      const move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 37.51% encumbered (50% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .50;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceComplete(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .3751, 1 ),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 50% encumbered (50% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .50;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceComplete(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .5, 1 ),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 50.1% encumbered (25% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .25;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceComplete(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap * .501, 1 ),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 100% encumbered (25% moverate)', () => {\n      const expectedBase = OseDataModelCharacterMove.baseMoveRate * .25;\n      const expectedEncounter = expectedBase / 3;\n      const expectedOverland = expectedBase / 5;\n      \n      let enc = new EncumbranceComplete(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap, 1 ),\n      ]);\n      let move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter)\n      expect(move.overland).to.equal(expectedOverland)\n    })\n    it('At 100.1% encumbered (0% moverate)', () => {\n      const expectedBase = 0;\n      const expectedEncounter = 0;\n      const expectedOverland = 0;\n      \n      let enc = new EncumbranceComplete(undefined, [\n        createMockItem('item', OseDataModelCharacterEncumbrance.baseEncumbranceCap, 1.001 ),\n      ]);\n      const move = new OseDataModelCharacterMove(enc);\n\n      expect(move.base).to.equal(expectedBase);\n      expect(move.encounter).to.equal(expectedEncounter);\n      expect(move.overland).to.equal(expectedOverland);\n    });\n  });\n};\n","/**\n * @file Tests for the class represening a character's ability scores\n */\nimport { QuenchMethods } from \"../../../../e2e\";\nimport OseDataModelCharacterScores from \"../data-model-character-scores\";\n\nexport const key = \"ose.actor.datamodel.character.scores\";\nexport const options = {\n  displayName: \"OSE: Actor: Data Model: Character Ability Scores\",\n};\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  // An array from 0-\n  const scoreSpread = Array.from({ length: 21 }, (_el, idx) => idx);\n  const scoreKeys = [\"str\", \"int\", \"wis\", \"dex\", \"con\", \"cha\"];\n  const tables = [\n    OseDataModelCharacterScores.standardAttributeMods,\n    OseDataModelCharacterScores.cappedAttributeMods,\n    OseDataModelCharacterScores.openDoorMods,\n    OseDataModelCharacterScores.literacyMods,\n    OseDataModelCharacterScores.spokenMods,\n  ];\n  const fromTable = (tableKey: number, score: number) =>\n    OseDataModelCharacterScores.valueFromTable(tables[tableKey], score);\n  const numberToScores = (number: number) =>\n    Object.fromEntries(\n      scoreKeys.map((scoreKey) => [scoreKey, { value: number, bonus: 0 }])\n    );\n\n  const buildTestCases = (\n    score: number,\n    scoreKey: string,\n    mod: string,\n    table: any\n  ) => {\n    const scoresToUse = numberToScores(score);\n    const scoresObj = new OseDataModelCharacterScores(scoresToUse);\n    return it(`${score}`, () => {\n      expect(scoresObj[scoreKey][mod]).to.equal(fromTable(table, score));\n    });\n  };\n  const buildTestCasesWithModifiers = (\n    score: number,\n    scoreKey: string,\n    mod: string,\n    table: any,\n    added: number\n  ) => {\n    const scoresToUse = numberToScores(score);\n    const scoresObj = new OseDataModelCharacterScores(scoresToUse);\n    return it(`${score}`, () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      expect(scoresObj[scoreKey][mod]).to.equal(\n        fromTable(table, score) + added\n      );\n    });\n  };\n\n  const spreadToModTests = (name: string) =>\n    scoreKeys.map((scoreKey) =>\n      describe(`${name}: ${scoreKey}`, () =>\n        scoreSpread.map((score) => buildTestCases(score, scoreKey, \"mod\", 0)))\n    );\n\n  describe(\"Standard attribute modifiers\", () => spreadToModTests(\"Attribute\"));\n\n  describe(\"Strength modifiers\", () => {\n    describe(\"Open Doors\", () =>\n      scoreSpread.map((score) => buildTestCases(score, \"str\", \"od\", 2)));\n  });\n\n  describe(\"Intelligence modifiers\", () => {\n    describe(\"Literacy\", () =>\n      scoreSpread.map((score) => buildTestCases(score, \"int\", \"literacy\", 3)));\n    describe(\"Spoken Languages\", () =>\n      scoreSpread.map((score) => buildTestCases(score, \"int\", \"spoken\", 4)));\n  });\n\n  describe(\"Dexterity modifiers\", () => {\n    describe(\"Initiative\", () =>\n      scoreSpread.map((score) => buildTestCases(score, \"dex\", \"init\", 1)));\n  });\n\n  describe(\"Charisma modifiers\", () => {\n    describe(\"NPC Reaction\", () =>\n      scoreSpread.map((score) => buildTestCases(score, \"cha\", \"npc\", 1)));\n    describe(\"Loyalty\", () =>\n      scoreSpread.map((score) =>\n        buildTestCasesWithModifiers(score, \"cha\", \"retain\", 0, 4)\n      ));\n    describe(\"Number of Retainers\", () =>\n      scoreSpread.map((score) =>\n        buildTestCasesWithModifiers(score, \"cha\", \"loyalty\", 0, 7)\n      ));\n  });\n};\n","/**\n * @file Quench unit tests for the data model class that drives actor spells.\n */\nimport { QuenchMethods } from \"../../../../e2e\";\nimport OseDataModelCharacterSpells from \"../data-model-character-spells\";\n\nexport const key = \"ose.actor.datamodel.character.spells\";\nexport const options = {\n  displayName: \"OSE: Actor: Data Model: Character Spells\",\n};\n\nconst createMockSpell = (lvl: number, spellOptions?: any): Item =>\n  // eslint-disable-next-line new-cap\n  new Item.implementation({\n    name: `Mock Spell ${foundry.utils.randomID()}`,\n    type: \"spell\",\n    system: { ...spellOptions, lvl },\n  }) as Item;\n\nconst createMockSpellList = (spellOptions: any, ...levels: any) =>\n  levels.reduce(\n    (arr: Item[], lvCount: number, idx: number) => [\n      ...arr,\n      ...Array.from({ length: lvCount }, () =>\n        createMockSpell(idx + 1, spellOptions)\n      ),\n    ],\n    []\n  );\n\n// Core goes to 6, but we'll go to 9 just in case\n// someone wants to implement higher-level spells\nconst spellsPerLevel = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  // Test for spells being sorted into buckets by spell level.\n  describe(\"Spell levels\", () => {\n    it(\"Sorts the incoming spell list into an object with spell level keys\", () => {\n      const spells = createMockSpellList({}, ...spellsPerLevel);\n      const spellData = new OseDataModelCharacterSpells({}, spells);\n      spellsPerLevel.forEach((lv) => {\n        expect(spellData.spellList[lv].length).to.equal(lv);\n      });\n    });\n  });\n  // Test for available/max slots\n  describe(\"Spell slots\", () => {\n    describe(\"Shows committed and max spell slots per level\", () => {\n      it(\"with no spells prepared\", () => {\n        const spells = [createMockSpell(1)];\n        const spellData = new OseDataModelCharacterSpells(\n          { 1: { max: 1 } },\n          spells as Item[]\n        );\n        expect(spellData.slots[1].used).to.equal(0);\n        expect(spellData.slots[1].max).to.equal(1);\n      });\n\n      it(\"with spells prepared, not cast\", () => {\n        const spells = [createMockSpell(1, { memorized: 1, cast: 1 })];\n        const spellData = new OseDataModelCharacterSpells(\n          { 1: { max: 1 } },\n          spells as Item[]\n        );\n        expect(spellData.slots[1].used).to.equal(1);\n        expect(spellData.slots[1].max).to.equal(1);\n      });\n\n      it(\"with spells prepared and cast\", () => {\n        const spells = [createMockSpell(1, { memorized: 1, cast: 0 })];\n        const spellData = new OseDataModelCharacterSpells(\n          { 1: { max: 1 } },\n          spells as Item[]\n        );\n        expect(spellData.slots[1].used).to.equal(0);\n        expect(spellData.slots[1].max).to.equal(1);\n      });\n    });\n  });\n  // Sanity check: can we cast spells?\n  describe(\"Checking for spellcasting\", () => {\n    it(\"Can cast spells when spellcasting is enabled\", () => {\n      const spellData = new OseDataModelCharacterSpells({ enabled: true }, []);\n      expect(spellData.enabled).to.be.true;\n    });\n    it(\"Cannot cast spells when spellcasting is disabled\", () => {\n      const spellData = new OseDataModelCharacterSpells({ enabled: false }, []);\n      expect(spellData.enabled).to.be.false;\n    });\n    it(\"Can toggle between being able and unable to cast spells\", () => {\n      const spellData = new OseDataModelCharacterSpells({ enabled: true }, []);\n      expect(spellData.enabled).to.be.true;\n      spellData.enabled = false;\n      expect(spellData.enabled).to.be.false;\n    });\n  });\n};\n","/**\n * @file Contains tests for Monster Data Model.\n */\n// eslint-disable-next-line import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  createMockActorKey,\n  getMockActorKey,\n} from \"../../../e2e/testUtils\";\nimport OseDataModelMonster from \"../data-model-monster\";\n\nexport const key = \"ose.actor.datamodel.monster\";\nexport const options = { displayName: \"OSE: Actor: Data Model: Monster\" };\n\nconst createMockActor = () => createMockActorKey(\"monster\", {}, key);\n\nexport default ({\n  describe,\n  it,\n  expect,\n  after,\n  afterEach,\n  before,\n}: QuenchMethods) => {\n  const dataModel = new OseDataModelMonster();\n  const ascendingACSetting = game.settings.get(game.system.id, \"ascendingAC\");\n  const initiativeSetting = game.settings.get(game.system.id, \"initiative\");\n\n  after(() => {\n    game.settings.set(game.system.id, \"ascendingAC\", ascendingACSetting);\n    game.settings.set(game.system.id, \"initiative\", initiativeSetting);\n    cleanUpActorsByKey(key);\n  });\n\n  // @todo: Can this be tested without creating an actor?\n  describe(\"prepareDerivedData()\", () => {\n    afterEach(() => {\n      cleanUpActorsByKey(key);\n    });\n\n    it(\"doesnt have scores\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.system.scores).is.undefined;\n    });\n\n    it(\"has encumbrance\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.system.encumbrance).not.undefined;\n      expect(actor?.system.encumbrance.variant).not.undefined;\n      expect(actor?.system.encumbrance.enabled).not.undefined;\n      expect(actor?.system.encumbrance.pct).not.undefined;\n      expect(actor?.system.encumbrance.encumbered).not.undefined;\n      expect(actor?.system.encumbrance.steps).not.undefined;\n      expect(actor?.system.encumbrance.value).not.undefined;\n      expect(actor?.system.encumbrance.max).not.undefined;\n      expect(actor?.system.encumbrance.atHalfEncumbered).not.undefined;\n      expect(actor?.system.encumbrance.atQuarterEncumbered).not.undefined;\n      expect(actor?.system.encumbrance.atEighthEncumbered).not.undefined;\n    });\n\n    it(\"have movement\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.system.movement).not.undefined;\n      expect(actor?.system.movement.base).not.undefined;\n    });\n\n    it(\"have ac\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.system.ac).not.undefined;\n      expect(actor?.system.ac.value).not.undefined;\n      expect(actor?.system.ac.mod).not.undefined;\n    });\n\n    it(\"have aac\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.system.aac).not.undefined;\n      expect(actor?.system.aac.value).not.undefined;\n      expect(actor?.system.aac.mod).not.undefined;\n    });\n\n    describe(\"has spells\", () => {\n      // @todo: Should we keep using numbers and keys for spell levels?\n      const spellLevels = new Set([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]);\n\n      it(\"has spells\", async () => {\n        const actor = await createMockActor();\n        expect(actor?.system.spells).not.undefined;\n        expect(actor?.system.spells.enabled).not.undefined;\n        expect(actor?.system.spells.spellList).not.undefined;\n        expect(actor?.system.spells.slots).not.undefined;\n      });\n\n      spellLevels.forEach((lvl) => {\n        it(`has spell level ${lvl}`, async () => {\n          const actor = await createMockActor();\n          expect(actor?.system.spells.slots[lvl]).not.undefined;\n          expect(Object.keys(actor?.system.spells.slots[lvl])).contain(\"used\");\n          expect(Object.keys(actor?.system.spells.slots[lvl])).contain(\"max\");\n        });\n      });\n    });\n  });\n\n  describe(\"defineSchema()\", () => {\n    before(async () => {\n      await createMockActor();\n    });\n\n    const flatFields = [\"config\", \"initiative\", \"thac0\", \"languages\"];\n    flatFields.forEach((field) => {\n      it(`has ${field}`, async () => {\n        const actor = await getMockActorKey(key);\n        expect(actor?.system[field]).not.undefined;\n      });\n    });\n\n    const recursiveFields = [\n      { field: \"hp\", subFields: [\"hd\", \"value\", \"max\"] },\n      { field: \"retainer\", subFields: [\"enabled\", \"loyalty\", \"wage\"] },\n    ];\n    recursiveFields.forEach(({ field, subFields }) => {\n      subFields.forEach((subField) => {\n        it(`${field} field has ${subField} subfield`, async () => {\n          const actor = await getMockActorKey(key);\n          expect(actor?.system[field]).not.undefined;\n          expect(actor?.system[field][subField]).not.undefined;\n        });\n      });\n    });\n\n    const doubleRecursiveFields = [\n      {\n        field: \"saves\",\n        subFields: [\n          { subField: \"breath\", subSubField: [\"value\"] },\n          { subField: \"death\", subSubField: [\"value\"] },\n          { subField: \"paralysis\", subSubField: [\"value\"] },\n          { subField: \"spell\", subSubField: [\"value\"] },\n          { subField: \"wand\", subSubField: [\"value\"] },\n        ],\n      },\n    ];\n    doubleRecursiveFields.forEach(({ field, subFields }) => {\n      subFields.forEach(({ subField, subSubField }) => {\n        it(`${field} field has ${subField} subfield, which has ${subSubField} field`, async () => {\n          const actor = await getMockActorKey(key);\n          expect(actor?.system[field]).not.undefined;\n          expect(actor?.system[field][subField]).not.undefined;\n          expect(actor?.system[field][subField][subSubField]).not.undefined;\n        });\n      });\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"isNew()\", () => {\n    it(\"New when all saves are at 0\", async () => {\n      const testActor = await createMockActorKey(\n        \"monster\",\n        {\n          system: {\n            saves: {\n              breath: { value: 0 },\n              death: { value: 0 },\n              paralysis: { value: 0 },\n              spell: { value: 0 },\n              wand: { value: 0 },\n            },\n          },\n        },\n        key\n      );\n      expect(testActor?.system.isNew).to.be.true;\n    });\n\n    it(\"Not new when any save is above 0\", async () => {\n      const testActor = await createMockActorKey(\n        \"monster\",\n        {\n          system: {\n            saves: {\n              breath: { value: 10 },\n              death: { value: 0 },\n              paralysis: { value: 0 },\n              spell: { value: 0 },\n              wand: { value: 0 },\n            },\n          },\n        },\n        key\n      );\n      expect(testActor?.system.isNew).to.be.false;\n    });\n  });\n\n  describe(\"containers()\", () => {\n    it(\"returns all containers\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.containers.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        { type: \"container\", name: \"test container\" },\n      ]);\n      expect(actor?.items.contents.length).equal(1);\n      expect(actor?.items.contents[0].name).equal(\"test container\");\n      // eslint-disable-next-line no-underscore-dangle\n      const itemId = actor?.items.contents[0].id;\n      expect(actor?.system.containers.length).equal(1);\n      // eslint-disable-next-line no-underscore-dangle\n      expect(actor?.system.containers[0]._id).equal(itemId);\n      actor?.delete();\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"treasures()\", () => {\n    it(\"returns treasures on actor\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.treasures.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        { type: \"item\", name: \"test treasure\", system: { treasure: true } },\n      ]);\n      expect(actor?.items.contents.length).equal(1);\n      expect(actor?.items.contents[0].name).equal(\"test treasure\");\n      expect(actor?.items.contents[0].system.treasure).is.true;\n      // eslint-disable-next-line no-underscore-dangle\n      const itemId = actor?.items.contents[0].id;\n      expect(actor?.system.treasures.length).equal(1);\n      // eslint-disable-next-line no-underscore-dangle\n      expect(actor?.system.treasures[0]._id).equal(itemId);\n      actor?.delete();\n    });\n\n    it(\"doesn't returns treasures on actor if in container\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.treasures.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        { type: \"container\", name: \"test container\" },\n      ]);\n      const container = actor?.items.getName(\"test container\");\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        // eslint-disable-next-line no-underscore-dangle\n        {\n          type: \"item\",\n          name: \"test treasure\",\n          system: { treasure: true, containerId: container?.id },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(2);\n      expect(actor?.items.contents[0].name).equal(\"test container\");\n      expect(actor?.items.contents[1].name).equal(\"test treasure\");\n      expect(actor?.items.contents[1].system.treasure).is.true;\n      // eslint-disable-next-line no-underscore-dangle\n      expect(actor?.items.contents[1].system.containerId).equal(container?.id);\n      expect(actor?.system.treasures.length).equal(0);\n      actor?.delete();\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"items()\", () => {\n    it(\"only returns other items than treasure\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.items.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"item\",\n          name: \"test item\",\n        },\n        {\n          type: \"item\",\n          name: \"test treasure\",\n          system: { treasure: true, quantity: { value: 3 }, cost: 4 },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(2);\n      expect(actor?.items.contents[0].name).equal(\"test item\");\n      expect(actor?.items.contents[1].name).equal(\"test treasure\");\n      expect(actor?.items.contents[1].system.treasure).is.true;\n      expect(actor?.system.items.length).equal(1);\n      expect(actor?.system.items[0].name).equal(\"test item\");\n      actor?.delete();\n    });\n\n    it(\"only returns other items than stored in containers\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      expect(actor?.system.items.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"container\",\n          name: \"test container\",\n        },\n      ]);\n      const container = actor?.items.getName(\"test container\");\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        // eslint-disable-next-line no-underscore-dangle\n        {\n          type: \"item\",\n          name: \"test item in container\",\n          system: { containerId: container?.id },\n        },\n        {\n          type: \"item\",\n          name: \"test item\",\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(3);\n      expect(actor?.items.contents[0].name).equal(\"test container\");\n      expect(actor?.items.contents[1].name).equal(\"test item in container\");\n      expect(actor?.items.contents[2].name).equal(\"test item\");\n      expect(actor?.system.items.length).equal(1);\n      expect(actor?.system.items[0].name).equal(\"test item\");\n      actor?.delete();\n    });\n  });\n\n  const testTypes = [\n    { type: \"weapon\", getter: \"weapons\" },\n    { type: \"ability\", getter: \"abilities\" },\n    { type: \"armor\", getter: \"armor\" },\n    // @todo: { type: \"spell\", getter: \"#spellList\" },\n  ];\n  testTypes.forEach(({ type, getter }) => {\n    describe(`${getter}()`, () => {\n      it(`returns all ${getter}`, async () => {\n        const actor = await createMockActor();\n        expect(actor?.items.contents.length).equal(0);\n        expect(actor?.system[getter].length).equal(0);\n        await actor?.createEmbeddedDocuments(\"Item\", [\n          { type, name: `test ${type}` },\n        ]);\n        expect(actor?.items.contents.length).equal(1);\n        expect(actor?.items.contents[0].name).equal(`test ${type}`);\n        // eslint-disable-next-line no-underscore-dangle\n        const itemId = actor?.items.contents[0].id;\n        expect(actor?.system[getter].length).equal(1);\n        // eslint-disable-next-line no-underscore-dangle\n        expect(actor?.system[getter][0]._id).equal(itemId);\n        actor?.delete();\n      });\n\n      it(`returns all ${getter} except ones in container`, async () => {\n        if (getter === \"abilities\") return;\n        const actor = await createMockActor();\n        expect(actor?.items.contents.length).equal(0);\n        expect(actor?.system[getter].length).equal(0);\n        await actor?.createEmbeddedDocuments(\"Item\", [\n          {\n            type: \"container\",\n            name: \"test container\",\n          },\n        ]);\n        const container = actor?.items.getName(\"test container\");\n        await actor?.createEmbeddedDocuments(\"Item\", [\n          // eslint-disable-next-line no-underscore-dangle\n          {\n            type,\n            name: `test ${type} in container`,\n            system: { containerId: container?.id },\n          },\n          {\n            type,\n            name: `test ${type}`,\n          },\n        ]);\n        expect(actor?.items.contents.length).equal(3);\n        expect(actor?.items.contents[0].name).equal(\"test container\");\n        expect(actor?.items.contents[1].name).equal(\n          `test ${type} in container`\n        );\n        expect(actor?.items.contents[2].name).equal(`test ${type}`);\n        // eslint-disable-next-line no-underscore-dangle\n        const itemId = actor?.items.contents[2].id;\n        expect(actor?.system[getter].length).equal(1);\n        // eslint-disable-next-line no-underscore-dangle\n        expect(actor?.system[getter][0]._id).equal(itemId);\n        actor?.delete();\n      });\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"attackPatterns()\", () => {\n    it(\"returns all weapons and abilities in transparent when no pattern set\", async () => {\n      const actor = await createMockActor();\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        // eslint-disable-next-line no-underscore-dangle\n        {\n          type: \"ability\",\n          name: \"test ability\",\n        },\n        {\n          type: \"weapon\",\n          name: \"test weapon\",\n        },\n      ]);\n      expect(Object.keys(actor?.system.attackPatterns).length).equal(1);\n      expect(Object.keys(actor?.system.attackPatterns)).contain(\"transparent\");\n      expect(actor?.system.attackPatterns.transparent.length).equal(2);\n      expect(actor?.system.attackPatterns.transparent[0].name).equal(\n        \"test weapon\"\n      );\n      expect(actor?.system.attackPatterns.transparent[1].name).equal(\n        \"test ability\"\n      );\n    });\n\n    it(\"returns separated weapons and abilities whith patterns patterns\", async () => {\n      const actor = await createMockActor();\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        // eslint-disable-next-line no-underscore-dangle\n        {\n          type: \"ability\",\n          name: \"test ability green\",\n          system: { pattern: \"green\" },\n        },\n        {\n          type: \"weapon\",\n          name: \"test weapon green\",\n          system: { pattern: \"green\" },\n        },\n        {\n          type: \"ability\",\n          name: \"test ability\",\n        },\n        {\n          type: \"weapon\",\n          name: \"test weapon\",\n        },\n      ]);\n      expect(Object.keys(actor?.system.attackPatterns).length).equal(2);\n      expect(Object.keys(actor?.system.attackPatterns)).contain(\"transparent\");\n      expect(Object.keys(actor?.system.attackPatterns)).contain(\"green\");\n      expect(actor?.system.attackPatterns.transparent.length).equal(2);\n      expect(actor?.system.attackPatterns.transparent[0].name).equal(\n        \"test ability\"\n      );\n      expect(actor?.system.attackPatterns.transparent[1].name).equal(\n        \"test weapon\"\n      );\n      expect(actor?.system.attackPatterns.green.length).equal(2);\n      expect(actor?.system.attackPatterns.green[0].name).equal(\n        \"test weapon green\"\n      );\n      expect(actor?.system.attackPatterns.green[1].name).equal(\n        \"test ability green\"\n      );\n    });\n  });\n\n  describe(\"isSlow()\", () => {\n    it(\"returns false if no weapons\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.system.isSlow).is.false;\n      actor?.delete();\n    });\n\n    it(\"returns false if weapon that doesn't have slow tag\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"weapon\",\n          name: \"test weapon\",\n          system: { slow: false },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(1);\n      expect(actor?.items.contents[0].name).equal(\"test weapon\");\n      expect(actor?.system.isSlow).is.false;\n      actor?.delete();\n    });\n\n    it(\"returns true if weapon that has slow tag\", async () => {\n      const actor = await createMockActor();\n      expect(actor?.items.contents.length).equal(0);\n      await actor?.createEmbeddedDocuments(\"Item\", [\n        {\n          type: \"weapon\",\n          name: \"test weapon\",\n          system: { slow: true },\n        },\n      ]);\n      expect(actor?.items.contents.length).equal(1);\n      expect(actor?.items.contents[0].name).equal(\"test weapon\");\n      expect(actor?.system.isSlow).is.true;\n      actor?.delete();\n    });\n\n    after(() => {\n      cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"init()\", () => {\n    before(async () => {\n      await game.settings.set(game.system.id, \"initiative\", \"individual\");\n      // @todo: tests fails if scores.dex.init isn't initiated\n      // dataModel.scores.dex = { init: 0 };\n    });\n\n    it(\"returns 0 by default\", () => {\n      expect(dataModel.initiative.value).equal(0);\n      expect(dataModel.initiative.mod).equal(0);\n      expect(dataModel.scores.dex.init).equal(0);\n      expect(dataModel.init).equal(0);\n    });\n\n    it(\"returns correctly with initiative value set\", async () => {\n      dataModel.initiative.value = 12;\n      expect(dataModel.init).equal(12);\n      dataModel.initiative.value = 0;\n      expect(dataModel.initiative.value).equal(0);\n    });\n\n    it(\"returns correctly with initiative mod set\", async () => {\n      dataModel.initiative.mod = 10;\n      expect(dataModel.init).equal(10);\n      dataModel.initiative.mod = 0;\n      expect(dataModel.initiative.mod).equal(0);\n    });\n\n    it(\"returns correctly with dex mod init set\", async () => {\n      dataModel.scores.dex = { init: 5 };\n      expect(dataModel.init).equal(5);\n      dataModel.scores.dex.init = 0;\n      expect(dataModel.scores.dex.init).equal(0);\n    });\n  });\n};\n","// eslint-disable-next-line eslint-comments/disable-enable-pair\n\n/* eslint-disable simple-import-sort/imports */\n\n/**\n * @file Contains tests for Actor Entity.\n */\n// eslint-disable-next-line import/no-cycle\nimport OseItem from \"../../item/entity\";\n\nimport * as e2e from \"../../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  cleanUpScenes,\n  cleanUpWorldItems,\n  createMockScene,\n  createWorldTestItem,\n  itemTypes,\n  trashChat,\n  waitForInput,\n} from \"../../../e2e/testUtils\";\nimport OseActor from \"../entity\";\n\nexport const key = \"ose.actor.entity\";\nexport const options = {\n  displayName: \"OSE: Actor: Entity\",\n  preSelected: true,\n};\n\nconst createMockActor = async (type: string) =>\n  OseActor.create({\n    name: `Test Actor ${key}`,\n    type,\n  });\n\nexport default ({\n  describe,\n  it,\n  expect,\n  after,\n  afterEach,\n  before,\n  assert,\n}: e2e.QuenchMethods) => {\n  afterEach(async () => {\n    await trashChat();\n    cleanUpActorsByKey(key);\n    cleanUpWorldItems();\n  });\n\n  describe(\"update(data, options)\", () => {\n    // @todo: Write tests\n    it(\"AAC to AC\", async () => {\n      const actor = await createMockActor(\"character\");\n      expect(actor?.system.ac.value).equal(12);\n      expect(actor?.system.aac.value).equal(7);\n      await actor?.system.update({ ac: { value: 15 } });\n      await waitForInput();\n      expect(actor?.system.ac.value).equal(15);\n      expect(actor?.system.aac.value).equal(19 - 15);\n    });\n\n    it(\"AC to AAC\", async () => {\n      const actor = await createMockActor(\"character\");\n      expect(actor?.system.ac.value).equal(12);\n      expect(actor?.system.aac.value).equal(7);\n      await actor?.system.update({ aac: { value: 15 } });\n      await waitForInput();\n      expect(actor?.system.aac.value).equal(15);\n      expect(actor?.system.ac.value).equal(19 - 15);\n    });\n\n    it(\"THAC0 to BBA\", async () => {\n      const actor = await createMockActor(\"character\");\n      expect(actor?.system.thac0.value).equal(12);\n      expect(actor?.system.thac0.value).equal(7);\n      await actor?.system.update({ thac0: { value: 15 } });\n      await waitForInput();\n      expect(actor?.system.thac0.value).equal(15);\n      expect(actor?.system.thac0.value).equal(19 - 15);\n    });\n\n    it(\"BBA to THAC0\", async () => {\n      const actor = await createMockActor(\"character\");\n      expect(actor?.system.thac0.value).equal(12);\n      expect(actor?.system.thac0.value).equal(7);\n      await actor?.system.update({ thac0: { bba: 15 } });\n      await waitForInput();\n      expect(actor?.system.thac0.value).equal(15);\n      expect(actor?.system.thac0.value).equal(19 - 15);\n    });\n  });\n\n  describe(\"createEmbeddedDocuments(embeddedName, data, context)\", () => {\n    after(async () => {\n      game.items\n        ?.filter((i) => i?.name?.indexOf(`Test ${key}`) >= 0)\n        .forEach((i) => i.delete());\n    });\n    itemTypes.forEach((itemType) => {\n      it(`Creates ${itemType.capitalize()} with correct default icon`, async () => {\n        const actor = await createMockActor(\"character\");\n        const item = (await OseItem.create({\n          name: `Test ${key} ${itemType.capitalize()}`,\n          type: itemType,\n        })) as OseItem;\n        await actor?.createEmbeddedDocuments(\"Item\", [item]);\n        const actorItem = actor?.items.getName(item?.name);\n        expect(actorItem?.img).equal(OseItem.defaultIcons[itemType]);\n        item?.delete();\n      });\n    });\n  });\n\n  describe(\"getExperience(value, options)\", () => {\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    it(\"Adding positive XP adds to experience\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(actor?.system.details.xp.value).equal(0);\n      expect(game.messages?.size).equal(0);\n      await actor?.getExperience(10);\n      expect(actor?.system.details.xp.value).equal(10);\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor?.delete();\n    });\n\n    it(\"Adding negative XP subtracts from experience\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(actor?.system.details.xp.value).equal(0);\n      expect(game.messages?.size).equal(0);\n      await actor?.getExperience(-10);\n      expect(actor?.system.details.xp.value).equal(-10);\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor?.delete();\n    });\n\n    it(\"Adding positive XP adds to experience modified by bonus\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor?.update({ system: { details: { xp: { bonus: 10 } } } });\n      expect(actor?.system.details.xp.value).equal(0);\n      expect(game.messages?.size).equal(0);\n      await actor?.getExperience(10);\n      expect(actor?.system.details.xp.value).equal(11);\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor?.delete();\n    });\n  });\n\n  describe(\"isNew()\", () => {\n    it(\"character\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(actor?.isNew()).equal(true);\n      await actor?.delete();\n    });\n\n    it(\"monster\", async () => {\n      const actor = (await createMockActor(\"monster\")) as OseActor;\n      expect(actor?.isNew()).equal(true);\n      await actor?.delete();\n    });\n  });\n\n  describe(\"generateSave(hd)\", async () => {\n    const saves = [\n      {\n        low: -99,\n        high: 1,\n        death: 14,\n        wands: 15,\n        paralysis: 16,\n        breath: 17,\n        spell: 18,\n      },\n      {\n        low: 1,\n        high: 3,\n        death: 12,\n        wands: 13,\n        paralysis: 14,\n        breath: 15,\n        spell: 16,\n      },\n      {\n        low: 4,\n        high: 6,\n        death: 10,\n        wands: 11,\n        paralysis: 12,\n        breath: 13,\n        spell: 14,\n      },\n      {\n        low: 7,\n        high: 9,\n        death: 8,\n        wands: 9,\n        paralysis: 10,\n        breath: 10,\n        spell: 12,\n      },\n      {\n        low: 10,\n        high: 12,\n        death: 6,\n        wands: 7,\n        paralysis: 8,\n        breath: 8,\n        spell: 10,\n      },\n      {\n        low: 10,\n        high: 12,\n        death: 6,\n        wands: 7,\n        paralysis: 8,\n        breath: 8,\n        spell: 10,\n      },\n      {\n        low: 13,\n        high: 15,\n        death: 4,\n        wands: 5,\n        paralysis: 6,\n        breath: 5,\n        spell: 8,\n      },\n      {\n        low: 16,\n        high: 18,\n        death: 2,\n        wands: 3,\n        paralysis: 4,\n        breath: 3,\n        spell: 6,\n      },\n      {\n        low: 19,\n        high: 21,\n        death: 2,\n        wands: 2,\n        paralysis: 2,\n        breath: 2,\n        spell: 4,\n      },\n      {\n        low: 22,\n        high: 99,\n        death: 2,\n        wands: 2,\n        paralysis: 2,\n        breath: 2,\n        spell: 2,\n      },\n    ];\n\n    const thac0 = [\n      { low: -100, high: 0, value: 20 },\n      { low: 0, high: 1, value: 19 },\n      { low: 1, high: 2, value: 18 },\n      { low: 2, high: 3, value: 17 },\n      { low: 3, high: 4, value: 16 },\n      { low: 4, high: 5, value: 15 },\n      { low: 5, high: 6, value: 14 },\n      { low: 6, high: 7, value: 13 },\n      { low: 7, high: 9, value: 12 },\n      { low: 9, high: 11, value: 11 },\n      { low: 11, high: 13, value: 1 },\n      { low: 13, high: 15, value: 9 },\n      { low: 15, high: 17, value: 8 },\n      { low: 17, high: 19, value: 7 },\n      { low: 19, high: 21, value: 6 },\n      { low: 21, high: 100, value: 5 },\n    ];\n\n    const scoreSpread = Array.from({ length: 23 }, (_el, idx) => idx + 1);\n\n    const actor = (await createMockActor(\"monster\")) as OseActor;\n\n    scoreSpread.forEach((hd) => {\n      const savesData = saves.find((s) => hd >= s.low && hd <= s.high);\n      const thac0Data = thac0.find((s) => hd >= s.low && hd <= s.high);\n      const thac0PlusData = thac0.find(\n        (s) => hd + 1 >= s.low && hd + 1 <= s.high\n      );\n      actor?.generateSave(`${hd}`);\n\n      it(`hd ${hd} generates correct saves`, () => {\n        expect(actor?.system.saves.death.value).equal(savesData?.death);\n        expect(actor?.system.saves.wand.value).equal(savesData?.wands);\n        expect(actor?.system.saves.paralysis.value).equal(savesData?.paralysis);\n        expect(actor?.system.saves.breath.value).equal(savesData?.breath);\n        expect(actor?.system.saves.spell.value).equal(savesData?.spell);\n      });\n\n      it(`hd ${hd} generates correct thac0`, () => {\n        expect(actor?.system.thac0.value).equal(thac0Data?.value);\n        expect(actor?.system.thac0.bba).equal(19 - thac0Data?.value);\n      });\n\n      actor?.generateSave(`${hd}+`);\n      it(`hd ${hd}+ generates correct thac0`, () => {\n        expect(actor?.system.thac0.value).equal(thac0PlusData?.value);\n        expect(actor?.system.thac0.bba).equal(19 - thac0PlusData?.value);\n      });\n    });\n\n    await actor?.delete();\n  });\n\n  describe(\"rollHP(options)\", async () => {\n    const actor = (await createMockActor(\"monster\")) as OseActor;\n    const conScoreSpread = Array.from({ length: 20 }, (_el, idx) => idx + 1);\n    const conBonusSpread = [\n      -3, -3, -3, -2, -2, -1, -1, -1, 0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3,\n    ];\n    const hdSpread = [4, 6, 8, 10, 12, 20];\n    conScoreSpread.forEach((con, idx) => {\n      hdSpread.forEach((hd) => {\n        it(`${hd} hd with ${con} Con correctly rolls HP`, async () => {\n          await actor?.update({\n            system: { hp: { hd: `1d${hd}` }, scores: { con: { value: con } } },\n          });\n          await actor?.rollHP();\n          assert(actor?.system.hp.max - conBonusSpread[idx] >= 1);\n          assert(actor?.system.hp.value - conBonusSpread[idx] >= 1);\n          assert(actor?.system.hp.max - conBonusSpread[idx] >= hd);\n          assert(actor?.system.hp.value - conBonusSpread[idx] >= hd);\n        });\n      });\n    });\n    await actor?.delete();\n  });\n\n  describe(\"rollSave(save, options)\", () => {\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    const saves = [\"death\", \"wand\", \"paralysis\", \"breath\", \"spell\"];\n    saves.forEach((save) => {\n      it(`is functional for ${save} saves on character`, async () => {\n        const actor = (await createMockActor(\"character\")) as OseActor;\n        expect(game.messages?.size).equal(0);\n        await actor?.rollSave(save, { fastForward: true });\n        await waitForInput();\n        expect(game.messages?.size).equal(1);\n        await actor?.delete();\n      });\n\n      it(`is functional for ${save} saves on monster`, async () => {\n        const actor = (await createMockActor(\"monster\")) as OseActor;\n        expect(game.messages?.size).equal(0);\n        await actor.rollSave(save, { fastForward: true });\n        await waitForInput();\n        expect(game.messages?.size).equal(1);\n        await actor?.delete();\n      });\n    });\n  });\n\n  describe(\"rollMorale(options)\", () => {\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    it(\"for character\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollMorale();\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor?.delete();\n    });\n\n    it(\"for monster\", async () => {\n      const actor = (await createMockActor(\"monster\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollMorale();\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor?.delete();\n    });\n  });\n\n  describe(\"rollLoyalty(options)\", () => {\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    it(\"for character\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollLoyalty();\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor?.delete();\n    });\n\n    it(\"for monster\", async () => {\n      const actor = (await createMockActor(\"monster\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollLoyalty();\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor?.delete();\n    });\n  });\n\n  describe(\"rollReaction(options)\", () => {\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    it(\"for character\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollReaction({ fastForward: true });\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor.delete();\n    });\n\n    it(\"for monster\", async () => {\n      const actor = (await createMockActor(\"monster\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollReaction({ fastForward: true });\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor.delete();\n    });\n  });\n\n  describe(\"rollCheck(score, options)\", () => {\n    const scores = [\"str\", \"int\", \"dex\", \"wis\", \"con\", \"cha\"];\n\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    scores.forEach((score) => {\n      it(`${score} for character`, async () => {\n        const actor = (await createMockActor(\"character\")) as OseActor;\n        expect(game.messages?.size).equal(0);\n        await actor.rollCheck(score, { fastForward: true });\n        await waitForInput();\n        expect(game.messages?.size).equal(1);\n        await actor.delete();\n      });\n\n      it(`${score} for character`, async () => {\n        const actor = (await createMockActor(\"monster\")) as OseActor;\n        expect(game.messages?.size).equal(0);\n        await actor.rollCheck(score, { fastForward: true });\n        await waitForInput();\n        expect(game.messages?.size).equal(0);\n        await actor.delete();\n      });\n    });\n  });\n\n  describe(\"rollHitDice(options)\", () => {\n    const conScoreSpread = Array.from({ length: 20 }, (_el, idx) => idx + 1);\n    const conBonusSpread = [\n      -3, -3, -3, -2, -2, -1, -1, -1, 0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3,\n    ];\n    const levelSpread = Array.from({ length: 9 }, (_el, idx) => idx + 1);\n\n    conScoreSpread.forEach((con, idx) => {\n      const conMod = conBonusSpread[idx];\n      const expectedTerms = conMod >= 0 ? 5 : 6;\n      const modSign = conMod < 0 ? \"-\" : \"+\";\n      const modUnsigned = modSign === \"-\" ? conMod * -1 : conMod;\n      levelSpread.forEach((level) => {\n        it(`constructs the roll terms correctly with level ${level} and con ${con}`, async () => {\n          const actor = (await createMockActor(\"character\")) as OseActor;\n          await actor?.update({\n            system: { details: { level }, scores: { con: { value: con } } },\n          });\n          const roll = await actor.rollHitDice();\n\n          expect(roll.terms.length).equal(expectedTerms);\n          expect(roll.terms[0].expression).equal(actor?.system.hp.hd);\n          if (conMod < 0) {\n            expect(roll.terms[expectedTerms - 5].operator).equal(\"+\");\n          }\n          expect(roll.terms[expectedTerms - 4].operator).equal(modSign);\n          expect(roll.terms[expectedTerms - 3].expression).equal(\n            modUnsigned.toString()\n          );\n          expect(roll.terms[expectedTerms - 2].operator).equal(\"+\");\n          expect(roll.terms[expectedTerms - 1].expression).equal(\n            level.toString()\n          );\n          expect(actor?.system.scores.con.mod).equal(conMod);\n          await actor?.delete();\n        });\n      });\n    });\n  });\n\n  describe(\"rollAppearing(options)\", () => {\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    it(\"for character\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollAppearing();\n      await waitForInput();\n      expect(game.messages?.size).equal(0);\n      await actor.delete();\n    });\n\n    describe(\"for monster\", () => {\n      it(\"in wilderness\", async () => {\n        const actor = (await createMockActor(\"monster\")) as OseActor;\n        expect(game.messages?.size).equal(0);\n        await actor.rollAppearing({ check: \"wilderness\" });\n        await waitForInput();\n        expect(game.messages?.size).equal(1);\n        expect(game.messages?.contents[0].content).contain(\n          game.i18n.format(\"OSE.roll.appearing\", { type: \"(2)\" })\n        );\n        await actor.delete();\n      });\n\n      it(\"in other\", async () => {\n        const actor = (await createMockActor(\"monster\")) as OseActor;\n        expect(game.messages?.size).equal(0);\n        await actor.rollAppearing({ check: \"other\" });\n        await waitForInput();\n        expect(game.messages?.size).equal(1);\n        expect(game.messages?.contents[0].content).contain(\n          game.i18n.format(\"OSE.roll.appearing\", { type: \"(1)\" })\n        );\n        await actor.delete();\n      });\n    });\n  });\n\n  describe(\"rollExploration(expl, options)\", () => {\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    const explorationOptions = [\"ld\", \"od\", \"sd\", \"fs\"];\n    explorationOptions.forEach((expl) => {\n      it(\"for character\", async () => {\n        const actor = (await createMockActor(\"character\")) as OseActor;\n        expect(game.messages?.size).equal(0);\n        await actor.rollExploration(expl, { fastForward: true });\n        await waitForInput();\n        expect(game.messages?.contents[0].content).contain(\n          game.i18n.format(\"OSE.roll.exploration\", {\n            exploration: game.i18n.localize(`OSE.exploration.${expl}.long`),\n          })\n        );\n        await actor.delete();\n      });\n    });\n\n    it(\"for monster\", async () => {\n      const actor = (await createMockActor(\"monster\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollExploration(\"ld\", { fastForward: true });\n      await waitForInput();\n      expect(game.messages?.size).equal(0);\n      await actor.delete();\n    });\n  });\n\n  describe(\"rollDamage(attData, options)\", () => {\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    it(\"for character\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollDamage({ label: \"test\" });\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      expect(game.messages?.contents[0].content).contain(\n        `test - ${game.i18n.localize(\"OSE.Damage\")}`\n      );\n      await actor.delete();\n    });\n\n    it(\"for monster\", async () => {\n      const actor = (await createMockActor(\"monster\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollDamage({ label: \"test\" });\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      expect(game.messages?.contents[0].content).contain(\n        `test - ${game.i18n.localize(\"OSE.Damage\")}`\n      );\n      await actor.delete();\n    });\n\n    it(\"Adds roll.dmg to damage parts if provided\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      await actor.rollDamage({\n        label: \"test\",\n        roll: { dmg: \"15\" },\n      });\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      expect(game.messages?.contents[0].content).contain(\n        `test - ${game.i18n.localize(\"OSE.Damage\")}`\n      );\n      expect(game.messages?.contents[0].content).contain(\"15\");\n      await actor.delete();\n    });\n\n    it(\"Adds strength bonus if melee damage roll\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor?.update({ system: { scores: { str: { value: 1 } } } });\n      expect(actor.system.scores.str.value).equal(1);\n      expect(game.messages?.size).equal(0);\n      await actor.rollDamage({\n        label: \"test\",\n        roll: { dmg: \"15\", type: \"melee\" },\n      });\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      expect(game.messages?.contents[0].content).contain(\n        `test - ${game.i18n.localize(\"OSE.Damage\")}`\n      );\n      expect(game.messages?.contents[0].content).contain(\"15 +  - 3\");\n      await actor.delete();\n    });\n  });\n\n  describe(\"targetAttack(data, type, options)\", () => {\n    before(async () => {\n      const scene = await createMockScene();\n      await scene?.activate();\n    });\n\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    it(\"One target causes one attack roll\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      const token = await actor.getTokenDocument();\n      await canvas.scene?.createEmbeddedDocuments(\"Token\", [token]);\n      await waitForInput();\n      expect(game.user?.targets.size).equal(0);\n      canvas.tokens?.placeables.forEach((t) =>\n        t.setTarget(true, { releaseOthers: false, groupSelection: true })\n      );\n      expect(canvas.tokens?.placeables[0].actor).not.null;\n      expect(canvas.tokens?.placeables[0].actor?.system.ac.value).not.null;\n      expect(game.user?.targets.size).equal(1);\n      expect(game.messages?.size).equal(0);\n      await actor.targetAttack({ roll: { target: {} } }, \"melee\", {\n        skipDialog: true,\n      });\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      canvas.tokens?.placeables[0].setTarget(false, { releaseOthers: true });\n      expect(game.user?.targets.size).equal(0);\n      await actor.delete();\n    });\n\n    it(\"Multiple target causes multiple attack rolls\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      const token = await actor.getTokenDocument();\n      await canvas.scene?.createEmbeddedDocuments(\"Token\", [token]);\n      await waitForInput();\n      expect(game.user?.targets.size).equal(0);\n      canvas.tokens?.placeables.forEach((t) =>\n        t.setTarget(true, { releaseOthers: false, groupSelection: true })\n      );\n      expect(game.user?.targets.size).equal(2);\n      expect(game.messages?.size).equal(0);\n      await actor.targetAttack({ roll: { target: {} } }, \"melee\", {\n        skipDialog: true,\n      });\n      await waitForInput();\n      expect(game.messages?.size).equal(2);\n      canvas.tokens?.placeables[0].setTarget(false, { releaseOthers: true });\n      expect(game.user?.targets.size).equal(0);\n      await actor.delete();\n    });\n\n    it(\"If no target is given, just roll attack\", async () => {\n      const data = {\n        roll: {\n          blindroll: false,\n          dmg: [\"1d6\"],\n          thac0: 15,\n          target: {\n            actor: { system: { ac: { value: 0 }, aac: { value: 9 } } },\n          },\n        },\n      };\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(game.user?.targets.size).equal(0);\n      expect(game.messages?.size).equal(0);\n      await actor.targetAttack(data, \"melee\", { skipDialog: true });\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor.delete();\n    });\n\n    after(() => {\n      cleanUpScenes();\n    });\n  });\n\n  describe(\"rollAttack(attdata, options)\", () => {\n    before(async () => {\n      await trashChat();\n    });\n\n    afterEach(async () => {\n      await trashChat();\n    });\n\n    it(\"rolls a d20 if supplied no data\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      const rolldata = await actor.rollAttack(\n        { roll: {} },\n        { skipDialog: true }\n      );\n      expect(rolldata.formula).equal(\"1d20\");\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor.delete();\n    });\n\n    it(\"Provided an item, adds item damage to dmgParts\", async () => {\n      // @todo: How to verify the item is being rolled?\n      /* const actor = await createMockActor(\"character\");\n      const item = await createWorldTestItem(\"weapon\");\n      expect(item?.system.damage).is.not.undefined;\n      expect(game.messages?.size).equal(0);\n      const rolldata = await actor.rollAttack({ roll: {}, item }, { skipDialog: true });\n      expect(rolldata.formula).equal(\"1d20\");\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      actor?.delete();\n      item?.delete(); */\n    });\n\n    it(\"If missile attack, add dex mod to attack roll\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      expect(game.messages?.size).equal(0);\n      const rolldata = await actor.rollAttack(\n        { roll: {} },\n        { type: \"missile\", skipDialog: true }\n      );\n      expect(rolldata.formula).equal(\"1d20 +  - 3 + 0\");\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor.delete();\n    });\n\n    it(\"If melee attack, add str mod to attack roll\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor.update({ system: { scores: { str: { value: 18 } } } });\n      expect(game.messages?.size).equal(0);\n      const rolldata = await actor.rollAttack(\n        { roll: {} },\n        { type: \"melee\", skipDialog: true }\n      );\n      expect(rolldata.formula).equal(\"1d20 + 3 + 0\");\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor.delete();\n    });\n\n    // @todo: How to verify if possible to miss, thus obfuscating dmg roll?\n    it(\"If melee attack, add str mod to damage roll\", async () => {});\n\n    it(\"If item provided with a bonus, it is added as bonus to attack roll\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      const item = await createWorldTestItem(\"weapon\");\n      await item?.update({ system: { bonus: 18 } });\n      expect(game.messages?.size).equal(0);\n      const rolldata = await actor.rollAttack(\n        { roll: {}, item },\n        { skipDialog: true }\n      );\n      expect(rolldata.formula).equal(\"1d20 + 18\");\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      await actor.delete();\n    });\n  });\n\n  describe(\"applyDamage(amount, multiplier)\", () => {\n    it(\"doesn't remove hp if no variables are given\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor.update({ system: { hp: { value: 10, max: 10 } } });\n      expect(actor.system.hp.value).equal(10);\n      await actor.applyDamage();\n      expect(actor.system.hp.value).equal(10);\n      await actor.delete();\n    });\n\n    it(\"calculates the amount with amount\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor.update({ system: { hp: { value: 10, max: 10 } } });\n      expect(actor.system.hp.value).equal(10);\n      await actor.applyDamage(3);\n      expect(actor.system.hp.value).equal(7);\n      await actor.delete();\n    });\n\n    it(\"calculates the amount with amount and multiplier\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor.update({ system: { hp: { value: 10, max: 10 } } });\n      expect(actor.system.hp.value).equal(10);\n      await actor.applyDamage(3, 2);\n      expect(actor.system.hp.value).equal(4);\n      await actor.delete();\n    });\n\n    it(\"calculates the amount with amount and negative multiplier\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor.update({ system: { hp: { value: 1, max: 10 } } });\n      expect(actor.system.hp.value).equal(1);\n      await actor.applyDamage(3, -2);\n      expect(actor.system.hp.value).equal(7);\n      await actor.delete();\n    });\n\n    it(\"calculates the amount with negative amount\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor.update({ system: { hp: { value: 1, max: 10 } } });\n      expect(actor.system.hp.value).equal(1);\n      await actor.applyDamage(-3);\n      expect(actor.system.hp.value).equal(4);\n      await actor.delete();\n    });\n\n    it(\"doesn't reduce lower than 0 hp with only amount\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor.update({ system: { hp: { value: 10, max: 10 } } });\n      expect(actor.system.hp.value).equal(10);\n      await actor.applyDamage(20);\n      expect(actor.system.hp.value).equal(0);\n      await actor.delete();\n    });\n\n    it(\"doesn't reduce lower than 0 hp with amount and multiplier\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor.update({ system: { hp: { value: 10, max: 10 } } });\n      expect(actor.system.hp.value).equal(10);\n      await actor.applyDamage(4, 3);\n      expect(actor.system.hp.value).equal(0);\n      await actor.delete();\n    });\n\n    it(\"doesn't increase higher than max hp with only amount\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor.update({ system: { hp: { value: 1, max: 10 } } });\n      expect(actor.system.hp.value).equal(1);\n      await actor.applyDamage(-20);\n      expect(actor.system.hp.value).equal(10);\n      await actor.delete();\n    });\n\n    it(\"doesn't increase higher than max hp with amount and multiplier\", async () => {\n      const actor = (await createMockActor(\"character\")) as OseActor;\n      await actor.update({ system: { hp: { value: 1, max: 10 } } });\n      expect(actor.system.hp.value).equal(1);\n      await actor.applyDamage(4, -3);\n      expect(actor.system.hp.value).equal(10);\n      await actor.delete();\n    });\n  });\n};\n","/**\n * @file Contains tests for Actor Sheet.\n */\n// eslint-disable-next-line import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport {\n  cleanUpActorsByKey,\n  cleanUpMacros,\n  closeDialogs,\n  closeSheets,\n  createActorTestItem,\n  createMockActorKey,\n  createMockMacro,\n  createWorldTestItem,\n  delay,\n  itemTypes,\n  openDialogs,\n  openWindows,\n  trashChat,\n  waitForInput,\n} from \"../../../e2e/testUtils\";\nimport OseItem from \"../../item/entity\";\nimport OseActorSheet from \"../actor-sheet\";\nimport OseActor from \"../entity\";\n\nexport const key = \"ose.actor.sheet\";\nexport const options = {\n  displayName: \"OSE: Actor: Sheet\",\n  preSelected: true,\n};\n\n/* --------------------------------------------- */\n/* Types for storing data between tests          */\n/* --------------------------------------------- */\ntype DragNDropItem = {\n  item: OseItem | undefined;\n  itemElement: Element | null;\n};\n\ntype DragNDropItems = {\n  source: DragNDropItem;\n  target: DragNDropItem;\n};\n\ntype DragNDropDocuments = {\n  actor: StoredDocument<Actor> | undefined;\n  compendium: CompendiumCollection<any> | undefined;\n};\n\n/* --------------------------------------------- */\n/* Helper Functions                              */\n/* --------------------------------------------- */\nconst getActor = async () => game.actors?.getName(`Test Actor ${key}`);\n\nexport default ({\n  describe,\n  it,\n  expect,\n  after,\n  afterEach,\n  before\n}: QuenchMethods) => {\n  // Saving settings being modified by tests\n  const originalCtrlSetting = game.settings.get(\n    game.system.id,\n    \"invertedCtrlBehavior\"\n  );\n\n  after(async () => {\n    await cleanUpActorsByKey(key);\n    await closeSheets();\n    game.settings.set(\n      game.system.id,\n      \"invertedCtrlBehavior\",\n      originalCtrlSetting\n    );\n  });\n\n  describe(\"getData()\", () => {\n    it(\"returns the expected data\", async () => {\n      const actor = (await createMockActorKey(\n        \"character\",\n        {},\n        key\n      )) as OseActor;\n      const sheet = new OseActorSheet(actor);\n      const data = sheet.getData();\n\n      expect(data.owner).equal(actor?.isOwner);\n      expect(data.editable).equal(actor?.sheet?.isEditable);\n      expect(Object.keys(data.config)).contain(\"ascendingAC\");\n      expect(Object.keys(data.config)).contain(\"initiative\");\n      expect(Object.keys(data.config)).contain(\"encumbrance\");\n      expect(data.isNew).equal(actor?.isNew());\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_getItemFromActor(event)\", () => {\n    itemTypes.forEach((itemType) => {\n      it(`Can get an ${itemType.capitalize()} item`, async () => {\n        // Create item\n        const actor = await createMockActorKey(\"character\", {}, key);\n        await actor?.update({ system: { spells: { enabled: true } } });\n        actor?.sheet?.render(true);\n        await delay(200);\n\n        const item = await createActorTestItem(actor, itemType);\n        await waitForInput();\n\n        expect(actor?.items.size).equal(1);\n        const mockedItem = item?.pop();\n        expect(actor?.items.contents.find((o) => o.id === mockedItem?.id)).not\n          .undefined;\n\n        // Select tab to look inside\n        let tab = \"\";\n        switch (itemType) {\n          // eslint-disable-next-line switch-case/no-case-curly\n          case \"spell\": {\n            tab = \".tab[data-tab=spells]\";\n            break;\n          }\n\n          // eslint-disable-next-line switch-case/no-case-curly\n          case \"ability\": {\n            tab = \".tab[data-tab=abilities]\";\n            break;\n          }\n\n          // eslint-disable-next-line switch-case/no-case-curly\n          default: {\n            tab = \".tab[data-tab=inventory]\";\n          }\n        }\n\n        // Setup what to click\n        const clickElement = document.querySelector(`${tab} .item-name`);\n        const descriptionStyle =\n          clickElement?.parentElement?.nextElementSibling?.style;\n        expect(descriptionStyle.display).equal(\"\");\n\n        // Mock event\n        $(`${tab} .item-name`).trigger(\"click\");\n        await delay(200);\n\n        // Verify method\n        expect(descriptionStyle.display).equal(\"block\");\n\n        // Cleanup\n        await actor?.delete();\n      });\n\n      after(async () => {\n        await cleanUpActorsByKey(key);\n        await closeSheets();\n      });\n    });\n  });\n\n  // @todo: Introduce Extended from dnd5e/PF2e\n  describe(\"_toggleItemCategory(event)\", () => {\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const clickCategory = async () => {\n      $(\".tab[data-tab=inventory] .item-category-title\").trigger(\"click\");\n      await delay(220);\n    };\n\n    before(async () => {\n      const actor = (await createMockActorKey(\n        \"character\",\n        {},\n        key\n      )) as OseActor;\n      await actor.update({ system: { spells: { enabled: true } } });\n      actor?.sheet?.render(true);\n      await delay(220);\n    });\n\n    it(\"clicking the category name hides the item cateogry\", async () => {\n      const sheets = openWindows(\"sheet\");\n      expect(sheets.length).equal(1);\n      const categoryElement = document.querySelector(\n        \".tab[data-tab=inventory] .item-list\"\n      );\n      expect(categoryElement?.style.display).equal(\"\");\n      await clickCategory();\n      expect(categoryElement?.style.display).equal(\"none\");\n    });\n\n    it(\"clicking the category name again shows the item cateogry\", async () => {\n      const sheets = openWindows(\"sheet\");\n      expect(sheets.length).equal(1);\n      const categoryElement = document.querySelector(\n        \".tab[data-tab=inventory] .item-list\"\n      );\n      expect(categoryElement?.style.display).equal(\"none\");\n      await clickCategory();\n      expect(categoryElement?.style.display).equal(\"\");\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n      await closeSheets();\n    });\n  });\n\n  describe(\"_toggleContainedItems(event)\", () => {\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const clickContainerCaret = async () => {\n      $(\".tab[data-tab=inventory] .container .category-caret\").trigger(\"click\");\n      await delay(220);\n    };\n\n    before(async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await createActorTestItem(actor, \"container\");\n      await createActorTestItem(actor, \"weapon\");\n      const weapon = actor?.items.getName(\"New Actor Test Weapon\");\n      const container = actor?.items.getName(\"New Actor Test Container\");\n      // eslint-disable-next-line no-underscore-dangle\n      await weapon?.update({ system: { containerId: container?.id } });\n      actor?.sheet?.render(true);\n    });\n\n    it(\"clicking container caret will hide the content\", async () => {\n      const sheets = openWindows(\"sheet\");\n      expect(sheets.length).equal(1);\n\n      const actor = await getActor();\n      expect(actor?.items.size).equal(2);\n\n      const container = actor?.items?.getName(\"New Actor Test Container\");\n      expect(\n        actor?.items.getName(\"New Actor Test Weapon\")?.system.containerId\n      ).equal(container?.id);\n      const containerElement = document.querySelector(\n        \".tab[data-tab=inventory] .container .contained-items\"\n      );\n      expect(containerElement?.style.display).equal(\"\");\n\n      await clickContainerCaret();\n      expect(containerElement?.style.display).equal(\"none\");\n    });\n\n    it(\"clicking container caret again will show the content\", async () => {\n      const sheets = openWindows(\"sheet\");\n      expect(sheets.length).equal(1);\n\n      const actor = await getActor();\n      expect(actor?.items.size).equal(2);\n\n      const container = actor?.items?.getName(\"New Actor Test Container\");\n      expect(\n        actor?.items.getName(\"New Actor Test Weapon\")?.system.containerId\n      ).equal(container?.id);\n      const containerElement = document.querySelector(\n        \".tab[data-tab=inventory] .container .contained-items\"\n      );\n\n      expect(containerElement?.style.display).equal(\"none\");\n      await clickContainerCaret();\n      expect(containerElement?.style.display).equal(\"\");\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n      await closeSheets();\n    });\n  });\n\n  describe(\"_toggleItemSummary(event)\", () => {\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const clickItemSummary = async (tab: string) => {\n      $(`${tab} .item-name`).trigger(\"click\");\n      await delay(220);\n    };\n\n    before(async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({ system: { spells: { enabled: true } } });\n      actor?.sheet?.render(true);\n      await delay(220);\n    });\n\n    itemTypes.forEach(async (itemType) => {\n      let tab = \"\";\n      switch (itemType) {\n        // eslint-disable-next-line switch-case/no-case-curly\n        case \"spell\": {\n          tab = \".tab[data-tab=spells]\";\n          break;\n        }\n\n        // eslint-disable-next-line switch-case/no-case-curly\n        case \"ability\": {\n          tab = \".tab[data-tab=abilities]\";\n          break;\n        }\n\n        // eslint-disable-next-line switch-case/no-case-curly\n        default: {\n          tab = \".tab[data-tab=inventory]\";\n        }\n      }\n\n      describe(`for type ${itemType}`, () => {\n        before(async () => {\n          const actor = await getActor();\n          await createActorTestItem(actor, itemType);\n        });\n\n        it(\"clicking item name will show the content\", async () => {\n          const sheets = openWindows(\"sheet\");\n          expect(sheets.length).equal(1);\n\n          const actor = await getActor();\n          expect(actor?.items.size).equal(1);\n\n          const summaryElement = document.querySelector(`${tab} .item-summary`);\n          expect(summaryElement?.style.display).equal(\"\");\n\n          await clickItemSummary(tab);\n          expect(summaryElement?.style.display).equal(\"block\");\n        });\n        it(\"clicking item name again will hide the content\", async () => {\n          const sheets = openWindows(\"sheet\");\n          expect(sheets.length).equal(1);\n\n          const actor = await getActor();\n          expect(actor?.items.size).equal(1);\n\n          const summaryElement = document.querySelector(`${tab} .item-summary`);\n          expect(summaryElement?.style.display).equal(\"block\");\n          await clickItemSummary(tab);\n          expect(summaryElement?.style.display).equal(\"\");\n        });\n        it(\"item containing description still shows the summary\", async () => {\n          // @todo: This fails, as updated item re-renders the sheet,\n          //        and it collapses the summary\n          const actor = await getActor();\n          const item = actor?.items.getName(\n            `New Actor Test ${itemType.capitalize()}`\n          );\n\n          await clickItemSummary(tab);\n          await item?.update({ system: { description: \"hello world\" } });\n          await waitForInput();\n          expect(item?.system.description).equal(\"hello world\");\n\n          const summaryElement = document.querySelector(`${tab} .item-summary`);\n          expect(summaryElement?.innerHTML.indexOf(\"hello world\") >= 0).is.true;\n\n          await item?.update({ system: { description: \"\" } });\n        });\n        it(\"item containing macro reference still shows the summary, Issue #353\", async () => {\n          const macro = await createMockMacro();\n          const macroReference = `<p>@UUID[${macro?.uuid}]{Mock Macro}</p>`;\n\n          const actor = await getActor();\n          const item = actor?.items.getName(\n            `New Actor Test ${itemType.capitalize()}`\n          );\n          await item?.update({ system: { description: macroReference } });\n          await waitForInput();\n\n          const summaryElement = document.querySelector(`${tab} .item-summary`);\n          expect(summaryElement?.innerHTML).equal(\"\");\n          expect(summaryElement?.innerHTML.indexOf(macroReference) >= 0).true;\n          await macro?.delete();\n          await item?.update({ system: { description: \"\" } });\n        });\n\n        after(async () => {\n          const actor = await getActor();\n          actor?.items.forEach(async (i) => {\n            await i.delete();\n          });\n          await cleanUpMacros();\n        });\n      });\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n      await closeSheets();\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_displayItemInChat(event)\", () => {\n    const clickItemShow = async (tab: string) => {\n      $(`${tab} .item-show`).trigger(\"click\");\n      await delay(220);\n    };\n\n    before(async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({ system: { spells: { enabled: true } } });\n      actor?.sheet?.render(true);\n      await delay(220);\n    });\n\n    itemTypes.forEach((itemType) => {\n      let tab = \"\";\n      switch (itemType) {\n        // eslint-disable-next-line switch-case/no-case-curly\n        case \"spell\": {\n          tab = \".tab[data-tab=spells]\";\n          break;\n        }\n\n        // eslint-disable-next-line switch-case/no-case-curly\n        case \"ability\": {\n          tab = \".tab[data-tab=abilities]\";\n          break;\n        }\n\n        // eslint-disable-next-line switch-case/no-case-curly\n        default: {\n          tab = \".tab[data-tab=inventory]\";\n        }\n      }\n\n      it(`can show ${itemType}`, async () => {\n        await trashChat();\n        const actor = await getActor();\n        await createActorTestItem(actor, itemType);\n        await waitForInput();\n        await clickItemShow(tab);\n        await waitForInput();\n        expect(game.messages?.size).equal(1);\n        expect(game.messages?.contents[0]?.content).contain(\n          `New Actor Test ${itemType.capitalize()}`\n        );\n        actor?.items.forEach((i) => i.delete());\n      });\n\n      after(async () => {\n        await cleanUpActorsByKey(key);\n      });\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_removeItemFromActor(item)\", () => {\n    before(async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({ system: { spells: { enabled: true } } });\n      actor?.sheet?.render(true);\n    });\n\n    itemTypes.forEach((itemType) => {\n      describe(`${itemType} item`, () => {\n        it(\"can remove item outside container\", async () => {\n          const actor = (await getActor()) as OseActor;\n          expect(actor?.items.size).equal(0);\n\n          await createActorTestItem(actor, itemType);\n          await waitForInput();\n          const item = actor?.items.getName(\n            `New Actor Test ${itemType.capitalize()}`\n          );\n          expect(actor?.items.size).equal(1);\n\n          // eslint-disable-next-line no-underscore-dangle\n          await actor?.sheet?._removeItemFromActor(item);\n          await waitForInput();\n          expect(actor?.items.size).equal(0);\n        });\n\n        if (\n          itemType !== \"container\" &&\n          itemType !== \"spell\" &&\n          itemType !== \"ability\"\n        ) {\n          it(\"can remove item inside container\", async () => {\n            const actor = await getActor();\n            expect(actor?.items.size).equal(0);\n\n            await createActorTestItem(actor, \"container\");\n            await createActorTestItem(actor, itemType);\n            await waitForInput();\n            expect(actor?.items.size).equal(2);\n\n            const item = actor?.items.getName(\n              `New Actor Test ${itemType.capitalize()}`\n            );\n            const container = actor?.items.getName(`New Actor Test Container`);\n            expect(item).not.undefined;\n            expect(container).not.undefined;\n\n            // eslint-disable-next-line no-underscore-dangle\n            await actor?.sheet?._onContainerItemAdd(item, container);\n            await waitForInput();\n\n            // eslint-disable-next-line no-underscore-dangle\n            await actor?.sheet?._removeItemFromActor(item);\n            await waitForInput();\n            expect(actor?.items.size).equal(1);\n            expect(container?.system.itemIds.length).equal(0);\n\n            // eslint-disable-next-line no-underscore-dangle\n            await actor?.sheet?._removeItemFromActor(container);\n            await waitForInput();\n            expect(actor?.items.size).equal(0);\n          });\n          it(\"removing container with item inside deletes just container\", async () => {\n            const actor = await getActor();\n            expect(actor?.items.size).equal(0);\n\n            await createActorTestItem(actor, \"container\");\n            await createActorTestItem(actor, itemType);\n            await waitForInput();\n            expect(actor?.items.size).equal(2);\n\n            const item = actor?.items.getName(\n              `New Actor Test ${itemType.capitalize()}`\n            );\n            const container = actor?.items.getName(`New Actor Test Container`);\n            expect(item).not.undefined;\n            expect(container).not.undefined;\n            expect(actor?.items.size).equal(2);\n\n            // eslint-disable-next-line no-underscore-dangle\n            await actor?.sheet?._removeItemFromActor(container);\n            await waitForInput();\n            expect(actor?.items.size).equal(1);\n            // eslint-disable-next-line no-underscore-dangle\n            await actor?.sheet?._removeItemFromActor(item);\n            await waitForInput();\n            expect(actor?.items.size).equal(0);\n          });\n        }\n      });\n\n      after(async () => {\n        await cleanUpActorsByKey(key);\n      });\n    });\n  });\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_useConsumable(event, decrement)\", () => {\n    const clickConsumableEmpty = async () =>\n      $(`.tab[data-tab=inventory] .empty-mark`).trigger(\"click\");\n\n    const clickConsumableFull = async () =>\n      $(`.tab[data-tab=inventory] .full-mark`).trigger(\"click\");\n\n    before(async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await createActorTestItem(actor, \"item\");\n      await waitForInput();\n\n      const item = actor?.items.contents[0];\n      item?.update({ system: { quantity: { max: 6, value: 3 } } });\n      await waitForInput();\n\n      actor?.sheet?.render(true);\n      await delay(220);\n    });\n\n    // full = true, empty = false\n    it(\"can decrease value\", async () => {\n      const actor = await getActor();\n      const item = actor?.items.contents[0];\n      expect(item?.system.quantity.value).equal(3);\n      await clickConsumableFull();\n      await waitForInput();\n      expect(item?.system.quantity.value).equal(2);\n    });\n    it(\"can increase value\", async () => {\n      const actor = await getActor();\n      const item = actor?.items.contents[0];\n      expect(item?.system.quantity.value).equal(2);\n      await clickConsumableEmpty();\n      await waitForInput();\n      expect(item?.system.quantity.value).equal(3);\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"_onSpellChange(event)\", () => {\n    before(async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({ system: { spells: { enabled: true } } });\n      await createActorTestItem(actor, \"spell\");\n      await waitForInput();\n      actor?.sheet?.render(true);\n    });\n\n    // @todo: How to properly mock updating a field here?\n    it(\"changing the input for cast changes spell cast data\", async () => {\n      $(\"input[data-field=cast]\").val(3);\n      await waitForInput();\n\n      const actor = await getActor();\n      const item = actor?.items.contents[0];\n      expect(item?.system.cast).equal(3);\n    });\n\n    // @todo: How to properly mock updating a field here?\n    it(\"changing the input for memorize changes spell memorize data\", async () => {\n      $(\"input[data-field=cast]\").val(3);\n      await waitForInput();\n\n      const actor = await getActor();\n      const item = actor?.items.contents[0];\n      expect(item?.system.memorized).equal(3);\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_resetSpells(event)\", () => {\n    before(async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({ system: { spells: { enabled: true } } });\n      await createActorTestItem(actor, \"spell\");\n      await waitForInput();\n      actor?.items.contents[0].update({ system: { cast: 1, memorized: 3 } });\n      actor?.sheet?.render(true);\n    });\n\n    it(\"resetting spells resets the cast field to maximum\", async () => {\n      const actor = await getActor();\n\n      $(\"a[data-action=reset-spells]\").trigger(\"click\");\n      await waitForInput();\n\n      expect(actor?.items.contents[0].system.cast).equal(\n        actor?.items.contents[0].system.memorized\n      );\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  // @todo: Localization when checking content of chat cards.\n  describe(\"_rollAbility(event) \", () => {\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const mockClickItem = async (tab: string) => {\n      $(`.tab[data-tab=${tab}] .item-image`).trigger(\"click\");\n      await delay(220);\n    };\n\n    before(async () => {\n      game.settings.set(game.system.id, \"invertedCtrlBehavior\", true);\n      await trashChat();\n    });\n\n    afterEach(async () => {\n      await cleanUpActorsByKey(key);\n      await trashChat();\n    });\n\n    it(\"rolling weapon on monster updates the counter value\", async () => {\n      // Sanity checks\n      expect(game.messages?.size).equal(0);\n\n      // Setup\n      const actor = await createMockActorKey(\"monster\", {}, key);\n      await createActorTestItem(actor, \"weapon\");\n      await waitForInput();\n      await actor?.items.contents[0].update({\n        system: { counter: { value: 3, max: 3 } },\n      });\n      expect(actor?.items.size).equal(1);\n      actor?.sheet?.render(true);\n      await waitForInput();\n      await mockClickItem(\"attributes\");\n\n      // Verification\n      expect(game.messages?.size).equal(1);\n      expect(game.messages?.contents[0].content).contain(\n        \"<h2>Attacks with New Actor Test Weapon</h2>\"\n      );\n      expect(actor?.items.contents[0].system.counter.value).equal(2);\n    });\n\n    it(\"rolling weapon on character rolls weapon\", async () => {\n      // Sanity checks\n      expect(game.messages?.size).equal(0);\n\n      // Setup\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await createActorTestItem(actor, \"weapon\");\n      await waitForInput();\n      expect(actor?.items.size).equal(1);\n      actor?.sheet?.render(true);\n      await waitForInput();\n      await mockClickItem(\"inventory\");\n\n      // Verification\n      // @todo: i18n\n      expect(game.messages?.size).equal(1);\n      expect(game.messages?.contents[0].content).contain(\n        \"<h2>Attacks with New Actor Test Weapon</h2>\"\n      );\n    });\n\n    it(\"rolling spell rolls and spends the spell\", async () => {\n      // Sanity checks\n      expect(game.messages?.size).equal(0);\n\n      // Setup\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({ system: { spells: { enabled: true } } });\n      await createActorTestItem(actor, \"spell\");\n      await waitForInput();\n      expect(actor?.items.size).equal(1);\n      actor?.sheet?.render(true);\n      await waitForInput();\n      await mockClickItem(\"spells\");\n\n      // Verification\n      expect(game.messages?.size).equal(1);\n      expect(game.messages?.contents[0].content).contain(\n        \"<h2>New Actor Test Spell</h2>\"\n      );\n    });\n\n    it(\"rolling anything else rolls the formula\", async () => {\n      // Sanity checks\n      expect(game.messages?.size).equal(0);\n\n      // Setup\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({ system: { spells: { enabled: true } } });\n      await createActorTestItem(actor, \"ability\");\n      await waitForInput();\n      expect(actor?.items.size).equal(1);\n      await actor?.items.contents[0].update({ system: { roll: \"1d6\" } });\n      await waitForInput();\n      expect(actor?.items.contents[0].system.roll).equal(\"1d6\");\n      actor?.sheet?.render(true);\n      await waitForInput();\n      await mockClickItem(\"abilities\");\n\n      // Verification\n      expect(game.messages?.size).equal(1);\n      expect(game.messages?.contents[0].content).contain(\n        \"<h2>New Actor Test Ability roll</h2>\"\n      );\n    });\n\n    it(\"rolling anything else, without a formula, does nothing\", async () => {\n      // Sanity checks\n      expect(game.messages?.size).equal(0);\n\n      // Setup\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({ system: { spells: { enabled: true } } });\n      await createActorTestItem(actor, \"spell\");\n      await waitForInput();\n      expect(actor?.items.size).equal(1);\n      actor?.sheet?.render(true);\n      await waitForInput();\n      await mockClickItem(\"inventory\");\n\n      // Verification\n      expect(game.messages?.size).equal(0);\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n      await trashChat();\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_rollSave(event)\", () => {\n    const saves = [\"death\", \"wand\", \"paralysis\", \"breath\", \"spell\"];\n\n    const clickSave = async (save: string) => {\n      $(`li[data-save=${save}] a`).trigger(\"click\");\n      await delay(220);\n    };\n\n    describe(`character can roll`, () => {\n      before(async () => {\n        const actor = await createMockActorKey(\"character\", {}, key);\n        await actor?.sheet?.render(true);\n        game.settings.set(game.system.id, \"invertedCtrlBehavior\", true);\n        await trashChat();\n        await delay(200);\n      });\n\n      saves.forEach((save) => {\n        it(`${save} save`, async () => {\n          await trashChat();\n          await delay(200);\n          expect(game.messages?.size).equal(0);\n          await clickSave(save);\n          expect(game.messages?.size).equal(1);\n          expect(game.messages?.contents[0].content).contain(\n            game.i18n.format(\"OSE.roll.save\", {\n              save: game.i18n.localize(`OSE.saves.${save}.long`),\n            })\n          );\n        });\n      });\n\n      after(async () => {\n        await cleanUpActorsByKey(key);\n        await trashChat();\n        await delay(200);\n      });\n    });\n\n    describe(`monster can roll`, () => {\n      before(async () => {\n        const actor = await createMockActorKey(\"monster\", {}, key);\n        await actor?.sheet?.render(true);\n      });\n\n      saves.forEach((save) => {\n        it(`${save} save`, async () => {\n          await trashChat();\n          await delay(200);\n          expect(game.messages?.size).equal(0);\n          await clickSave(save);\n          expect(game.messages?.size).equal(1);\n          expect(game.messages?.contents[0].content).contain(\n            game.i18n.format(\"OSE.roll.save\", {\n              save: game.i18n.localize(`OSE.saves.${save}.long`),\n            })\n          );\n        });\n      });\n\n      after(async () => {\n        await cleanUpActorsByKey(key);\n        await trashChat();\n        await delay(200);\n      });\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_rollAttack(event)\", () => {\n    const attackTypeClasses = [\"melee\", \"missile\"];\n    const clickAttack = async (attack: string) => {\n      $(`li[data-attack=${attack}] a`).trigger(\"click\");\n      await delay(200);\n    };\n\n    before(async () => {\n      game.settings.set(game.system.id, \"invertedCtrlBehavior\", true);\n      const actor = await createMockActorKey(\"character\", {}, key);\n      actor?.sheet?.render(true);\n      await trashChat();\n    });\n\n    attackTypeClasses.forEach((attackClass) => {\n      it(`can attack with ${attackClass}`, async () => {\n        const actor = await getActor();\n        expect(game.messages?.size).equal(0);\n        await clickAttack(attackClass);\n        expect(game.messages?.size).equal(1);\n        expect(game.messages?.contents[0].content).contain(\n          game.i18n.format(\"OSE.roll.attacks\", { name: actor?.name })\n        );\n        await trashChat();\n      });\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  /* --------------------------------------------- */\n  /* Check Test Helper functions                   */\n  /* --------------------------------------------- */\n  const dragNDropSanityChecks = (\n    documents: DragNDropDocuments,\n    items: DragNDropItems\n  ) => {\n    // Check Actor constructed properly\n    expect(documents.actor).not.undefined;\n    expect(documents.actor?.documentName).equal(\"Actor\");\n\n    // Check that the target constructed properly\n    expect(items.target.item).not.undefined;\n    expect(items.target.item?.documentName).equal(\"Item\");\n    expect(items.target.item?.name).equal(\"TargetContainer\");\n  };\n\n  const dragNDropCasePreflightCheck = (\n    sourceItemName: string,\n    items: DragNDropItems\n  ) => {\n    expect(items.source.item).not.undefined;\n    expect(items.source.item?.documentName).equal(\"Item\");\n    expect(items.source.item?.name).equal(sourceItemName);\n\n    // Check source and target data\n    expect(items.source.item?.system.containerId).equal(\"\");\n    expect(items.target.item?.system.itemIds.length).equal(0);\n  };\n\n  const dragNDropCasePostflightCheck = (\n    documents: DragNDropDocuments,\n    items: DragNDropItems\n  ) => {\n    // Check item data\n    expect(items.target.item?.system.itemIds.length).equal(1);\n    expect(items.target.item?.system.itemIds).contain(items.source.item?.id);\n    expect(items.source.item?.system.containerId).equal(items.target.item?.id);\n\n    // Check getters\n    const getter =\n      items.source.item?.type === \"armor\"\n        ? items.source.item?.type\n        : `${items.source.item?.type}s`;\n    const amount = getter === \"containers\" ? 1 : 0;\n    expect(documents.actor?.system[getter].length).equal(amount);\n  };\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_onContainerItemAdd(item, target)\", () => {\n    /* --------------------------------------------- */\n    /* Loop over item types                          */\n    /* --------------------------------------------- */\n    itemTypes.forEach((itemType) => {\n      // Skip items that can't be put in a container\n      if (itemType === \"spell\") return;\n      if (itemType === \"ability\") return;\n\n      const documents: DragNDropDocuments = {} as DragNDropDocuments;\n      const items: DragNDropItems = {\n        source: {} as DragNDropItem,\n        target: {} as DragNDropItem,\n      } as DragNDropItems;\n\n      before(async () => {\n        documents.actor = await createMockActorKey(\"character\", {}, key);\n\n        // Create target container\n        [items.target.item] = await createActorTestItem(\n          documents.actor,\n          \"container\",\n          \"TargetContainer\"\n        );\n      });\n\n      it(`add ${itemType} to container`, async () => {\n        dragNDropSanityChecks(documents, items);\n\n        // Create source item\n        [items.source.item] = await createActorTestItem(\n          documents.actor,\n          itemType\n        );\n\n        // Perform pre-flight checks\n        const sourceItemName = `New Actor Test ${itemType.capitalize()}`;\n        dragNDropCasePreflightCheck(sourceItemName, items);\n\n        // Perform operation\n        // eslint-disable-next-line no-underscore-dangle\n        await documents.actor?.sheet?._onContainerItemAdd(\n          items.source.item,\n          items.target.item\n        );\n\n        // Perform post-flight checks\n        dragNDropCasePostflightCheck(documents, items);\n      });\n\n      after(async () => {\n        await cleanUpActorsByKey(key);\n      });\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_onContainerItemRemove(item, container)\", () => {\n    /* --------------------------------------------- */\n    /* Loop over item types                          */\n    /* --------------------------------------------- */\n    itemTypes.forEach((itemType) => {\n      // Skip items that can't be put in a container\n      if (itemType === \"spell\") return;\n      if (itemType === \"ability\") return;\n\n      const documents: DragNDropDocuments = {} as DragNDropDocuments;\n      const items: DragNDropItems = {\n        source: {} as DragNDropItem,\n        target: {} as DragNDropItem,\n      } as DragNDropItems;\n\n      before(async () => {\n        documents.actor = await createMockActorKey(\"character\", {}, key);\n\n        // Create target container\n        [items.target.item] = await createActorTestItem(\n          documents.actor,\n          \"container\",\n          \"TargetContainer\"\n        );\n\n        // Create source item\n        [items.source.item] = await createActorTestItem(\n          documents.actor,\n          itemType\n        );\n\n        // Perform operation\n        // eslint-disable-next-line no-underscore-dangle\n        await documents.actor?.sheet?._onContainerItemAdd(\n          items.source.item,\n          items.target.item\n        );\n      });\n\n      it(`remove ${itemType} from container`, async () => {\n        // Perform pre-flight checks\n        dragNDropCasePostflightCheck(documents, items);\n\n        // Perform operation\n        // eslint-disable-next-line no-underscore-dangle\n        await documents.actor?.sheet?._onContainerItemRemove(\n          items.source.item,\n          items.target.item\n        );\n\n        // Perform pre-flight checks\n        const sourceItemName = `New Actor Test ${itemType.capitalize()}`;\n        dragNDropCasePreflightCheck(sourceItemName, items);\n      });\n\n      after(async () => {\n        await cleanUpActorsByKey(key);\n      });\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_onDropItemCreate(droppedItem, targetContainer)\", () => {\n    /* --------------------------------------------- */\n    /* Loop over item types                          */\n    /* --------------------------------------------- */\n    itemTypes.forEach((itemType) => {\n      // Skip items that can't be put in a container\n      if (itemType === \"spell\") return;\n      if (itemType === \"ability\") return;\n\n      const documents: DragNDropDocuments = {} as DragNDropDocuments;\n      const items: DragNDropItems = {\n        source: {} as DragNDropItem,\n        target: {} as DragNDropItem,\n      } as DragNDropItems;\n\n      before(async () => {\n        documents.actor = await createMockActorKey(\"character\", {}, key);\n      });\n\n      it(`add non-actor ${itemType} to sheet`, async () => {\n        // Create item in sidebar\n        items.source.item = (await createWorldTestItem(itemType)) as OseItem;\n        const sourceItemName = items.source.item.name || \"test\";\n\n        // eslint-disable-next-line no-underscore-dangle\n        await documents.actor?.sheet?._onDropItemCreate([items.source.item]);\n\n        // Store new item as it recreates in the character sheet\n        items.source.item = documents.actor?.items.getName(\n          sourceItemName\n        ) as OseItem;\n\n        expect(items.source.item).not.undefined;\n      });\n\n      after(async () => {\n        await cleanUpActorsByKey(key);\n      });\n    });\n  });\n\n  describe(\"_chooseItemType(choices)\", () => {\n    const defaultChoices = [\"weapon\", \"armor\", \"shield\", \"gear\"];\n\n    it(\"can create standard dialog\", async () => {\n      const actor = await createMockActorKey(\"monster\", {}, key);\n      // eslint-disable-next-line no-underscore-dangle\n      actor?.sheet?._chooseItemType();\n      await waitForInput();\n\n      const dialogs = openDialogs();\n      expect(dialogs.length).equal(1);\n\n      defaultChoices.forEach((choice) => {\n        expect(dialogs[0].data.content).contain(`<option value=\"${choice}\"`);\n      });\n      await dialogs[0].close();\n    });\n\n    it(\"can create custom dialog\", async () => {\n      const customChoices = [\"test\", \"test2\", \"test3\"];\n      const actor = (await createMockActorKey(\"monster\", {}, key)) as OseActor;\n      // eslint-disable-next-line no-underscore-dangle\n      actor?.sheet?._chooseItemType(customChoices);\n      await waitForInput();\n\n      const dialogs = openDialogs();\n      expect(dialogs.length).equal(1);\n\n      customChoices.forEach((choice) => {\n        expect(dialogs[0].data.content).contain(`<option value=\"${choice}\"`);\n      });\n      await dialogs[0].close();\n    });\n\n    afterEach(async () => {\n      await closeDialogs();\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_createItem(event)\", () => {\n    itemTypes.forEach((itemType) => {\n      it(`can create ${itemType}`, async () => {\n        const actor = await createMockActorKey(\"character\", {}, key);\n        await actor?.update({ system: { spells: { enabled: true } } });\n        await actor?.sheet?.render(true);\n        await delay(200);\n        expect(actor?.items.size).equal(0);\n\n        $(`.sheet .item-create[data-type=\"${itemType}\"]`).trigger(\"click\");\n        await waitForInput();\n\n        expect(actor?.items.size).equal(1);\n      });\n    });\n\n    afterEach(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  // @todo: Refactor to entity and just use event parsing in sheet\n  describe(\"_updateItemQuantity(event)\", () => {\n    const updateQuantity = (element: HTMLInputElement, modifier: number) => {\n      element.value = String(parseInt(element.value, 10) + modifier);\n      const event = new InputEvent(\"change\");\n      element.dispatchEvent(event);\n    };\n\n    it(\"can add to the quantity\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      actor?.sheet?.render(true);\n      const [item] = (await createActorTestItem(\n        actor,\n        \"item\"\n      )) as unknown as OseItem;\n      item.update({ system: { quantity: { value: 2, max: 4 } } });\n      await waitForInput();\n\n      const quantityElement = document.querySelector(\n        `.sheet .item[data-item-id=\"${item.id}\"] input[data-field=\"value\"]`\n      ) as HTMLInputElement;\n\n      expect(item.system.quantity.value).equal(2);\n      updateQuantity(quantityElement, 1);\n      await waitForInput();\n      expect(item.system.quantity.value).equal(3);\n    });\n\n    it(\"can subtract from the quantity\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      actor?.sheet?.render(true);\n      const [item] = (await createActorTestItem(\n        actor,\n        \"item\"\n      )) as unknown as OseItem;\n      item.update({ system: { quantity: { value: 2, max: 4 } } });\n      await waitForInput();\n\n      const quantityElement = document.querySelector(\n        `.sheet .item[data-item-id=\"${item.id}\"] input[data-field=\"value\"]`\n      ) as HTMLInputElement;\n\n      expect(item.system.quantity.value).equal(2);\n      updateQuantity(quantityElement, -1);\n      await waitForInput();\n      expect(item.system.quantity.value).equal(1);\n    });\n\n    afterEach(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  // @todo: How to test?\n  describe(\"_renderInner(...args)\", () => {});\n  // @todo: How to test?\n  describe(\"_onResize(event)\", () => {});\n\n  // @todo: Dose this work now?\n  describe(\"_onConfigureActor(event)\", () => {\n    [\"character\", \"monster\"].forEach((actorType) => {\n      it(`Entity Tweaks renders for ${actorType}`, async () => {\n        const actor = await createMockActorKey(\"character\", {}, key);\n        await actor?.sheet?.render(true);\n        await delay(300);\n\n        $(`.configure-actor`).trigger(\"click\");\n        await delay(300);\n\n        const windows = openWindows(\"sheet-tweaks\");\n        expect(windows.length).equal(1);\n        windows[0].close();\n      });\n    });\n\n    afterEach(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  // @todo: How to test?\n  describe(\"_getHeaderButtons()\", () => {});\n};\n","/**\n * @file Contains tests for dragging and dropping items to and from Actor Sheet.\n */\n// eslint-disable-next-line prettier/prettier\nimport { QuenchMethods } from \"../../../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  cleanUpWorldItems,\n  createActorTestItem,\n  createMockActorKey,\n  createWorldTestItem,\n  itemTypes,\n  waitForInput, // eslint-disable-next-line prettier/prettier\n} from \"../../../../e2e/testUtils\";\nimport OseItem from \"../../../item/entity\";\nimport OseActor from \"../../entity\";\n\nexport const key = \"ose.actor.sheet.e2e.dragndrop\";\nexport const options = {\n  displayName: \"OSE: Actor: Sheet E2E Drag'n'Drop\",\n  preSelected: true,\n};\n\n/* --------------------------------------------- */\n/* Types for storing data between tests          */\n/* --------------------------------------------- */\ntype DragNDropItem = {\n  item: OseItem | undefined;\n  itemElement: Element | null;\n};\n\ntype DragNDropItems = {\n  source: DragNDropItem;\n  target: DragNDropItem;\n};\n\ntype DragNDropDocuments = {\n  actor: StoredDocument<Actor> | undefined;\n  compendium: CompendiumCollection<any> | undefined;\n};\n\n/* --------------------------------------------- */\n/* DOM Manipulation Helper functions             */\n/* --------------------------------------------- */\nconst executeDrag = (sourceElement: Element | null) => {\n  const mockDragStartEvent = new DragEvent(\"dragstart\", {\n    dataTransfer: new DataTransfer(),\n    bubbles: true,\n    cancelable: true,\n  });\n  sourceElement?.dispatchEvent(mockDragStartEvent);\n  return mockDragStartEvent;\n};\n\nconst executeDragNDrop = async (items: DragNDropItems) => {\n  const mockDragStartEvent = new DragEvent(\"dragstart\", {\n    dataTransfer: new DataTransfer(),\n    bubbles: true,\n    cancelable: true,\n  });\n  items.source.itemElement?.dispatchEvent(mockDragStartEvent);\n\n  const mockDropEvent = new DragEvent(\"drop\", {\n    dataTransfer: mockDragStartEvent.dataTransfer,\n    bubbles: true,\n    cancelable: true,\n  });\n  items.target.itemElement?.dispatchEvent(mockDropEvent);\n};\n\nexport default ({\n  describe,\n  it,\n  expect,\n  after,\n  afterEach,\n  beforeEach,\n}: QuenchMethods) => {\n  describe(\"_onDragStart(event)\", () => {\n    it(\"populates dataTransfer correctly\", async () => {\n      const actor = (await createMockActorKey(\n        \"character\",\n        {},\n        key\n      )) as OseActor;\n      expect(actor).not.undefined;\n\n      await actor.sheet?.render(true);\n\n      const [item] = await createActorTestItem(actor, \"weapon\");\n      expect(item).not.undefined;\n      await waitForInput();\n\n      const itemElement = document.querySelector(\n        `.sheet .inventory li.item[data-item-id=\"${item?.id}\"]`\n      );\n      expect(itemElement).not.null;\n\n      const event = executeDrag(itemElement);\n      const parsedData = TextEditor.getDragEventData(event);\n      expect(Object.keys(parsedData)).contain(\"item\");\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  // This is tested in the combined _onDragStart & _onDrop test\n  describe(\"_onDropItem(event, data)\", () => {});\n\n  describe(\"_onDragStart(event, data) & _onDrop(event, data) - Containers\", () => {\n    // @todo: Move out to outer scope for re-use, potentially testUtils.\n    /* --------------------------------------------- */\n    /* Mock Helper functions                         */\n    /* --------------------------------------------- */\n    const createMockCompendium = async (\n      type: CompendiumCollection.Metadata[\"type\"]\n      // eslint-disable-next-line unicorn/consistent-function-scoping\n    ) =>\n      // eslint-disable-next-line no-undef\n      CompendiumCollection.createCompendium({\n        label: \"Test Compendium\",\n        name: \"testcompendium\",\n        type,\n        path: \"\",\n        private: false,\n        package: \"world\",\n      });\n\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const cleanUpCompendium = async () =>\n      game.packs.get(\"world.testcompendium\")?.deleteCompendium();\n\n    /* --------------------------------------------- */\n    /* Check Test Helper functions                   */\n    /* --------------------------------------------- */\n    const dragNDropSanityChecks = (\n      documents: DragNDropDocuments,\n      items: DragNDropItems\n    ) => {\n      // Check Actor constructed properly\n      expect(documents.actor).not.undefined;\n      expect(documents.actor?.documentName).equal(\"Actor\");\n\n      // Check Compendium constructed properly\n      expect(documents.compendium).not.undefined;\n      expect(documents.compendium?.documentName).equal(\"Item\");\n\n      // Check that the target constructed properly\n      expect(items.target.item).not.undefined;\n      expect(items.target.item?.documentName).equal(\"Item\");\n      expect(items.target.item?.name).equal(\"TargetContainer\");\n\n      // Check the target DOM is stored correctly\n      expect(items.target.itemElement).not.null;\n      expect(items.target.itemElement?.constructor.name).equal(\"HTMLLIElement\");\n    };\n\n    const dragNDropCasePreflightCheck = (\n      sourceItemName: string,\n      items: DragNDropItems\n    ) => {\n      expect(items.source.item).not.undefined;\n      expect(items.source.item?.documentName).equal(\"Item\");\n      expect(items.source.item?.name).equal(sourceItemName);\n\n      expect(items.source.itemElement).not.null;\n      expect(items.source.itemElement?.constructor.name).equal(\"HTMLLIElement\");\n\n      // Check source and target data\n      expect(items.source.item?.system.containerId).equal(\"\");\n      expect(items.target.item?.system.itemIds.length).equal(0);\n    };\n\n    const dragNDropCasePostflightCheck = (\n      documents: DragNDropDocuments,\n      items: DragNDropItems\n    ) => {\n      // Check item data\n      expect(items.target.item?.system.itemIds.length).equal(1);\n      expect(items.target.item?.system.itemIds).contain(items.source.item?.id);\n      expect(items.source.item?.system.containerId).equal(\n        items.target.item?.id\n      );\n\n      // Check getters\n      const getter =\n        items.source.item?.type === \"armor\"\n          ? items.source.item?.type\n          : `${items.source.item?.type}s`;\n      const amount = getter === \"containers\" ? 1 : 0;\n      expect(documents.actor?.system[getter].length).equal(amount);\n    };\n\n    /* --------------------------------------------- */\n    /* Specific cases                                */\n    /* --------------------------------------------- */\n    // Issue#357\n    it(\"Issue#357 Dragging container onto itself should retain container in inventory\", async () => {\n      const items: DragNDropItems = {\n        source: {} as DragNDropItem,\n        target: {} as DragNDropItem,\n      } as DragNDropItems;\n\n      // Setup actor & items\n      const actor = await createMockActorKey(\"character\", {}, key);\n      [items.target.item] = await createActorTestItem(\n        actor,\n        \"container\",\n        \"TargetContainer\"\n      );\n      [items.source.item] = await createActorTestItem(actor, \"weapon\");\n\n      // Render UI elements\n      actor?.sheet?.render(true);\n      await waitForInput();\n\n      // Set the DOM elements\n      items.source.itemElement = document.querySelector(\n        `.sheet .inventory li.item[data-item-id=\"${items.source?.item?.id}\"]`\n      );\n      items.target.itemElement = document.querySelector(\n        `.sheet .inventory li.item[data-item-id=\"${items.target?.item?.id}\"]`\n      );\n\n      // Execute drag'n'drop of stored item\n      dragNDropCasePreflightCheck(\"New Actor Test Weapon\", items);\n      await executeDragNDrop(items);\n      await waitForInput();\n\n      // Check items\n      expect(items.target.item?.system.itemIds.length).equal(1);\n      expect(items.target.item?.system.itemIds).contain(items.source.item?.id);\n      expect(items.source.item?.system.containerId).equal(\n        items.target.item?.id\n      );\n\n      // Re-form the source item to use the target container\n      items.source.itemElement = items.target.itemElement;\n      items.source.item = items.target.item;\n\n      // Execute drag'n'drop again\n      await executeDragNDrop(items);\n      await waitForInput();\n\n      // Verify that the target container is still present\n      const finalElement = document.querySelector(\n        `.sheet .inventory li.item[data-item-id=\"${items.target?.item?.id}\"]`\n      );\n      expect(finalElement).not.null;\n    });\n\n    /* --------------------------------------------- */\n    /* Loop over item types                          */\n    /* --------------------------------------------- */\n    itemTypes.forEach((itemType) => {\n      // Skip items that can't be put in a container\n      if (itemType === \"spell\") return;\n      if (itemType === \"ability\") return;\n\n      // Initiate storage of actor, items, and DOM elements\n      const documents: DragNDropDocuments = {} as DragNDropDocuments;\n      const items: DragNDropItems = {\n        source: {} as DragNDropItem,\n        target: {} as DragNDropItem,\n      } as DragNDropItems;\n\n      describe(`manipulating ${itemType} item type`, () => {\n        beforeEach(async () => {\n          // Set up actor & compendium\n          documents.actor = await createMockActorKey(\"character\", {}, key);\n          documents.compendium = await createMockCompendium(\"Item\");\n\n          // Create target container\n          [items.target.item] = await createActorTestItem(\n            documents.actor,\n            \"container\",\n            \"TargetContainer\"\n          );\n\n          // Render UI elements\n          documents.actor?.sheet?.render(true);\n          documents.compendium?.render(true);\n          await waitForInput();\n\n          // Record Target DOM\n          items.target.itemElement = document.querySelector(\n            `.sheet .inventory li.item[data-item-id=\"${items.target.item?.id}\"]`\n          );\n        });\n\n        it(`drag ${itemType} from actor sheet into a container in a character sheet`, async () => {\n          dragNDropSanityChecks(documents, items);\n\n          // Create item in actor sheet\n          [items.source.item] = await createActorTestItem(\n            documents.actor,\n            itemType\n          );\n\n          // Wait for UI to keep up\n          await waitForInput();\n\n          // Create DOM element\n          items.source.itemElement = document.querySelector(\n            `.sheet .inventory li.item[data-item-id=\"${items.source.item?.id}\"]`\n          );\n\n          // Perform pre-flight checks\n          const sourceItemName = `New Actor Test ${itemType.capitalize()}`;\n          dragNDropCasePreflightCheck(sourceItemName, items);\n\n          // Drag N Drop\n          await executeDragNDrop(items);\n          await waitForInput();\n\n          // Perform post-flight checks\n          dragNDropCasePostflightCheck(documents, items);\n        });\n\n        it(`drag ${itemType} from item sidebar into a container in a character sheet`, async () => {\n          dragNDropSanityChecks(documents, items);\n\n          // Create item in sidebar\n          items.source.item = (await createWorldTestItem(itemType)) as OseItem;\n\n          // Wait for UI to keep up\n          await waitForInput();\n\n          // Create DOM element\n          items.source.itemElement = document.querySelector(\n            `.sidebar-tab[data-tab=\"items\"] li.item[data-document-id=\"${items.source.item?.id}\"]`\n          );\n\n          // Perform pre-flight checks\n          const sourceItemName = `New World Test ${itemType.capitalize()}`;\n          dragNDropCasePreflightCheck(sourceItemName, items);\n\n          // Drag N Drop\n          await executeDragNDrop(items);\n          await waitForInput();\n\n          // Store new item as it recreates in the character sheet\n          items.source.item = documents.actor?.items.getName(\n            items.source.item?.name\n          ) as OseItem;\n\n          // Perform post-flight checks\n          dragNDropCasePostflightCheck(documents, items);\n        });\n\n        it(`drag ${itemType} from compendium into a container in a character sheet`, async () => {\n          dragNDropSanityChecks(documents, items);\n\n          // Create item in compendium\n          const worldItem = (await createWorldTestItem(itemType)) as OseItem;\n          items.source.item = await documents.compendium?.importDocument(\n            worldItem\n          );\n\n          // Wait for UI to keep up\n          await waitForInput();\n\n          // Create DOM element\n          items.source.itemElement = document.querySelector(\n            `.compendium li.item[data-document-id=\"${items.source.item?.id}\"]`\n          );\n\n          // Perform pre-flight checks\n          const sourceItemName = `New World Test ${itemType.capitalize()}`;\n          dragNDropCasePreflightCheck(sourceItemName, items);\n\n          // Drag N Drop\n          await executeDragNDrop(items);\n          await waitForInput();\n\n          // Store new item as it recreates in the character sheet\n          items.source.item = documents.actor?.items.getName(\n            items.source.item?.name\n          ) as OseItem;\n\n          // Perform post-flight checks\n          dragNDropCasePostflightCheck(documents, items);\n        });\n\n        afterEach(async () => {\n          await cleanUpActorsByKey(key);\n          await cleanUpCompendium();\n          await cleanUpWorldItems();\n        });\n      });\n    });\n  });\n};\n","/**\n * @file Contains tests for Character Sheet.\n */\n// eslint-disable-next-line import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  closeDialogs,\n  closeSheets,\n  createMockActorKey,\n  delay,\n  openDialogs,\n  openWindows,\n  trashChat,\n  waitForInput,\n} from \"../../../e2e/testUtils\";\nimport OseActorSheetCharacter from \"../character-sheet\";\n\nexport const key = \"ose.actor.sheet.character\";\nexport const options = { displayName: \"OSE: Actor: Sheet: Character\" };\n\nexport default ({ describe, it, expect, after, afterEach }: QuenchMethods) => {\n  after(async () => {\n    await cleanUpActorsByKey(key);\n    await closeSheets();\n  });\n\n  describe(\"defaultOptions()\", () => {\n    it(\"Has correctly set defaultOptions\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      const sheet = actor?.sheet as unknown as OseActorSheetCharacter;\n\n      expect(sheet.options.classes).contain(\"ose\");\n      expect(sheet.options.classes).contain(\"sheet\");\n      expect(sheet.options.classes).contain(\"actor\");\n      expect(sheet.options.classes).contain(\"character\");\n\n      expect(sheet.options.template).contain(\n        \"/templates/actors/character-sheet.html\"\n      );\n      expect(sheet.options.width).equal(450);\n      expect(sheet.options.height).equal(530);\n      expect(sheet.options.resizable).is.true;\n\n      expect(sheet.options.tabs.length).equal(1);\n      expect(Object.keys(sheet.options.tabs[0])).contain(\"navSelector\");\n      expect(sheet.options.tabs[0].navSelector).equal(\".sheet-tabs\");\n      expect(Object.keys(sheet.options.tabs[0])).contain(\"contentSelector\");\n      expect(sheet.options.tabs[0].contentSelector).equal(\".sheet-body\");\n      expect(Object.keys(sheet.options.tabs[0])).contain(\"initial\");\n      expect(sheet.options.tabs[0].initial).equal(\"attributes\");\n\n      expect(sheet.options.scrollY.length).equal(1);\n      expect(sheet.options.scrollY[0]).equal(\".inventory\");\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  // @todo: Do we need separate test sfor this, or is getData() enough?\n  describe(\"_prepareItems(data)\", () => {});\n\n  // @todo: this is not tested separately as a dialog, should we test it more?\n  describe(\"generateScores()\", () => {\n    const scores = {\n      str: 0,\n      int: 0,\n      dex: 0,\n      wis: 0,\n      con: 0,\n      cha: 0,\n    };\n\n    it(\"renders the character creator\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      const sheet = actor?.sheet as unknown as OseActorSheetCharacter;\n\n      sheet.generateScores();\n      await waitForInput();\n\n      const windows = openWindows(\"creator\");\n      expect(windows.length).equal(1);\n    });\n\n    it(\"clicking on the dices generates scores\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      const sheet = actor?.sheet as unknown as OseActorSheetCharacter;\n\n      sheet.generateScores();\n      await delay(400);\n\n      const windows = openWindows(\"creator\");\n      expect(windows.length).equal(1);\n\n      Object.keys(scores).forEach(async (score) => {\n        $(`.creator div[data-score=\"${score}\"] a.score-roll`).trigger(\"click\");\n        await waitForInput();\n\n        const scoreValue = document.querySelector(\n          `.creator div[data-score=\"${score}\"] input.score-value`\n        );\n        const { value } = scoreValue;\n        expect(parseInt(value, 10) > 0).equal(true);\n      });\n    });\n\n    // @todo: this needs fixing\n    it(\"saving scores records data to actor\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      const sheet = actor?.sheet as unknown as OseActorSheetCharacter;\n\n      sheet.generateScores();\n      await delay(400);\n\n      const windows = openWindows(\"creator\");\n      expect(windows.length).equal(1);\n\n      Object.keys(scores).forEach(async (score) => {\n        $(`.creator div[data-score=\"${score}\"] a.score-roll`).trigger(\"click\");\n        await waitForInput();\n\n        const scoreValue = document.querySelector(\n          `.creator div[data-score=\"${score}\"] input.score-value`\n        );\n        const { value } = scoreValue;\n        expect(parseInt(value, 10) > 0).equal(true);\n        scores[score] = parseInt(value, 10);\n      });\n\n      $(`.creator footer button`).trigger(\"submit\");\n      await waitForInput();\n\n      expect(actor?.system.scores.str.value).equal(scores.str);\n      expect(actor?.system.scores.dex.value).equal(scores.dex);\n      expect(actor?.system.scores.wis.value).equal(scores.wis);\n      expect(actor?.system.scores.int.value).equal(scores.int);\n      expect(actor?.system.scores.con.value).equal(scores.con);\n      expect(actor?.system.scores.cha.value).equal(scores.cha);\n    });\n\n    // @todo: Auto-roll testing\n    // @todo: Gold rolling testing\n\n    afterEach(async () => {\n      await trashChat();\n      await cleanUpActorsByKey(key);\n      const windows = openWindows(\"creator\");\n      windows.forEach((w) => w.close());\n      await delay(300);\n    });\n  });\n\n  describe(\"getData()\", () => {\n    it(\"returns the expected data\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      const data = await actor?.sheet?.getData();\n\n      expect(Object.keys(data)).contain(\"enrichedBiography\");\n      expect(Object.keys(data)).contain(\"enrichedNotes\");\n\n      // _prepareItems tests\n      expect(Object.keys(data)).contain(\"owned\");\n      expect(Object.keys(data?.owned)).contain(\"weapons\");\n      expect(Object.keys(data?.owned)).contain(\"items\");\n      expect(Object.keys(data?.owned)).contain(\"containers\");\n      expect(Object.keys(data?.owned)).contain(\"armors\");\n      expect(Object.keys(data?.owned)).contain(\"treasures\");\n      expect(Object.keys(data)).contain(\"containers\");\n      expect(Object.keys(data)).contain(\"abilities\");\n      expect(Object.keys(data)).contain(\"spells\");\n      expect(Object.keys(data)).contain(\"slots\");\n      expect(Object.keys(data)).contain(\"system\");\n      expect(Object.keys(data?.system)).contain(\"usesAscendingAC\");\n      expect(Object.keys(data?.system)).contain(\"meleeMod\");\n      expect(Object.keys(data?.system)).contain(\"rangedMod\");\n      expect(Object.keys(data?.system)).contain(\"init\");\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"_chooseLang()\", () => {\n    it(\"renders a dialog\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      // eslint-disable-next-line no-underscore-dangle\n      actor?.sheet?._chooseLang();\n      await waitForInput();\n\n      const dialogs = openDialogs();\n      expect(dialogs.length).equal(1);\n      dialogs[0].close();\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n      await closeDialogs();\n      await delay(300);\n    });\n  });\n\n  describe(\"_pushLang(table)\", () => {\n    const table = \"languages\";\n\n    it(\"renders a dialog\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      // eslint-disable-next-line no-underscore-dangle\n      actor?.sheet?._pushLang(table);\n      await waitForInput();\n\n      const dialogs = openDialogs();\n      expect(dialogs.length).equal(1);\n      dialogs[0].close();\n    });\n\n    it(\"adds language on OK\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      // eslint-disable-next-line no-underscore-dangle\n      actor?.sheet?._pushLang(table);\n      await delay(220);\n\n      $(`button.ok`).trigger(\"click\");\n      await delay(500);\n\n      const dialogs = openDialogs();\n      expect(dialogs.length).equal(0);\n\n      expect(actor?.system.languages.value.length).equal(1);\n      expect(actor?.system.languages.value[0]).equal(\"Common\");\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n      await closeDialogs();\n    });\n  });\n\n  describe(\"_popLang(table, lang)\", () => {\n    const table = \"languages\";\n\n    it(\"can remove added language\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({ \"system.languages.value\": [\"Common\"] });\n      await waitForInput();\n\n      expect(actor?.system.languages.value.length).equal(1);\n      expect(actor?.system.languages.value[0]).equal(\"Common\");\n\n      // eslint-disable-next-line no-underscore-dangle\n      actor?.sheet?._popLang(table, \"Common\");\n      await waitForInput();\n\n      expect(actor?.system.languages.value.length).equal(0);\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"_onShowModifiers(event)\", () => {\n    it(\"renders a dialog\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({\n        system: {\n          scores: {\n            str: { value: 10 },\n            dex: { value: 10 },\n            int: { value: 10 },\n            con: { value: 10 },\n            wis: { value: 10 },\n            cha: { value: 10 },\n          },\n        },\n      });\n      actor?.sheet?.render(true);\n      await waitForInput();\n\n      $(`.sheet .profile a[data-action=modifiers]`).trigger(\"click\");\n      await delay(200);\n\n      const dialogs = openDialogs();\n      expect(dialogs.length).equal(1);\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n      await closeDialogs();\n      await delay(400);\n    });\n  });\n\n  describe(\"_onShowGpCost(event, preparedData)\", () => {\n    it(\"renders a dialog\", async () => {\n      const actor = await createMockActorKey(\"character\", {}, key);\n      await actor?.update({\n        system: {\n          scores: {\n            str: { value: 10 },\n            dex: { value: 10 },\n            int: { value: 10 },\n            con: { value: 10 },\n            wis: { value: 10 },\n            cha: { value: 10 },\n          },\n        },\n      });\n      actor?.sheet?.render(true);\n      await waitForInput();\n\n      $(`.sheet .profile a[data-action=gp-cost]`).trigger(\"click\");\n      await delay(200);\n\n      const dialogs = openDialogs();\n      expect(dialogs.length).equal(1);\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n      await closeDialogs();\n      await delay(400);\n    });\n  });\n\n  // @todo: This seems unfinished\n  describe(\"_onShowItemTooltip(event)\", () => {});\n};\n","/**\n * @file Contains tests for Monster Sheet.\n */\n// eslint-disable-next-line import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  closeDialogs,\n  closeSheets,\n  createActorTestItem,\n  createMockActorKey,\n  delay,\n  getMockActorKey,\n  openDialogs,\n  waitForInput,\n} from \"../../../e2e/testUtils\";\nimport OseActorSheetMonster from \"../monster-sheet\";\n\nexport const key = \"ose.actor.sheet.monster\";\nexport const options = { displayName: \"OSE: Actor: Sheet: Monster\" };\n\nexport default ({ describe, it, expect, after, before }: QuenchMethods) => {\n  const orginalCtrlSetting = game.settings.get(\n    game.system.id,\n    \"invertedCtrlBehavior\"\n  );\n\n  after(async () => {\n    await game.settings.set(\n      game.system.id,\n      \"invertedCtrlBehavior\",\n      orginalCtrlSetting\n    );\n    await cleanUpActorsByKey(key);\n    await closeSheets();\n  });\n\n  describe(\"defaultOptions()\", () => {\n    it(\"Has correctly set defaultOptions\", async () => {\n      const actor = await createMockActorKey(\"monster\", {}, key);\n      const sheet = actor?.sheet as unknown as OseActorSheetMonster;\n\n      expect(sheet.options.classes).contain(\"ose\");\n      expect(sheet.options.classes).contain(\"sheet\");\n      expect(sheet.options.classes).contain(\"actor\");\n      expect(sheet.options.classes).contain(\"monster\");\n\n      expect(sheet.options.template).contain(\n        \"/templates/actors/monster-sheet.html\"\n      );\n      expect(sheet.options.width).equal(450);\n      expect(sheet.options.height).equal(560);\n      expect(sheet.options.resizable).is.true;\n\n      expect(sheet.options.tabs.length).equal(1);\n      expect(Object.keys(sheet.options.tabs[0])).contain(\"navSelector\");\n      expect(sheet.options.tabs[0].navSelector).equal(\".tabs\");\n      expect(Object.keys(sheet.options.tabs[0])).contain(\"contentSelector\");\n      expect(sheet.options.tabs[0].contentSelector).equal(\".sheet-body\");\n      expect(Object.keys(sheet.options.tabs[0])).contain(\"initial\");\n      expect(sheet.options.tabs[0].initial).equal(\"attributes\");\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  // @todo: Do we need separate tests for this, or is getData() enough?\n  describe(\"_prepareItems(data)\", () => {});\n\n  describe(\"getData()\", () => {\n    it(\"returns the expected data\", async () => {\n      const actor = await createMockActorKey(\"monster\", {}, key);\n      const data = await actor?.sheet?.getData();\n\n      // _prepareItems tests\n      expect(Object.keys(data)).contain(\"owned\");\n      expect(Object.keys(data?.owned)).contain(\"weapons\");\n      expect(Object.keys(data?.owned)).contain(\"items\");\n      expect(Object.keys(data?.owned)).contain(\"containers\");\n      expect(Object.keys(data?.owned)).contain(\"armors\");\n      expect(Object.keys(data?.owned)).contain(\"treasures\");\n      expect(Object.keys(data)).contain(\"attackPatterns\");\n      expect(Object.keys(data)).contain(\"spells\");\n      expect(Object.keys(data)).contain(\"isNew\");\n\n      expect(data?.config.morale).equal(\n        game.settings.get(game.system.id, \"morale\")\n      );\n      expect(Object.keys(data)).contain(\"system\");\n      expect(Object.keys(data?.system)).contain(\"details\");\n      expect(Object.keys(data?.system.details)).contain(\"treasure\");\n      expect(Object.keys(data?.system.details.treasure)).contain(\"link\");\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"generateSave()\", () => {\n    it(\"renders a dialog\", async () => {\n      const actor = await createMockActorKey(\"monster\", {}, key);\n      actor?.sheet?.generateSave();\n      await waitForInput();\n\n      const dialogs = openDialogs();\n      expect(dialogs.length).equal(1);\n      dialogs[0].close();\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n      await closeDialogs();\n      await delay(300);\n    });\n  });\n\n  describe(\"_onDrop(event)\", () => {\n    const createMockRollTable = async () =>\n      RollTable.create({ name: \"Test RollTable\" });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n      game.tables\n        ?.filter((rt) => rt.name === \"Test RollTable\")\n        .forEach((rt) => rt.delete());\n    });\n\n    it(\"Can drag testing RollTable to Monster\", async () => {\n      const actor = await createMockActorKey(\"monster\", {}, key);\n      const rollTable = await createMockRollTable();\n      actor?.sheet?.render(true);\n      await delay(300);\n\n      // Setup DOM elements\n      const dragElement = document.querySelector(\n        `.tab li[data-document-id=${rollTable?.id}]`\n      );\n      const dropElement = document.querySelector(`.monster .window-content`);\n\n      // Check DOM elements\n      expect(dragElement).not.null;\n      expect(dropElement).not.null;\n\n      // Perform Drag\n      const mockDragStartEvent = new DragEvent(\"dragstart\", {\n        dataTransfer: new DataTransfer(),\n        bubbles: true,\n        cancelable: true,\n      });\n      dragElement?.dispatchEvent(mockDragStartEvent);\n\n      // Drop it\n      // eslint-disable-next-line no-underscore-dangle\n      actor?.sheet?._onDrop(mockDragStartEvent);\n      await waitForInput();\n\n      // Verify\n      expect(actor?.system.details.treasure.table).equal(\n        `@UUID[RollTable.${rollTable?.id}]`\n      );\n    });\n  });\n\n  describe(\"_resetAttacks(event)\", () => {\n    it(\"resets the counter to max\", async () => {\n      const actor = await createMockActorKey(\"monster\", {}, key);\n      actor?.sheet?.render(true);\n      const [item] = await createActorTestItem(actor, \"weapon\");\n      item.update({\n        system: {\n          counter: {\n            max: 4,\n            value: 1,\n          },\n        },\n      });\n      await delay(400);\n\n      expect(item.system.counter.value).equal(1);\n\n      // Click on reset\n      $(`.item-reset`).trigger(\"click\");\n      await waitForInput();\n\n      expect(item.system.counter.value).equal(4);\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"_updateAttackCounter(event)\", () => {\n    before(() => {\n      game.settings.set(game.system.id, \"invertedCtrlBehavior\", true);\n    });\n\n    it(\"updates counter when rolling\", async () => {\n      const actor = await createMockActorKey(\"monster\", {}, key);\n      actor?.sheet?.render(true);\n      const [item] = await createActorTestItem(actor, \"weapon\");\n      item.update({\n        system: {\n          counter: {\n            max: 4,\n            value: 4,\n          },\n        },\n      });\n      await delay(400);\n\n      expect(item.system.counter.value).equal(4);\n\n      // Click on reset\n      $(`.tab .item[data-item-id=\"${item.id}\"] .item-image`).trigger(\"click\");\n      await waitForInput();\n\n      expect(item.system.counter.value).equal(3);\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n\n  describe(\"_cycleAttackPatterns(event)\", () => {\n    const colors = Object.keys(CONFIG.OSE.colors);\n    colors.push(\"transparent\");\n\n    before(async () => {\n      const actor = await createMockActorKey(\"monster\", {}, key);\n      actor?.sheet?.render(true);\n      await createActorTestItem(actor, \"weapon\");\n      await delay(300);\n    });\n\n    describe(\"properly cycles between colors\", () => {\n      colors.forEach((color) => {\n        it(`works for color ${color}`, async () => {\n          const actor = await getMockActorKey(key);\n          const item = actor?.items.contents[0];\n          const currentPattern = item?.system.pattern;\n\n          expect(currentPattern).not.undefined;\n          const patternIndex = colors.indexOf(currentPattern);\n          const nextIndex =\n            patternIndex + 1 === colors.length ? 0 : patternIndex + 1;\n\n          // Click the thing\n          $(`.item-pattern`).trigger(\"click\");\n          await delay(200);\n\n          // Verify\n          expect(item?.system.pattern).equal(colors[nextIndex]);\n        });\n      });\n    });\n\n    after(async () => {\n      await cleanUpActorsByKey(key);\n    });\n  });\n};\n","/**\n * @file Contains tests for Character Modifiers sheet.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  createMockActorKey,\n  openWindows,\n  waitForInput,\n} from \"../../../e2e/testUtils\";\nimport OseCharacterModifiers from \"../character-modifiers\";\n\nexport const key = \"ose.actor.sheet.character.dialog.modifiers\";\nexport const options = {\n  displayName: \"OSE: Actor: Dialog Sheet: Character Modifiers\",\n};\n\nconst createMockActor = async (type: string, data: object = {}) =>\n  createMockActorKey(type, data, key);\n\nexport default ({ describe, it, expect, assert, after }: QuenchMethods) => {\n  describe(\"defaultOptions()\", () => {\n    it(\"Has correctly set defaultOptions\", () => {\n      const sheet = new OseCharacterModifiers();\n      expect(sheet.options.id).equal(\"sheet-modifiers\");\n      expect(sheet.options.classes).contain(\"ose\");\n      expect(sheet.options.classes).contain(\"dialog\");\n      expect(sheet.options.classes).contain(\"modifiers\");\n      expect(sheet.options.template).contain(\n        \"/templates/actors/dialogs/modifiers-dialog.html\"\n      );\n      expect(sheet.options.width).equal(240);\n    });\n  });\n\n  describe(\"title()\", () => {\n    it(\"Creates string in dialog window title\", async () => {\n      const actor = await createMockActor(\"character\");\n      const sheet = new OseCharacterModifiers(actor);\n      sheet.render(true);\n      await waitForInput();\n      const dialogTitle = document.querySelector(\n        \"div.modifiers .window-title\"\n      )?.innerHTML;\n      expect(typeof dialogTitle).equal(\"string\");\n      const dialogs = openWindows(\"modifiers\");\n      expect(dialogs.length).equal(1);\n      await dialogs[0].close();\n      expect(openWindows(\"modifiers\").length).equal(0);\n    });\n  });\n\n  describe(\"getData()\", () => {\n    it(\"Returns proper data\", async () => {\n      const actor = await createMockActor(\"character\");\n      const sheet = new OseCharacterModifiers(actor);\n      const data = sheet.getData();\n      const keys = Object.keys(data);\n      assert(keys.length > 0);\n      expect(keys).contain(\"user\");\n    });\n  });\n\n  after(async () => {\n    await cleanUpActorsByKey(key);\n  });\n};\n","/**\n * @file Contains tests for Entity Tweaks sheet.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  createMockActorKey,\n  openWindows,\n  waitForInput,\n} from \"../../../e2e/testUtils\";\nimport OseEntityTweaks from \"../entity-tweaks\";\n\nexport const key = \"ose.actor.sheet.dialog.entity-tweaks\";\nexport const options = {\n  displayName: \"OSE: Actor: Dialog Sheet: Entity Tweaks\",\n};\n\nconst createMockActor = async (type: string, data: object = {}) =>\n  createMockActorKey(type, data, key);\n\nexport default ({ describe, it, expect, assert, after }: QuenchMethods) => {\n  describe(\"defaultOptions()\", () => {\n    it(\"Has correctly set defaultOptions\", () => {\n      const entityTweaks = new OseEntityTweaks();\n      expect(entityTweaks.options.id).equal(\"sheet-tweaks\");\n      expect(entityTweaks.options.classes).contain(\"sheet-tweaks\");\n      expect(entityTweaks.options.template).contain(\n        \"/templates/actors/dialogs/tweaks-dialog.html\"\n      );\n      expect(entityTweaks.options.width).equal(380);\n    });\n  });\n\n  describe(\"title()\", () => {\n    it(\"Creates string in dialog window title\", async () => {\n      const actor = await createMockActor(\"character\");\n      const entityTweaks = new OseEntityTweaks(actor);\n      entityTweaks.render(true);\n      await waitForInput();\n      const dialogTitle = document.querySelector(\n        \"div.sheet-tweaks .window-title\"\n      )?.innerHTML;\n      expect(typeof dialogTitle).equal(\"string\");\n      const dialogs = openWindows(\"sheet-tweaks\");\n      expect(dialogs.length).equal(1);\n      await dialogs[0].close();\n      expect(openWindows(\"sheet-tweaks\").length).equal(0);\n    });\n  });\n\n  describe(\"getData()\", () => {\n    it(\"Returns proper data\", async () => {\n      const actor = await createMockActor(\"character\");\n      const entityTweaks = new OseEntityTweaks(actor);\n      const data = entityTweaks.getData();\n      const keys = Object.keys(data);\n      assert(keys.length >= 2);\n      expect(keys).contain(\"config\");\n      expect(keys).contain(\"user\");\n      assert(data.isCharacter);\n    });\n  });\n\n  // @todo: Test with Cypress or mock event\n  describe(\"_updateObject(event, formData)\", () => {});\n\n  after(async () => {\n    await cleanUpActorsByKey(key);\n  });\n};\n","/**\n * @file Contains tests for Ability Data Model.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport OseDataModelAbility from \"../data-model-ability\";\n\nexport const key = \"ose.item.datamodel.ability\";\nexport const options = { displayName: \"OSE: Item: Data Model: Ability\" };\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  describe(\"manualTags\", () => {\n    const ability = new OseDataModelAbility();\n    it(\"By default return empty array\", () => {\n      expect(ability.manualTags.length).equal(0);\n    });\n\n    it(\"Can write tags to tags field\", () => {\n      ability.tags = [{ title: \"title\", value: \"value\" }];\n      expect(ability.tags.length).equal(1);\n      expect(Object.keys(ability.tags[0]).length).equal(2);\n      expect(ability.tags[0].title).equal(\"title\");\n      expect(ability.tags[0].value).equal(\"value\");\n      expect(ability.tags[0].label).is.undefined;\n    });\n\n    it(\"Can retrieve tags\", () => {\n      expect(ability.manualTags.length).equal(1);\n      expect(ability.manualTags[0].title).equal(\"title\");\n      expect(ability.manualTags[0].value).equal(\"value\");\n      expect(ability.tags[0].label).is.undefined;\n    });\n  });\n\n  describe(\"autoTags\", () => {\n    const ability = new OseDataModelAbility();\n    it(\"By default return auto-tags\", () => {\n      expect(ability.autoTags.length).equal(1);\n      expect(Object.keys(ability.autoTags[0]).length).equal(1);\n    });\n\n    it(\"By default return empty label\", () => {\n      expect(ability.autoTags[0].label).equal(\"\");\n    });\n\n    it(\"By default return tshirt icon\", () => {\n      expect(ability.autoTags[0].icon).is.undefined;\n    });\n\n    it(\"Requirements create autoTags\", () => {\n      ability.requirements = \"magic-user,slow\";\n      expect(ability.autoTags.length).equal(2);\n      expect(Object.keys(ability.autoTags[0]).length).equal(1);\n      expect(ability.autoTags[0].label).equal(\"magic-user\");\n      expect(Object.keys(ability.autoTags[1]).length).equal(1);\n      expect(ability.autoTags[1].label).equal(\"slow\");\n    });\n\n    it(\"Save create autoTags\", () => {\n      ability.save = \"death\";\n      expect(ability.autoTags.length).equal(3);\n      expect(Object.keys(ability.autoTags[2]).length).equal(2);\n      expect(ability.autoTags[2].label).equal(\n        game.i18n.localize(\"OSE.saves.death.long\")\n      );\n      expect(ability.autoTags[2].icon).equal(\"fa-skull\");\n    });\n\n    it(\"Roll create autoTags\", () => {\n      ability.roll = \"1d20+1\";\n      expect(ability.autoTags.length).equal(4);\n      expect(Object.keys(ability.autoTags[3]).length).equal(2);\n      expect(ability.autoTags[2].label).equal(\n        `${game.i18n.localize(\"OSE.items.Roll\")} 1d20+1 undefinednull`\n      );\n    });\n  });\n};\n","/**\n * @file Contains tests for Armor Item Data Model.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport OseDataModelArmor from \"../data-model-armor\";\n\nexport const key = \"ose.item.datamodel.armor\";\nexport const options = { displayName: \"OSE: Item: Data Model: Armor\" };\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  describe(\"ArmorTypes\", () => {\n    const dataTypes = OseDataModelArmor.ArmorTypes;\n\n    it(\"Has 4 armor types\", () => {\n      expect(Object.keys(dataTypes).length).equal(4);\n    });\n    it(\"Has unarmored\", () => {\n      expect(dataTypes.unarmored).equal(\"OSE.armor.unarmored\");\n    });\n    it(\"Has light\", () => {\n      expect(dataTypes.light).equal(\"OSE.armor.light\");\n    });\n    it(\"Has heavy\", () => {\n      expect(dataTypes.heavy).equal(\"OSE.armor.heavy\");\n    });\n    it(\"Has shield\", () => {\n      expect(dataTypes.shield).equal(\"OSE.armor.shield\");\n    });\n  });\n\n  describe(\"manualTags\", () => {\n    const item = new OseDataModelArmor();\n\n    it(\"By default return empty array\", () => {\n      expect(item.manualTags.length).equal(0);\n    });\n\n    it(\"Can write tags to tags field\", () => {\n      item.tags = [{ title: \"title\", value: \"value\" }];\n      expect(item.tags.length).equal(1);\n      expect(Object.keys(item.tags[0]).length).equal(2);\n      expect(item.tags[0].title).equal(\"title\");\n      expect(item.tags[0].value).equal(\"value\");\n      expect(item.tags[0].label).is.undefined;\n    });\n\n    it(\"Can retrieve tags\", () => {\n      expect(item.manualTags.length).equal(1);\n      expect(Object.keys(item.tags[0]).length).equal(2);\n      expect(item.manualTags[0].title).equal(\"title\");\n      expect(item.manualTags[0].value).equal(\"value\");\n      expect(item.manualTags[0].label).equal(\"value\");\n    });\n  });\n\n  describe(\"autoTags\", () => {\n    const item = new OseDataModelArmor();\n\n    it(\"By default return auto-tags\", () => {\n      expect(item.autoTags.length).equal(1);\n      expect(Object.keys(item.autoTags[0]).length).equal(2);\n    });\n    it(\"By default return light armor\", () => {\n      expect(item.autoTags[0].label).equal(\"OSE.armor.light\");\n    });\n    it(\"By default return tshirt icon\", () => {\n      expect(item.autoTags[0].icon).equal(\"fa-tshirt\");\n    });\n  });\n};\n","/**\n * @file Contains tests for Container Item Data Model.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport OseDataModelContainer from \"../data-model-container\";\n\nexport const key = \"ose.item.datamodel.container\";\nexport const options = { displayName: \"OSE: Item: Data Model: Container\" };\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  describe(\"contents()\", () => {\n    it(\"Returns null if itemIds is empty Array\", () => {\n      const container = new OseDataModelContainer();\n      expect(container.contents).is.null;\n    });\n  });\n\n  describe(\"totalWeight()\", () => {\n    it(\"Returns 0 with no items\", () => {\n      const container = new OseDataModelContainer();\n      expect(container.totalWeight).equal(0);\n    });\n  });\n\n  describe(\"manualTags()\", () => {\n    const container = new OseDataModelContainer();\n    it(\"By default return empty array\", () => {\n      expect(container.manualTags.length).equal(0);\n    });\n\n    it(\"Can write tags to tags field\", () => {\n      container.tags = [{ value: \"value\", title: \"title\" }];\n      expect(container.tags.length).equal(1);\n      expect(Object.keys(container.tags[0]).length).equal(2);\n      expect(container.tags[0].title).equal(\"title\");\n      expect(container.tags[0].value).equal(\"value\");\n      expect(container.tags[0].label).is.undefined;\n    });\n\n    it(\"Can retrieve tags\", () => {\n      expect(container.manualTags.length).equal(1);\n      expect(container.manualTags[0].title).equal(\"title\");\n      expect(container.manualTags[0].value).equal(\"value\");\n      expect(container.tags[0].label).is.undefined;\n    });\n  });\n\n  describe(\"autoTags()\", () => {\n    const container = new OseDataModelContainer();\n    it(\"By default return no auto-tags\", () => {\n      expect(container.autoTags.length).equal(0);\n    });\n\n    it(\"Can create autoTags\", () => {\n      container.tags = [{ value: CONFIG.OSE.tags.blunt }];\n      expect(container.tags.length).equal(1);\n      expect(container.autoTags[0].label).equal(CONFIG.OSE.tags.blunt);\n      expect(container.autoTags[0].icon).equal(\"fa-hammer-crash\");\n      expect(container.autoTags[0].image).equal(\n        `${CONFIG.OSE.assetsPath}/blunt.png`\n      );\n    });\n  });\n};\n","/**\n * @file Contains tests for Misc Item Data Model.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport OseDataModelItem from \"../data-model-item\";\n\nexport const key = \"ose.item.datamodel.misc\";\nexport const options = { displayName: \"OSE: Item: Data Model: Misc\" };\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  describe(\"manualTags()\", () => {\n    const miscItem = new OseDataModelItem();\n    it(\"By default return empty array\", () => {\n      expect(miscItem.manualTags.length).equal(0);\n    });\n\n    it(\"Can write tags to tags field\", () => {\n      miscItem.tags = [{ title: \"title\", value: \"value\" }];\n      expect(miscItem.tags.length).equal(1);\n      expect(Object.keys(miscItem.tags[0]).length).equal(2);\n      expect(miscItem.tags[0].title).equal(\"title\");\n      expect(miscItem.tags[0].value).equal(\"value\");\n      expect(miscItem.tags[0].label).is.undefined;\n    });\n\n    it(\"Can retrieve tags\", () => {\n      expect(miscItem.manualTags.length).equal(1);\n      expect(miscItem.manualTags[0].title).equal(\"title\");\n      expect(miscItem.manualTags[0].value).equal(\"value\");\n      expect(miscItem.tags[0].label).is.undefined;\n    });\n  });\n\n  describe(\"autoTags()\", () => {\n    const miscItem = new OseDataModelItem();\n    it(\"By default return no auto-tags\", () => {\n      expect(miscItem.autoTags.length).equal(0);\n    });\n\n    it(\"Can create autoTags\", () => {\n      miscItem.tags = [{ value: CONFIG.OSE.tags.blunt }];\n      expect(miscItem.tags.length).equal(1);\n      expect(miscItem.autoTags[0].label).equal(CONFIG.OSE.tags.blunt);\n      expect(miscItem.autoTags[0].icon).equal(\"fa-hammer-crash\");\n      expect(miscItem.autoTags[0].image).equal(\n        `${CONFIG.OSE.assetsPath}/blunt.png`\n      );\n    });\n  });\n};\n","/**\n * @file Contains tests for Spell Item Data Model.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport OseDataModelSpell from \"../data-model-spell\";\n\nexport const key = \"ose.item.datamodel.spell\";\nexport const options = { displayName: \"OSE: Item: Data Model: Spell\" };\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  describe(\"manualTags()\", () => {\n    const spell = new OseDataModelSpell();\n    it(\"By default return empty array\", () => {\n      expect(spell.manualTags.length).equal(0);\n    });\n\n    it(\"Can write tags to tags field\", () => {\n      spell.tags = [{ title: \"title\", value: \"value\" }];\n      expect(spell.tags.length).equal(1);\n      expect(Object.keys(spell.tags[0]).length).equal(2);\n      expect(spell.tags[0].title).equal(\"title\");\n      expect(spell.tags[0].value).equal(\"value\");\n      expect(spell.tags[0].label).is.undefined;\n    });\n\n    it(\"Can retrieve tags\", () => {\n      expect(spell.manualTags.length).equal(1);\n      expect(spell.manualTags[0].title).equal(\"title\");\n      expect(spell.manualTags[0].value).equal(\"value\");\n      expect(spell.tags[0].label).is.undefined;\n    });\n  });\n\n  describe(\"autoTags()\", () => {\n    const spell = new OseDataModelSpell();\n    it(\"By default return 3 auto-tags\", () => {\n      expect(spell.autoTags.length).equal(3);\n      spell.autoTags.forEach((t) => {\n        expect(t).not.null;\n        expect(t?.label).equal(\"\");\n      });\n    });\n\n    it(\"Save create autoTags\", () => {\n      spell.save = \"death\";\n      expect(spell.autoTags.length).equal(4);\n      expect(Object.keys(spell.autoTags[3]).length).equal(2);\n      expect(spell.autoTags[3].label).equal(\n        game.i18n.localize(\"OSE.saves.death.long\")\n      );\n      expect(spell.autoTags[3].icon).equal(\"fa-skull\");\n    });\n\n    it(\"Roll create autoTags\", () => {\n      spell.roll = \"1d20+1\";\n      expect(spell.autoTags.length).equal(5);\n      expect(Object.keys(spell.autoTags[3]).length).equal(1);\n      expect(spell.autoTags[3].label).equal(\n        `${game.i18n.localize(\"OSE.items.Roll\")} 1d20+1`\n      );\n    });\n  });\n};\n","/**\n * @file Contains tests for Weapon Item Data Model.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport OseDataModelWeapon from \"../data-model-weapon\";\n\nexport const key = \"ose.item.datamodel.weapon\";\nexport const options = { displayName: \"OSE: Item: Data Model: Weapon\" };\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  describe(\"manualTags()\", () => {\n    const item = new OseDataModelWeapon();\n    it(\"By default return empty array\", () => {\n      expect(item.manualTags.length).equal(0);\n    });\n\n    it(\"Can write tags to tags field\", () => {\n      item.tags = [{ title: \"title\", value: \"value\" }];\n      expect(item.tags.length).equal(1);\n      expect(Object.keys(item.tags[0]).length).equal(2);\n      expect(item.tags[0].title).equal(\"title\");\n      expect(item.tags[0].value).equal(\"value\");\n      expect(item.tags[0].label).is.undefined;\n    });\n\n    it(\"Can retrieve tags\", () => {\n      expect(item.manualTags.length).equal(1);\n      expect(Object.keys(item.tags[0]).length).equal(2);\n      expect(item.manualTags[0].title).equal(\"title\");\n      expect(item.manualTags[0].value).equal(\"value\");\n      expect(item.manualTags[0].label).is.undefined;\n    });\n  });\n  describe(\"qualities()\", () => {\n    it(\"By default returns an empty array\", () => {\n      const item = new OseDataModelWeapon();\n      expect(item.qualities.length).equal(0);\n    });\n\n    it(\"Given a manual tag, it returns an array containing said tag\", () => {\n      const item = new OseDataModelWeapon();\n      item.tags = [{ value: \"slow\", label: \"slow\" }];\n      expect(item.qualities.length).equal(1);\n      expect(Object.keys(item.qualities[0]).length).equal(2);\n      expect(item.qualities[0].label).equal(item.manualTags[0].label);\n      expect(item.qualities[0].value).equal(item.manualTags[0].value);\n    });\n\n    it(\"Given a autoTag, it returns an array containing said autoTag\", () => {\n      const item = new OseDataModelWeapon();\n      item.slow = true;\n      expect(item.qualities.length).equal(1);\n      expect(Object.keys(item.qualities[0]).length).equal(4);\n      expect(item.qualities[0].label).equal(\"Slow\");\n      expect(item.qualities[0].title).equal(\"Slow\");\n      expect(item.qualities[0].icon).equal(\"fa-weight-hanging\");\n      expect(item.qualities[0].image).contain(\"assets/slow.png\");\n    });\n  });\n\n  describe(\"autotags()\", () => {\n    it(\"Returns an flattened array with damage and autotags\", () => {\n      const item = new OseDataModelWeapon();\n      expect(item.autoTags.length).equal(1);\n      expect(Object.keys(item.autoTags[0]).length).equal(2);\n      expect(item.autoTags[0].icon).equal(\"fa-tint\");\n      expect(item.autoTags[0].label).equal(\"\");\n    });\n\n    it(\"Damage is present in flattened array\", () => {\n      const item = new OseDataModelWeapon();\n      item.damage = \"1d13\";\n      expect(item.autoTags.length).equal(1);\n      expect(Object.keys(item.autoTags[0]).length).equal(2);\n      expect(item.autoTags[0].icon).equal(\"fa-tint\");\n      expect(item.autoTags[0].label).equal(\"1d13\");\n    });\n\n    it(\"A melee tag is returned as expected\", () => {\n      const item = new OseDataModelWeapon();\n      item.melee = true;\n      expect(item.autoTags.length).equal(2);\n      expect(Object.keys(item.autoTags[0]).length).equal(2);\n      expect(item.autoTags[0].icon).equal(\"fa-tint\");\n      expect(item.autoTags[0].label).equal(\"\");\n      expect(Object.keys(item.autoTags[1]).length).equal(3);\n      expect(item.autoTags[1].label).equal(\"Melee\");\n      expect(item.autoTags[1].icon).equal(\"fa-sword\");\n      expect(item.autoTags[1].image).contain(\"assets/melee.png\");\n    });\n\n    it(\"A missile tag is returned as expected\", () => {\n      const item = new OseDataModelWeapon();\n      item.missile = true;\n      expect(item.autoTags.length).equal(3);\n      expect(Object.keys(item.autoTags[0]).length).equal(2);\n      expect(item.autoTags[0].icon).equal(\"fa-tint\");\n      expect(item.autoTags[0].label).equal(\"\");\n      expect(Object.keys(item.autoTags[1]).length).equal(3);\n      expect(item.autoTags[1].label).equal(\"Missile\");\n      expect(item.autoTags[1].icon).equal(\"fa-bow-arrow\");\n      expect(item.autoTags[1].image).contain(\"assets/missile.png\");\n      expect(Object.keys(item.autoTags[2]).length).equal(2);\n      expect(item.autoTags[2].label).equal(\"0/0/0\");\n      expect(item.autoTags[2].icon).equal(\"fa-bullseye\");\n    });\n\n    it(\"A missile tag with ranges is returned as expected\", () => {\n      const item = new OseDataModelWeapon();\n      item.missile = true;\n      item.range.short = 30;\n      item.range.medium = 60;\n      item.range.long = 90;\n      expect(item.autoTags.length).equal(3);\n      expect(Object.keys(item.autoTags[0]).length).equal(2);\n      expect(item.autoTags[0].icon).equal(\"fa-tint\");\n      expect(item.autoTags[0].label).equal(\"\");\n      expect(Object.keys(item.autoTags[1]).length).equal(3);\n      expect(item.autoTags[1].label).equal(\"Missile\");\n      expect(item.autoTags[1].icon).equal(\"fa-bow-arrow\");\n      expect(item.autoTags[1].image).contain(\"assets/missile.png\");\n      expect(Object.keys(item.autoTags[2]).length).equal(2);\n      expect(item.autoTags[2].label).equal(\"30/60/90\");\n      expect(item.autoTags[2].icon).equal(\"fa-bullseye\");\n    });\n\n    it(\"A slow tag is returned as expected\", () => {\n      const item = new OseDataModelWeapon();\n      item.slow = true;\n      expect(item.autoTags.length).equal(2);\n      expect(Object.keys(item.autoTags[0]).length).equal(2);\n      expect(item.autoTags[0].icon).equal(\"fa-tint\");\n      expect(item.autoTags[0].label).equal(\"\");\n      expect(Object.keys(item.autoTags[1]).length).equal(3);\n      expect(item.autoTags[1].label).equal(\"Slow\");\n      expect(item.autoTags[1].icon).equal(\"fa-weight-hanging\");\n      expect(item.autoTags[1].image).contain(\"assets/slow.png\");\n    });\n\n    it(\"A save tag is returned as expected\", () => {\n      const item = new OseDataModelWeapon();\n      item.save = \"death\";\n      expect(item.autoTags.length).equal(2);\n      expect(Object.keys(item.autoTags[0]).length).equal(2);\n      expect(item.autoTags[0].icon).equal(\"fa-tint\");\n      expect(item.autoTags[0].label).equal(\"\");\n      expect(Object.keys(item.autoTags[1]).length).equal(2);\n      expect(item.autoTags[1].label).equal(\n        game.i18n.localize(\"OSE.saves.death.long\")\n      );\n      expect(item.autoTags[1].icon).equal(\"fa-skull\");\n    });\n  });\n};\n","/**\n * @file Contains tests for Item Data Model.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport {\n  cleanUpWorldItems,\n  closeDialogs,\n  createActorTestItem,\n  createMockActorKey,\n  createWorldTestItem,\n  openDialogs,\n  trashChat,\n  waitForInput,\n} from \"../../../e2e/testUtils\";\nimport OseItem from \"../entity\";\n\nexport const key = \"ose.item.entity\";\nexport const options = { displayName: \"OSE: Item: Entity\" };\n\nconst createMockActor = async (data: object = {}) =>\n  createMockActorKey(\"character\", data, key);\n\nexport default ({\n  describe,\n  it,\n  expect,\n  after,\n  beforeEach,\n  assert,\n}: QuenchMethods) => {\n  const itemTypes = new Set([\n    \"spell\",\n    \"ability\",\n    \"armor\",\n    \"weapon\",\n    \"item\",\n    \"container\",\n  ]);\n\n  const { defaultIcons } = OseItem;\n\n  after(async () => {\n    cleanUpWorldItems();\n  });\n\n  describe(\"defaultIcons()\", () => {\n    it(\"There are 6 default icons\", () =>\n      expect(Object.keys(defaultIcons).length).equal(6));\n\n    itemTypes.forEach((type: string) => {\n      it(`Has ${type} icon`, () => expect(defaultIcons[type]).is.not.undefined);\n    });\n\n    it(\"Asking for other items return null\", () =>\n      expect(defaultIcons.non_existing).is.undefined);\n  });\n\n  describe(\"create()\", () => {\n    const testItemCreate = async (type: string) => {\n      const item = await createWorldTestItem(type);\n      expect(item).is.not.undefined;\n      expect(item?.img).equals(defaultIcons[type]);\n      const itemName = item?.name;\n      await item?.delete();\n      expect(game.items?.find((o) => o.name === itemName)).is.undefined;\n    };\n\n    it(\"Can create weapon OseItem\", async () => {\n      await testItemCreate(\"weapon\");\n    });\n    it(\"Can create armor OseItem\", async () => {\n      await testItemCreate(\"armor\");\n    });\n    it(\"Can create item OseItem\", async () => {\n      await testItemCreate(\"item\");\n    });\n    it(\"Can create spell OseItem\", async () => {\n      await testItemCreate(\"spell\");\n    });\n    it(\"Can create ability OseItem\", async () => {\n      await testItemCreate(\"ability\");\n    });\n    it(\"Can create container OseItem\", async () => {\n      await testItemCreate(\"container\");\n    });\n\n    // Requires chai-as-promised\n    /*\n    it('Can\\'t create without name', async () => {\n      await expect(OseItem.create({type: 'container'})).to.be.rejectedWith(\n        Error, \n        \"[OseItem.name] may not be a blank string\")\n    })\n    it('Can\\'t create without type', async () => {\n      await expect(OseItem.create({name: 'Test Item'})).to.be.rejectedWith(\n        Error, \n        \"[OseItem.type] may not be a blank string\")\n    })\n    it('Can\\'t create without acceptable type', async () => {\n      await expect(OseItem.create({name: 'Test Item', type: 'TEST'})).to.be.rejectedWith(\n        Error, \n        \"[OseItem.type] TEST is not a valid choice\")\n    }) \n    */\n  });\n\n  // @todo: How to test?\n  describe(\"prepareData()\", () => {});\n\n  describe(\"prepareDerivedData()\", () => {\n    it(\"has the expected fields\", async () => {\n      const item = (await createWorldTestItem(type)) as OseItem;\n      expect(item?.system.enrichedDescription).not.undefined;\n      await item?.delete();\n    });\n  });\n\n  // @todo: How to mock html?\n  describe(\"chatListeners(html)\", () => {\n    it(\"Correctly binds _onChatCardAction to element\", () => {});\n    it(\"Correctly binds _onChatCardToggleContent to element\", () => {});\n  });\n\n  /// @todo: How to test?\n  describe(\"getChatData(htmlOptions)\", () => {\n    it(\"Weapon with tags correctly stored in item.system.properties\", () => {});\n    it(\"Spell stores class, level, range, and duration in item.system.properties\", () => {});\n    it('Equipped item stores \"Equipped\" in item.system.properties', () => {});\n    it(\"Properly returns itemData\", () => {});\n  });\n\n  describe(\"rollWeapon(options)\", () => {\n    it(\"Actor with melee & missile weapon renders dialog\", async () => {\n      const actor: OseActor = await createMockActor();\n      await createActorTestItem(actor, \"weapon\");\n      const weapon: OseItem = actor?.items.contents[0];\n      await weapon?.update({ system: { melee: true, missile: true } });\n      const result = weapon.rollWeapon();\n      await waitForInput();\n      await actor.delete();\n      expect(openDialogs().length).equal(1);\n      assert(result);\n      await closeDialogs();\n      await waitForInput();\n      await waitForInput();\n      await waitForInput();\n      expect(openDialogs().length).equal(0);\n    });\n\n    it(\"Actor with weapon with \", async () => {\n      const actor: OseActor = await createMockActor();\n      await createActorTestItem(actor, \"weapon\");\n      const weapon: OseItem = actor?.items.contents[0];\n      await weapon?.update({ system: { missile: true, melee: false } });\n      const result = weapon.rollWeapon();\n      await actor.delete();\n      assert(result);\n    });\n  });\n\n  describe(\"rollFormula(options)\", () => {\n    it(\"Missing item.system.roll throws error\", async () => {\n      const item: OseItem = await createWorldTestItem(\"item\");\n      try {\n        await item.rollFormula();\n      } catch (error: any) {\n        expect(error.name).equal(\"Error\");\n      }\n    });\n    it(\"Casting a spell trigger a dialog\", async () => {\n      const item: OseItem = await createWorldTestItem(\"spell\");\n      await item.update({ system: { roll: \"1d20+12\" } });\n      await item.rollFormula();\n      await waitForInput();\n      await waitForInput();\n      await waitForInput();\n      expect(openDialogs().length).equal(1);\n      await closeDialogs();\n      await trashChat();\n    });\n    it(\"A OseDice.Roll is returned from method\", async () => {\n      const item: OseItem = await createWorldTestItem(\"spell\");\n      await item.update({ system: { roll: \"1d20+12\" } });\n      const result: any = await item.rollFormula();\n      assert(result instanceof Roll);\n    });\n  });\n\n  describe(\"spendSpell()\", () => {\n    it(\"Calling using non-spell item throws an error\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      try {\n        await item.spendSpell();\n      } catch (error: unknown) {\n        expect(error.name).equal(\"Error\");\n      }\n    });\n    it(\"Calling function reduces item.system.cast by one\", async () => {\n      const item: OseItem = await createWorldTestItem(\"spell\");\n      const initialSlots: Number = 3;\n      await item.update({ system: { cast: initialSlots } });\n      await item.spendSpell();\n      expect(item?.system?.cast).equal(initialSlots - 1);\n    });\n  });\n\n  describe(\"_getRollTag(data)\", () => {\n    it(\"Data provided without a roll key returns void\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      // eslint-disable-next-line no-underscore-dangle\n      const tag = item._getRollTag({});\n      expect(tag).to.be.undefined;\n    });\n    it(\"Returns ab object with value containing roll-info\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      // eslint-disable-next-line no-underscore-dangle\n      const tag = item._getRollTag({ roll: \"1d12+4\" });\n      expect(tag).not.to.be.undefined;\n      expect(tag?.label).equal(\"Roll 1d12+4\");\n    });\n  });\n\n  describe(\"_getSaveTag(data)\", () => {\n    it(\"Data provided without a save key returns void\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      // eslint-disable-next-line no-underscore-dangle\n      const tag = item._getSaveTag({});\n      expect(tag).to.be.undefined;\n    });\n    it(\"Returns an object with two keys; label and icon\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      // eslint-disable-next-line no-underscore-dangle\n      const tag = item._getSaveTag({ save: \"death\" });\n      expect(tag).not.to.be.undefined;\n      expect(tag?.label).equal(\"Death Poison\");\n      expect(tag?.icon).equal(\"fa-skull\");\n    });\n  });\n\n  describe(\"pushManualTag(values)\", () => {\n    const testPushManualTag = async (\n      item: OseItem,\n      tag: string,\n      itemTagData: { label: string; title: string; value: string }\n      // eslint-disable-next-line unicorn/consistent-function-scoping\n    ) => {\n      expect(item?.system?.tags.length).equal(0);\n      await item?.pushManualTag([tag]);\n      expect(item?.system?.tags.length).equal(1);\n      const itemTag = item?.system?.tags?.pop();\n      expect(itemTag.label).equal(itemTagData.label);\n      expect(itemTag.title).equal(itemTagData.title);\n      expect(itemTag.value).equal(itemTagData.value);\n    };\n\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const pushManualTag = async (item: OseItem, tag: string) => {\n      expect(item?.system?.tags.length).equal(0);\n      await item?.pushManualTag([tag]);\n    };\n\n    const testSystemBooleans = (\n      item: OseItem,\n      flags: { melee: boolean; slow: boolean; missile: boolean }\n    ) => {\n      expect(item.system.melee).equal(flags.melee);\n      expect(item.system.slow).equal(flags.slow);\n      expect(item.system.missile).equal(flags.missile);\n    };\n\n    it(\"Provided value without () adds value to all keys\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      await testPushManualTag(item, \"test\", {\n        label: \"test\",\n        title: \"test\",\n        value: \"test\",\n      });\n      item.delete();\n    });\n    it(\"Provided values have tags within () added to array as title\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      await testPushManualTag(item, \"test (test2)\", {\n        label: \"test\",\n        title: \"test2\",\n        value: \"test\",\n      });\n      item.delete();\n    });\n\n    // Default\n    it(\"Weapons are automatically melee\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      testSystemBooleans(item, { melee: true, slow: false, missile: false });\n      await item?.delete();\n    });\n\n    // Boolean tags\n    const booleanTags = new Set([\n      CONFIG.OSE.tags.melee,\n      CONFIG.OSE.tags.slow,\n      CONFIG.OSE.tags.missile,\n    ]);\n\n    booleanTags.forEach((t) => {\n      it(`\"${t}\" tag activates the boolean but not a tag`, async () => {\n        const item: OseItem = await createWorldTestItem(\"weapon\");\n        await pushManualTag(item, t);\n        testSystemBooleans(item, {\n          melee: true,\n          slow: t === CONFIG.OSE.tags.slow,\n          missile: t === CONFIG.OSE.tags.missile,\n        });\n        item.delete();\n      });\n      it(`\"Test (${t})\" tags activates the boolean and adds a tag`, async () => {\n        const item: OseItem = await createWorldTestItem(\"weapon\");\n        await testPushManualTag(item, `Test (${t})`, {\n          label: \"Test\",\n          title: t,\n          value: \"Test\",\n        });\n        testSystemBooleans(item, {\n          melee: true,\n          slow: t === CONFIG.OSE.tags.slow,\n          missile: t === CONFIG.OSE.tags.missile,\n        });\n        item.delete();\n      });\n    });\n  });\n\n  describe(\"popManualTag(value)\", () => {\n    it(\"Item without system.tags return undefined\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      expect(item.system.tags.length).equal(0);\n      const poppedTag = await item.popManualTag(\"test\");\n      expect(poppedTag).equal(undefined);\n    });\n    it(\"Tags matching input value are removed from item.system.tags\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      expect(item.system.tags.length).equal(0);\n\n      await item.pushManualTag([\"test\", \"test2\"]);\n      expect(item.system.tags.length).equal(2);\n\n      await item.popManualTag(\"test\");\n      expect(item.system.tags.length).equal(1);\n      expect(item.system.tags.pop().title).equal(\"test2\");\n    });\n  });\n\n  describe(\"getAutoTagList()\", () => {\n    it(\"Container does nothing\", async () => {\n      const item: OseItem = await createWorldTestItem(\"container\");\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(0);\n      item.delete();\n    });\n    it(\"Item does nothing\", async () => {\n      const item: OseItem = await createWorldTestItem(\"item\");\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(0);\n      item.delete();\n    });\n    it(\"Weapon has damage label applied\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(1);\n      expect(tagList[0].icon).equal(\"fa-tint\");\n      expect(tagList[0].label).equal(\"1d6\");\n      item.delete();\n    });\n    it(\"Missile weapon has ranges applied\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      await item.pushManualTag([CONFIG.OSE.tags.missile]);\n      assert(item.system.missile);\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(2);\n      expect(tagList[0].icon).equal(\"fa-tint\");\n      expect(tagList[0].label).equal(\"1d6\");\n      expect(tagList[1].icon).equal(\"fa-bullseye\");\n      expect(tagList[1].label).equal(\"0/0/0\");\n      item.delete();\n    });\n    it(\"Manual weapon tags are applied\", async () => {\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      await item.pushManualTag([\"Test\"]);\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(2);\n      expect(tagList[0].icon).equal(\"fa-tint\");\n      expect(tagList[0].label).equal(\"1d6\");\n      expect(tagList[1].label).equal(\"Test\");\n      item.delete();\n    });\n    it(\"Default Armor has armor type applied\", async () => {\n      const item: OseItem = await createWorldTestItem(\"armor\");\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(1);\n      expect(tagList[0].icon).equal(\"fa-tshirt\");\n      expect(tagList[0].label).equal(\"Light\");\n      item.delete();\n    });\n    it(\"Heavy Armor has armor type applied\", async () => {\n      const item: OseItem = await createWorldTestItem(\"armor\");\n      await item.update({ system: { type: \"heavy\" } });\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(1);\n      expect(tagList[0].icon).equal(\"fa-tshirt\");\n      expect(tagList[0].label).equal(\"Heavy\");\n      item.delete();\n    });\n    it(\"Spells have class, range, and duration applied\", async () => {\n      const item: OseItem = await createWorldTestItem(\"spell\");\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(3);\n      expect(tagList[0].label).equal(\"Magic-User\");\n      expect(tagList[1].label).equal(\"\");\n      expect(tagList[2].label).equal(\"\");\n      item.delete();\n    });\n    it(\"Abilities have requirements applied\", async () => {\n      const item: OseItem = await createWorldTestItem(\"ability\");\n      await item.update({ system: { requirements: \"alice,bob\" } });\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(2);\n      expect(tagList[0].label).equal(\"alice\");\n      expect(tagList[1].label).equal(\"bob\");\n      item.delete();\n    });\n    it(\"If rollTag exists, it is applied\", async () => {\n      const item: OseItem = await createWorldTestItem(\"spell\");\n      await item.update({ system: { roll: \"1d20+12\" } });\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(4);\n      expect(tagList[3].label).equal(\"Roll 1d20+12\");\n      item.delete();\n    });\n    it(\"If saveTag exists, it is applied\", async () => {\n      const item: OseItem = await createWorldTestItem(\"spell\");\n      await item.update({ system: { save: \"death\" } });\n      const tagList = item.getAutoTagList();\n      expect(tagList.length).equal(4);\n      expect(tagList[3].label).equal(\"Death Poison\");\n      expect(tagList[3].icon).equal(\"fa-skull\");\n      item.delete();\n    });\n  });\n\n  // @todo How to test?\n  describe(\"roll(options)\", () => {\n    it(\"Item of weapon type activates rollWeapon\", async () => {});\n    it(\"Item of spell type activates spendSpell\", () => {});\n    it(\"Item of ability type activates rollFormula if it has associated item.system.roll\", () => {});\n    it(\"Item of ability type shows chat card if no item.system.roll associated\", () => {});\n    it(\"Item of item type shows chat card\", () => {});\n    it(\"Item of armor type shows chat card\", () => {});\n  });\n\n  describe(\"show()\", () => {\n    beforeEach(async () => {\n      await trashChat();\n    });\n\n    after(async () => {\n      game.items\n        ?.filter((o) => o?.name?.indexOf(\"Test Weapon Item \") >= 0 || false)\n        .forEach(async (i) => i.delete());\n      await trashChat();\n    });\n\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const rollMessageTest = async (rollMode: string) => {\n      assert(\n        [\"publicroll\", \"gmroll\", \"blindroll\", \"selfroll\"].includes(rollMode)\n      );\n      expect(game.messages?.size).equal(0);\n      game.settings.set(\"core\", \"rollMode\", rollMode);\n      expect(game.settings.get(\"core\", \"rollMode\")).equal(rollMode);\n      const item: OseItem = await createWorldTestItem(\"weapon\");\n      await item?.show();\n      expect(game.messages?.size).equal(1);\n      const chatMessage = game.messages?.contents.pop();\n      expect(chatMessage?.blind).equal(rollMode === \"blindroll\");\n      expect(chatMessage?.type).equal(0);\n      if (rollMode === \"publicroll\") {\n        expect(chatMessage?.whisper?.length).equal(0);\n      } else {\n        chatMessage?.whisper?.forEach((o: string) => {\n          // eslint-disable-next-line no-underscore-dangle\n          assert(game.users?.find((u: User) => u._id === o)?.isGM);\n        });\n      }\n      await item?.delete();\n    };\n\n    it(\"Private GM Roll whispers chat message to GM\", async () => {\n      await rollMessageTest(\"gmroll\");\n    });\n\n    it(\"Blindroll whispers chat message to GM and is blind\", async () => {\n      await rollMessageTest(\"blindroll\");\n    });\n\n    it(\"Selfroll whispers chat message to user\", async () => {\n      await rollMessageTest(\"selfroll\");\n    });\n    it(\"Public messages is not a whisper and is not blind\", async () => {\n      await rollMessageTest(\"publicroll\");\n    });\n  });\n\n  // @todo: How to test? Mock Event?\n  describe(\"_onChatCardToggleContent(event)\", () => {});\n  describe(\"_onChatCardAction(event)\", () => {});\n\n  // @todo: How to mock?\n  describe(\"_getChatCardActor(card)\", () => {\n    it(\"Returns actor if tokenId is properly set\", () => {});\n    it(\"Returns actor if actorId is properly set\", () => {});\n    it(\"Returns null if neither tokenId nor actorId is properly set\", () => {});\n  });\n\n  // @todo: How to mock?\n  describe(\"_getChatCardTargets(card)\", () => {});\n};\n","/**\n * @file Contains tests for Ability Data Model.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport { cleanUpWorldItems, createWorldTestItem } from \"../../../e2e/testUtils\";\n\nexport const key = \"ose.item.sheet\";\nexport const options = { displayName: \"OSE: Item: Sheet\" };\n\nexport default ({ describe, it, expect, after, assert }: QuenchMethods) => {\n  after(() => {\n    cleanUpWorldItems();\n  });\n\n  describe(\"defaultOptions() \", () => {\n    it(\"Has correctly set defaultOptions\", async () => {\n      const item = await createWorldTestItem(\"item\");\n      const sheet = item?.sheet;\n      expect(sheet).is.not.undefined;\n      expect(sheet?.options.classes.length).equal(3);\n      expect(sheet?.options.classes).contain(\"ose\");\n      expect(sheet?.options.classes).contain(\"sheet\");\n      expect(sheet?.options.classes).contain(\"item\");\n      expect(sheet?.options.width).equal(520);\n      expect(sheet?.options.height).equal(390);\n      assert(!sheet?.options.resizable);\n      expect(sheet?.options.tabs.length).equal(1);\n      expect(Object.keys(sheet?.options.tabs[0]).length).equal(4);\n      expect(Object.keys(sheet?.options.tabs[0])).contain(\"callback\");\n      expect(typeof sheet?.options.tabs[0].callback).equal(\"function\");\n      expect(sheet?.options.tabs[0].callback.name).contain(\"_onChangeTab\");\n      expect(Object.keys(sheet?.options.tabs[0])).contain(\"navSelector\");\n      expect(sheet?.options.tabs[0].navSelector).equal(\".tabs\");\n      expect(Object.keys(sheet?.options.tabs[0])).contain(\"contentSelector\");\n      expect(sheet?.options.tabs[0].contentSelector).equal(\".sheet-body\");\n      expect(Object.keys(sheet?.options.tabs[0])).contain(\"initial\");\n      expect(sheet?.options.tabs[0].initial).equal(\"description\");\n    });\n  });\n\n  describe(\"template()\", () => {\n    it(\"Returns html path\", async () => {\n      const item = await createWorldTestItem(\"item\");\n      const sheet = item?.sheet;\n      expect(sheet).is.not.undefined;\n      expect(sheet?.template).contain(\"templates/items\");\n      expect(sheet?.template).contain(\"-sheet.html\");\n    });\n  });\n\n  describe(\"getData()\", () => {\n    it(\"Returns data\", async () => {\n      const item = await createWorldTestItem(\"item\");\n      const sheet = item?.sheet;\n      expect(sheet).is.not.undefined;\n      const data = await sheet?.getData();\n      expect(Object.keys(data)).contain(\"_id\");\n      expect(Object.keys(data)).contain(\"editable\");\n      expect(Object.keys(data)).contain(\"config\");\n      expect(Object.keys(data)).contain(\"enriched\");\n    });\n  });\n};\n","/**\n * @file Contains tests for Party Entity.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport { cleanUpActorsByKey, createMockActorKey } from \"../../../e2e/testUtils\";\nimport OseParty from \"../party\";\nimport OsePartySheet from \"../party-sheet\";\n\nexport const key = \"ose.party.entity\";\nexport const options = { displayName: \"OSE: Party: Entity\" };\n\nconst createMockActor = async (type: string, data: object = {}) =>\n  createMockActorKey(type, data, key);\n\nexport default ({ describe, it, expect, assert, after }: QuenchMethods) => {\n  describe(\"currentParty()\", () => {\n    it(\"Returns all characters in a party\", async () => {\n      const actor = await createMockActor(\"character\");\n      const partySheet = new OsePartySheet();\n      // eslint-disable-next-line no-underscore-dangle\n      const promisedAnswer = await partySheet._addActorToParty(actor);\n      expect(promisedAnswer).is.undefined;\n      assert(actor?.getFlag(game.system.id, \"party\"));\n\n      const party = OseParty;\n      const actorsInParty = game.actors?.filter(\n        (o) => o.flags[game.system.id]?.party\n      );\n      expect(party.currentParty.length).equal(actorsInParty?.length);\n      await actor?.delete();\n    });\n  });\n\n  after(async () => {\n    await cleanUpActorsByKey(key);\n  });\n};\n","/**\n * @file Contains tests for Party Sheet.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  createMockActorKey,\n  openWindows,\n  waitForInput,\n} from \"../../../e2e/testUtils\";\nimport OsePartySheet from \"../party-sheet\";\n\nexport const key = \"ose.party.sheet\";\nexport const options = { displayName: \"OSE: Party: Sheet\" };\n\nconst createMockActor = async (type: string, data: object = {}) =>\n  createMockActorKey(type, data, key);\n\nexport default ({ describe, it, expect, assert, after }: QuenchMethods) => {\n  describe(\"defaultOptions()\", () => {\n    it(\"Has correctly set defaultOptions\", () => {\n      const partySheet = new OsePartySheet();\n      expect(partySheet.options.classes).contain(\"ose\");\n      expect(partySheet.options.classes).contain(\"dialog\");\n      expect(partySheet.options.classes).contain(\"party-sheet\");\n      expect(partySheet.options.template).contain(\n        \"/templates/apps/party-sheet.html\"\n      );\n      expect(partySheet.options.width).equal(280);\n      expect(partySheet.options.height).equal(400);\n      assert(partySheet.options.resizable);\n      expect(partySheet.options.dragDrop[0].dragSelector).equal(\n        \".actor-list .actor\"\n      );\n      expect(partySheet.options.dragDrop[0].dropSelector).equal(\n        \".party-members\"\n      );\n      assert(!partySheet.options.closeOnSubmit);\n    });\n  });\n\n  // @todo: How to test?\n  describe(\"init()\", () => {});\n\n  describe(\"showPartySheet(options = {})\", () => {\n    it(\"Can render party sheet\", async () => {\n      OsePartySheet.showPartySheet();\n      await waitForInput();\n      const dialogs = openWindows(\"party-sheet\");\n      expect(dialogs.length).equal(1);\n      expect(dialogs[0].options.classes).contain(\"party-sheet\");\n      await dialogs[0].close();\n      expect(openWindows(\"party-sheet\").length).equal(0);\n    });\n  });\n\n  describe(\"partySheet()\", () => {\n    it(\"Returns a partysheet\", () => {\n      const { partySheet } = OsePartySheet;\n      expect(partySheet).is.not.undefined;\n      expect(partySheet?.options.classes).contain(\"party-sheet\");\n    });\n  });\n\n  describe(\"title()\", () => {\n    it(\"Creates string in dialog window title\", async () => {\n      OsePartySheet.showPartySheet();\n      await waitForInput();\n      const dialogTitle = document.querySelector(\n        \"div.party-sheet .window-title\"\n      )?.innerHTML;\n      expect(typeof dialogTitle).equal(\"string\");\n      const dialogs = openWindows(\"party-sheet\");\n      expect(dialogs.length).equal(1);\n      await dialogs[0].close();\n      expect(openWindows(\"party-sheet\").length).equal(0);\n    });\n  });\n\n  describe(\"getData()\", () => {\n    it(\"Returns proper data\", () => {\n      const sheet = new OsePartySheet();\n      const data = sheet.getData();\n      const keys = Object.keys(data);\n      expect(keys.length).equal(4);\n      expect(keys).contain(\"partyActors\");\n      expect(keys).contain(\"config\");\n      expect(keys).contain(\"user\");\n      expect(keys).contain(\"settings\");\n    });\n  });\n\n  describe(\"_addActorToParty(actor)\", () => {\n    it(\"Monster returns undefined\", async () => {\n      const actor = await createMockActor(\"monster\");\n      const partySheet = new OsePartySheet();\n      // eslint-disable-next-line no-underscore-dangle\n      const promisedAnswer = await partySheet._addActorToParty(actor);\n      expect(promisedAnswer).is.undefined;\n      await actor.delete();\n    });\n\n    it(\"Adding a character updates the actor\", async () => {\n      const actor = await createMockActor(\"character\");\n      const partySheet = new OsePartySheet();\n      // eslint-disable-next-line no-underscore-dangle\n      const promisedAnswer = await partySheet._addActorToParty(actor);\n      expect(promisedAnswer).is.undefined;\n      assert(actor?.getFlag(game.system.id, \"party\"));\n      await actor.delete();\n    });\n  });\n\n  describe(\"_removeActorFromParty(actor)\", async () => {\n    it(\"Removing a character updates the actor flags\", async () => {\n      const actor = await createMockActor(\"character\");\n      const partySheet = new OsePartySheet();\n      // eslint-disable-next-line no-underscore-dangle\n      const promisedAddAnswer = await partySheet._addActorToParty(actor);\n      expect(promisedAddAnswer).is.undefined;\n      assert(actor?.getFlag(game.system.id, \"party\"));\n      // eslint-disable-next-line no-underscore-dangle\n      const promisedRemoveAnswer = await partySheet._removeActorFromParty(actor);\n      expect(promisedRemoveAnswer).is.undefined;\n      assert(!actor?.getFlag(game.system.id, \"party\"));\n      await actor.delete();\n    });\n  });\n\n  // @todo: Test with Cypress or mock event\n  describe(\"_onDrop(event)\", () => {});\n\n  describe(\"_onDropActor(event, data)\", () => {\n    const event = \"\";\n    it(\"Dropping a non-actor type returns nothing\", async () => {\n      const partySheet = new OsePartySheet();\n      // eslint-disable-next-line no-underscore-dangle\n      const resolvedResponse = await partySheet._onDropActor(event, {\n        type: \"not-actor\",\n      });\n      expect(resolvedResponse).is.undefined;\n    });\n\n    it(\"Dropping an actor type updates the actor\", async () => {\n      const actor = await createMockActor(\"character\");\n      const data = {\n        type: actor?.documentName,\n        uuid: actor?.uuid,\n      };\n      const partySheet = new OsePartySheet();\n      // eslint-disable-next-line no-underscore-dangle\n      const promisedAnswer = await partySheet._onDropActor(event, data);\n      await waitForInput();\n      expect(promisedAnswer).is.undefined;\n      assert(actor?.getFlag(game.system.id, \"party\"));\n      await actor?.delete();\n    });\n  });\n\n  describe(\"_recursiveAddFolder(folder)\", () => {\n    it(\"Folder of actors add actors to party\", async () => {\n      const partySheet = new OsePartySheet();\n      const folder = await Folder.create({\n        name: `Test Folder ${key}`,\n        type: \"Actor\",\n      });\n      const actor = await createMockActor(\"character\");\n      // eslint-disable-next-line no-underscore-dangle\n      await actor?.update({ folder: folder?._id });\n      expect(actor?.folder).equal(folder);\n      // eslint-disable-next-line no-underscore-dangle\n      partySheet._recursiveAddFolder(folder);\n      await waitForInput();\n      assert(actor?.getFlag(game.system.id, \"party\"));\n      await actor?.delete();\n      await folder?.delete();\n    });\n\n    it(\"Folder with sub-folders of actors add actors to party\", async () => {\n      const partySheet = new OsePartySheet();\n      const folder = await Folder.create({\n        name: `Test Folder ${key}`,\n        type: \"Actor\",\n      });\n      const subFolder = await Folder.create({\n        name: `Test Folder ${key} subfolder`,\n        type: \"Actor\",\n        folder: folder._id,\n      });\n      const actor = await createMockActor(\"character\");\n      // eslint-disable-next-line no-underscore-dangle\n      await actor?.update({ folder: subFolder?._id });\n      expect(actor?.folder).equal(subFolder);\n      // eslint-disable-next-line no-underscore-dangle\n      partySheet._recursiveAddFolder(folder);\n      await waitForInput();\n      assert(actor?.getFlag(game.system.id, \"party\"));\n      await actor?.delete();\n    });\n  });\n\n  describe(\"_onDropFolder(event, data)\", () => {\n    it(\"Dropping with documentName that is not Actor returns undefined\", async () => {\n      const mockData = {\n        documentName: \"Not-Actor\",\n      };\n      const partySheet = new OsePartySheet();\n      const response = await partySheet._onDropFolder(\"\", mockData);\n      expect(response).is.undefined;\n    });\n\n    it(\"Dropping a folder with an actor in it adds it to the party\", async () => {\n      const partySheet = new OsePartySheet();\n      const folder = await Folder.create({\n        name: `Test Folder ${key}`,\n        type: \"Actor\",\n      });\n      const actor = await createMockActor(\"character\");\n      // eslint-disable-next-line no-underscore-dangle\n      await actor?.update({ folder: folder?._id });\n      expect(actor?.folder).equal(folder);\n      // eslint-disable-next-line no-underscore-dangle\n      await partySheet._onDropFolder(\"\", folder);\n      await waitForInput();\n      assert(actor?.getFlag(game.system.id, \"party\"));\n      await actor?.delete();\n      await folder?.delete();\n    });\n  });\n\n  // @todo: Test with Cypress or Mock event\n  describe(\"_onDragStart(event)\", () => {});\n\n  // Tested in OsePartyXP\n  describe(\"_dealXP(event)\", () => {});\n\n  after(async () => {\n    cleanUpActorsByKey(key);\n    game.folders?.contents\n      ?.filter((a) => a.name?.includes(`Test Folder ${key}`))\n      ?.forEach((a) => a.delete());\n  });\n};\n","/**\n * @file Contains tests for Party XP Sheet.\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../../e2e\";\nimport { openWindows, waitForInput } from \"../../../e2e/testUtils\";\nimport OsePartyXP from \"../party-xp\";\n\nexport const key = \"ose.party-xp.sheet\";\nexport const options = { displayName: \"OSE: Party XP: Sheet\" };\n\nexport default ({ describe, it, expect, assert }: QuenchMethods) => {\n  describe(\"defaultOptions()\", () => {\n    it(\"Has correctly set defaultOptions\", () => {\n      const partyXP = new OsePartyXP();\n      expect(partyXP.options.classes).contain(\"ose\");\n      expect(partyXP.options.classes).contain(\"dialog\");\n      expect(partyXP.options.classes).contain(\"party-xp\");\n      expect(partyXP.options.template).contain(\"/templates/apps/party-xp.html\");\n      expect(partyXP.options.width).equal(300);\n      expect(partyXP.options.height).equal(\"auto\");\n      assert(!partyXP.options.resizable);\n      assert(partyXP.options.closeOnSubmit);\n    });\n  });\n\n  describe(\"title()\", () => {\n    it(\"Creates string in dialog window title\", async () => {\n      const partyXP = new OsePartyXP();\n      partyXP.render(true);\n      await waitForInput();\n      const dialogTitle = document.querySelector(\n        \"div.party-xp .window-title\"\n      )?.innerHTML;\n      expect(typeof dialogTitle).equal(\"string\");\n      const dialogs = openWindows(\"party-xp\");\n      expect(dialogs.length).equal(1);\n      await dialogs[0].close();\n      expect(openWindows(\"party-xp\").length).equal(0);\n    });\n  });\n\n  describe(\"getData()\", () => {\n    it(\"Returns proper data\", () => {\n      const sheet = new OsePartyXP();\n      const data = sheet.getData();\n      const keys = Object.keys(data);\n      expect(keys.length).equal(5);\n      expect(keys).contain(\"actors\");\n      expect(keys).contain(\"data\");\n      expect(keys).contain(\"config\");\n      expect(keys).contain(\"user\");\n      expect(keys).contain(\"settings\");\n    });\n  });\n\n  // @todo: Test with Cypress or similar, or mock event (see actor-sheet-e2e)\n  describe(\"_onDrop(event)\", () => {});\n  describe(\"_updateObject(event)\", () => {});\n  describe(\"_calculateShare()\", () => {});\n  describe(\"_dealXP(event)\", () => {});\n};\n","/**\n * @file Contains tests for behaviour helpers\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../e2e\";\nimport skipRollDialogCheck from \"../helpers-behaviour\";\n\nexport const key = \"ose.helpers.behaviour\";\nexport const options = {\n  displayName: \"OSE: Helpers: Behaviour\",\n};\n\nexport default ({ describe, it, before, after, assert }: QuenchMethods) => {\n  describe(\"skipRollDialogCheck(event)\", () => {\n    const originalSetting = game.settings.get(\n      game.system.id,\n      \"invertedCtrlBehavior\"\n    );\n\n    describe(\"invertedCtrlBehavior is set to false\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"invertedCtrlBehavior\", false);\n      });\n\n      it(\"Setting is false\", async () => {\n        const setting = await game.settings.get(\n          game.system.id,\n          \"invertedCtrlBehavior\"\n        );\n        assert(!setting);\n      });\n\n      it(\"Not holding ctrl should not skip dialog\", () => {\n        const event = new KeyboardEvent(\"keydown\", { ctrlKey: false });\n        assert(!skipRollDialogCheck(event));\n      });\n\n      it(\"Not holding meta should not skip dialog\", () => {\n        const event = new KeyboardEvent(\"keydown\", { metaKey: false });\n        assert(!skipRollDialogCheck(event));\n      });\n\n      it(\"Holding ctrl should not skip dialog\", () => {\n        const event = new KeyboardEvent(\"keydown\", { ctrlKey: true });\n        assert(skipRollDialogCheck(event));\n      });\n\n      it(\"Holding meta should not skip dialog\", () => {\n        const event = new KeyboardEvent(\"keydown\", { metaKey: true });\n        assert(skipRollDialogCheck(event));\n      });\n    });\n\n    describe(\"invertedCtrlBehavior is set to true\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"invertedCtrlBehavior\", true);\n      });\n\n      it(\"Setting is false\", async () => {\n        const setting = await game.settings.get(\n          game.system.id,\n          \"invertedCtrlBehavior\"\n        );\n        assert(setting);\n      });\n\n      it(\"Not holding ctrl should skip dialog\", () => {\n        const event = new KeyboardEvent(\"keydown\", { ctrlKey: false });\n        assert(skipRollDialogCheck(event));\n      });\n\n      it(\"Not holding meta should skip dialog\", () => {\n        const event = new KeyboardEvent(\"keydown\", { ctrlKey: false });\n        assert(skipRollDialogCheck(event));\n      });\n\n      it(\"Holding ctrl should not skip dialog\", () => {\n        const event = new KeyboardEvent(\"keydown\", { ctrlKey: true });\n        assert(!skipRollDialogCheck(event));\n      });\n\n      it(\"Holding meta should not skip dialog\", () => {\n        const event = new KeyboardEvent(\"keydown\", { metaKey: true });\n        assert(!skipRollDialogCheck(event));\n      });\n    });\n\n    after(async () => {\n      await game.settings.set(\n        game.system.id,\n        \"invertedCtrlBehavior\",\n        originalSetting\n      );\n    });\n  });\n};\n","/**\n * @file Contains tests for chat helpers\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../e2e\";\nimport {\n  addChatMessageButtons,\n  addChatMessageContextOptions,\n  functionsForTesting,\n} from \"../helpers-chat\";\n\nconst { applyChatCardDamage } = functionsForTesting;\n\nexport const key = \"ose.helpers.chat\";\nexport const options = {\n  displayName: \"OSE: Helpers: Chat\",\n};\n\nexport default ({ describe, it, before, after, expect }: QuenchMethods) => {\n  // @todo: How do we test these properly?\n  describe(\"applyChatCardDamage(roll, multiplier)\", () => {});\n  describe(\"addChatMessageContextOptions(_, options)\", () => {});\n  describe(\"addChatMessageButtons(msg. html)\", () => {});\n};\n","/**\n * @file Contains tests for dice helpers\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../e2e\";\nimport { closeDialogs, trashChat, waitForInput } from \"../../e2e/testUtils\";\nimport OseDice from \"../helpers-dice\";\n\nexport const key = \"ose.helpers.dice\";\nexport const options = {\n  displayName: \"OSE: Helpers: Dice\",\n};\n\nconst createMockRoll = (\n  target: number,\n  resultArray: Array<number | string> = [target]\n) => {\n  const results: Array<object> = [];\n  resultArray.forEach((r: number | string) => {\n    results.push({ result: r });\n  });\n  return {\n    terms: [{ results }],\n    total: target,\n  };\n};\n\nexport default ({\n  describe,\n  it,\n  after,\n  afterEach,\n  before,\n  expect,\n}: QuenchMethods) => {\n  const acSetting = game.settings.get(game.system.id, \"ascendingAC\");\n\n  before(async () => {\n    await ui.notifications?.close();\n  });\n\n  after(async () => {\n    game.settings.set(game.system.id, \"ascendingAC\", acSetting);\n    await ui.notifications?.render(true);\n  });\n\n  describe(\"sendRoll(parts, data, title, flavor, speaker, form, chatMessage)\", () => {\n    before(async () => {\n      await trashChat();\n    });\n\n    it(\"Can roll with single part\", async () => {\n      const dice = await OseDice.sendRoll({\n        parts: [\"1d10\"],\n        data: { roll: { blindroll: false } },\n      });\n      await waitForInput();\n      await waitForInput();\n      const chatCard = document.querySelector(\n        \".chat-message .dice-formula\"\n      )?.innerHTML;\n      expect(Object.keys(dice)).contain(\"_evaluated\");\n      expect(dice._evaluated).equal(true);\n      expect(Object.keys(dice)).contain(\"_formula\");\n      expect(dice._formula).equal(\"1d10\");\n      expect(chatCard).equal(\"1d10\");\n    });\n\n    it(\"Can roll with multiple parts\", async () => {\n      const dice = await OseDice.sendRoll({\n        parts: [\"1d10\", \"1d20\"],\n        data: { roll: { blindroll: false } },\n      });\n      await waitForInput();\n      await waitForInput();\n      const chatCard = document.querySelector(\n        \".chat-message .dice-formula\"\n      )?.innerHTML;\n      expect(Object.keys(dice)).contain(\"_evaluated\");\n      expect(dice._evaluated).equal(true);\n      expect(Object.keys(dice)).contain(\"_formula\");\n      expect(dice._formula).equal(\"1d10 + 1d20\");\n      expect(chatCard).equal(\"1d10 + 1d20\");\n    });\n\n    afterEach(async () => {\n      await trashChat();\n    });\n  });\n\n  describe(\"digestResult(data, roll)\", () => {\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const createMockData = (\n      type: string,\n      target: number,\n      thac0: number = 0\n    ) => ({\n      roll: { type, target, thac0 },\n    });\n    describe(\"result type\", () => {\n      const data = createMockData(\"result\", 10);\n      it(\"Successful roll hitting target\", () => {\n        const roll = createMockRoll(10);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Unsuccessful roll under\", () => {\n        const roll = createMockRoll(9);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(true);\n      });\n\n      it(\"Unsuccessful roll over\", () => {\n        const roll = createMockRoll(11);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(true);\n      });\n    });\n\n    describe(\"above type\", () => {\n      const data = createMockData(\"above\", 10);\n      it(\"Successful roll hitting target\", () => {\n        const roll = createMockRoll(10);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Unsuccessful roll under\", () => {\n        const roll = createMockRoll(9);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(true);\n      });\n\n      it(\"Successful roll over\", () => {\n        const roll = createMockRoll(11);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(false);\n      });\n    });\n\n    describe(\"below type\", () => {\n      const data = createMockData(\"below\", 10);\n      it(\"Successful roll hitting target\", () => {\n        const roll = createMockRoll(10);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Successful roll under\", () => {\n        const roll = createMockRoll(9);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Unsuccessful roll over\", () => {\n        const roll = createMockRoll(11);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(true);\n      });\n    });\n\n    describe(\"check type\", () => {\n      const data = createMockData(\"check\", 10);\n      it(\"Successful roll on a nat 1\", () => {\n        const roll = createMockRoll(1);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Unsuccessful roll on a nat 20\", () => {\n        const dataNat20 = createMockData(\"check\", 20);\n        const roll = createMockRoll(20);\n        expect(OseDice.digestResult(dataNat20, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(dataNat20, roll).isFailure).equal(true);\n      });\n\n      it(\"Successful roll hitting target\", () => {\n        const roll = createMockRoll(10);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Successful roll under\", () => {\n        const roll = createMockRoll(9);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Unsuccessful roll over\", () => {\n        const roll = createMockRoll(11);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).isFailure).equal(true);\n      });\n    });\n\n    describe(\"table type\", () => {\n      const data = {\n        roll: {\n          type: \"table\",\n          target: 10,\n          table: {\n            9: \"Success\",\n            10: \"Failure\",\n          },\n        },\n      };\n\n      it(\"Successful roll hitting target\", () => {\n        const roll = createMockRoll(9);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).details).equal(\"Success\");\n      });\n\n      it(\"Successful roll under\", () => {\n        const roll = createMockRoll(10);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).details).equal(\"Failure\");\n      });\n    });\n\n    describe(\"unknown type\", () => {\n      const data = createMockData(\"unknown\", 10);\n      it(\"Returns default result\", () => {\n        const roll = createMockRoll(4);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestResult(data, roll).target).equal(10);\n        expect(OseDice.digestResult(data, roll).total).equal(4);\n      });\n    });\n  });\n\n  describe(\"attackIsSuccess(roll, target, bonus)\", () => {\n    describe(\"Ascending AC\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"ascendingAC\", true);\n      });\n\n      it(\"Natural 1 always fails\", () => {\n        const rollTargetOne = createMockRoll(1, [1]);\n        expect(OseDice.attackIsSuccess(rollTargetOne, 100, 0)).equal(false);\n        const rollTargetTwenty = createMockRoll(20, [1]);\n        expect(OseDice.attackIsSuccess(rollTargetTwenty, 100, 0)).equal(false);\n      });\n\n      it(\"Natural 20 always succeeds\", () => {\n        const rollTargetOne = createMockRoll(1, [20]);\n        expect(OseDice.attackIsSuccess(rollTargetOne, 0, 100)).equal(true);\n        const rollTargetTwenty = createMockRoll(20, [20]);\n        expect(OseDice.attackIsSuccess(rollTargetTwenty, 0, 100)).equal(true);\n      });\n\n      it(\"Roll + bonus equal target is successful\", () => {\n        const roll = createMockRoll(10);\n        const target = 20;\n        const bonus = 10;\n        expect(OseDice.attackIsSuccess(roll, target, bonus)).equal(true);\n      });\n\n      it(\"Roll + bonus above target is successful\", () => {\n        const roll = createMockRoll(10);\n        const target = 19;\n        const bonus = 10;\n        expect(OseDice.attackIsSuccess(roll, target, bonus)).equal(true);\n      });\n\n      it(\"Roll + bnous under target is unsuccessful\", () => {\n        const roll = createMockRoll(10);\n        const target = 21;\n        const bonus = 10;\n        expect(OseDice.attackIsSuccess(roll, target, bonus)).equal(false);\n      });\n    });\n\n    describe(\"Descending AC\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"ascendingAC\", false);\n      });\n\n      it(\"Natural 1 always fails\", () => {\n        const rollTargetOne = createMockRoll(1, [1]);\n        expect(OseDice.attackIsSuccess(rollTargetOne, 100, 0)).equal(false);\n        const rollTargetTwenty = createMockRoll(20, [1]);\n        expect(OseDice.attackIsSuccess(rollTargetTwenty, 100, 0)).equal(false);\n      });\n\n      it(\"Natural 20 always succeeds\", () => {\n        const rollTargetOne = createMockRoll(1, [20]);\n        expect(OseDice.attackIsSuccess(rollTargetOne, 0, 100)).equal(true);\n        const rollTargetTwenty = createMockRoll(20, [20]);\n        expect(OseDice.attackIsSuccess(rollTargetTwenty, 0, 100)).equal(true);\n      });\n\n      it(\"Roll + ac equal thac0 is successful\", () => {\n        const roll = createMockRoll(10);\n        const thac0 = 20;\n        const ac = 10;\n        expect(OseDice.attackIsSuccess(roll, thac0, ac)).equal(true);\n      });\n\n      it(\"Roll + ac above thac0 is successful\", () => {\n        const roll = createMockRoll(10);\n        const thac0 = 19;\n        const ac = 10;\n        expect(OseDice.attackIsSuccess(roll, thac0, ac)).equal(true);\n      });\n\n      it(\"Roll + ac under thac0 is unsuccessful\", () => {\n        const roll = createMockRoll(10);\n        const thac0 = 21;\n        const ac = 10;\n        expect(OseDice.attackIsSuccess(roll, thac0, ac)).equal(false);\n      });\n    });\n  });\n\n  describe(\"digestAttackResult(data, roll)\", () => {\n    const data = {\n      roll: {\n        thac0: 15,\n        target: {\n          actor: {\n            system: {\n              ac: { value: 0 },\n              aac: { value: 9 },\n            },\n          },\n        },\n      },\n    };\n\n    describe(\"Ascending AC\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"ascendingAC\", true);\n      });\n\n      it(\"Natural 1 terms is unsuccessful\", async () => {\n        expect(game.settings.get(game.system.id, \"ascendingAC\")).equal(true);\n        const rollTargetOne = createMockRoll(1, [1]);\n        expect(OseDice.digestAttackResult(data, rollTargetOne).isSuccess).equal(\n          false\n        );\n        expect(OseDice.digestAttackResult(data, rollTargetOne).isFailure).equal(\n          true\n        );\n        const rollTargetTwenty = createMockRoll(20, [1]);\n        expect(\n          OseDice.digestAttackResult(data, rollTargetTwenty).isSuccess\n        ).equal(false);\n        expect(\n          OseDice.digestAttackResult(data, rollTargetTwenty).isFailure\n        ).equal(true);\n      });\n\n      it(\"Attack rolls with a modified result of 1 are allowed to succeeed if hits target AC. Issue#340\", () => {\n        const attackBonus = -1;\n        const targetData = {\n          roll: {\n            thac0: 19,\n            target: {\n              actor: {\n                system: {\n                  ac: { value: 0 },\n                  aac: { value: 1 },\n                },\n              },\n            },\n          },\n        };\n\n        const roll = createMockRoll(1, [2, attackBonus]);\n        expect(OseDice.digestAttackResult(targetData, roll).isSuccess).equal(\n          true\n        );\n        expect(OseDice.digestAttackResult(targetData, roll).isFailure).equal(\n          false\n        );\n      });\n\n      it(\"Lower than target AC is unsuccessful\", () => {\n        const attackBonus = 19 - data.roll.thac0;\n        const roll = createMockRoll(\n          data.roll.target.actor.system.aac.value - attackBonus - 1\n        );\n        expect(OseDice.digestAttackResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestAttackResult(data, roll).isFailure).equal(true);\n      });\n\n      it(\"Equal than target AC is successful\", () => {\n        const attackBonus = 19 - data.roll.thac0;\n        const roll = createMockRoll(\n          data.roll.target.actor.system.aac.value - attackBonus\n        );\n        expect(OseDice.digestAttackResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestAttackResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Higher than target AC is successful\", () => {\n        const attackBonus = 19 - data.roll.thac0;\n        const roll = createMockRoll(\n          data.roll.target.actor.system.aac.value - attackBonus + 1\n        );\n        expect(OseDice.digestAttackResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestAttackResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Attack rolls with a modified result of 20 are allowed to fail if doesn't hit target AC. Issue#340\", () => {\n        const attackBonus = 1;\n        const targetData = {\n          roll: {\n            thac0: 19,\n            target: {\n              actor: {\n                system: {\n                  ac: { value: 0 },\n                  aac: { value: 21 },\n                },\n              },\n            },\n          },\n        };\n\n        const roll = createMockRoll(20, [19, attackBonus]);\n        expect(OseDice.digestAttackResult(targetData, roll).isSuccess).equal(\n          false\n        );\n        expect(OseDice.digestAttackResult(targetData, roll).isFailure).equal(\n          true\n        );\n      });\n\n      it(\"Natural 20 is successful\", () => {\n        const rollTargetOne = createMockRoll(1, [20]);\n        expect(OseDice.digestAttackResult(data, rollTargetOne).isSuccess).equal(\n          true\n        );\n        expect(OseDice.digestAttackResult(data, rollTargetOne).isFailure).equal(\n          false\n        );\n        const rollTargetTwenty = createMockRoll(20, [20]);\n        expect(\n          OseDice.digestAttackResult(data, rollTargetTwenty).isSuccess\n        ).equal(true);\n        expect(\n          OseDice.digestAttackResult(data, rollTargetTwenty).isFailure\n        ).equal(false);\n      });\n    });\n\n    describe(\"Descending AC, ac=0\", () => {\n      before(async () => {\n        await game.settings.set(game.system.id, \"ascendingAC\", false);\n      });\n\n      it(\"Natural 1 terms is unsuccessful\", async () => {\n        expect(game.settings.get(game.system.id, \"ascendingAC\")).equal(false);\n        const rollTargetOne = createMockRoll(1, [1]);\n        expect(OseDice.digestAttackResult(data, rollTargetOne).isSuccess).equal(\n          false\n        );\n        expect(OseDice.digestAttackResult(data, rollTargetOne).isFailure).equal(\n          true\n        );\n        const rollTargetTwenty = createMockRoll(20, [1]);\n        expect(\n          OseDice.digestAttackResult(data, rollTargetTwenty).isSuccess\n        ).equal(false);\n        expect(\n          OseDice.digestAttackResult(data, rollTargetTwenty).isFailure\n        ).equal(true);\n      });\n\n      it(\"Lower than thac0 is unsuccessful\", () => {\n        const roll = createMockRoll(data.roll.thac0 - 1);\n        expect(OseDice.digestAttackResult(data, roll).isSuccess).equal(false);\n        expect(OseDice.digestAttackResult(data, roll).isFailure).equal(true);\n      });\n\n      it(\"Equal to thac0 is successful\", () => {\n        const roll = createMockRoll(data.roll.thac0);\n        expect(OseDice.digestAttackResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestAttackResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Higher than thac0 is successful\", () => {\n        const roll = createMockRoll(data.roll.thac0 + 1);\n        expect(OseDice.digestAttackResult(data, roll).isSuccess).equal(true);\n        expect(OseDice.digestAttackResult(data, roll).isFailure).equal(false);\n      });\n\n      it(\"Natural 20 is successful\", () => {\n        const rollTargetOne = createMockRoll(1, [20]);\n        expect(OseDice.digestAttackResult(data, rollTargetOne).isSuccess).equal(\n          true\n        );\n        expect(OseDice.digestAttackResult(data, rollTargetOne).isFailure).equal(\n          false\n        );\n        const rollTargetTwenty = createMockRoll(20, [20]);\n        expect(\n          OseDice.digestAttackResult(data, rollTargetTwenty).isSuccess\n        ).equal(true);\n        expect(\n          OseDice.digestAttackResult(data, rollTargetTwenty).isFailure\n        ).equal(false);\n      });\n    });\n  });\n\n  describe(\"sendAttackRoll(parts, data, flags, title, flavor, speaker, form)\", () => {\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const createMockAttackData = () => ({\n      parts: [\"1d20\", \"0\", \"0\", \"0\"],\n      data: {\n        roll: {\n          type: \"melee\",\n          dmg: [\"1d6\"],\n          thac0: 15,\n          target: {\n            actor: { system: { ac: { value: 0 }, aac: { value: 9 } } },\n          },\n        },\n      },\n    });\n\n    before(async () => {\n      await trashChat();\n      await game.settings.set(game.system.id, \"ascendingAC\", true);\n    });\n\n    it(\"Missing dmg roll shows notification\", async () => {\n      ui.notifications?.close();\n      const rollData = createMockAttackData();\n      rollData.data.roll.dmg = [];\n      await OseDice.sendAttackRoll(rollData);\n      await waitForInput();\n      const notification = ui.notifications?.queue.pop();\n      expect(ui.notifications?.queue.length).equal(0);\n      expect(notification?.message).equal(\n        \"Attack has no damage dice terms; be sure to set the attack's damage\"\n      );\n    });\n\n    it(\"Can roll with single part and single dmg die\", async () => {\n      const rollData = createMockAttackData();\n      await OseDice.sendAttackRoll(rollData);\n      await waitForInput();\n      await waitForInput();\n      await waitForInput();\n      await waitForInput();\n      const attackDiceResult =\n        document.querySelector(\".dice-formula\")?.innerHTML;\n      expect(attackDiceResult).equal(\"1d20 + 0 + 0 + 0\");\n      const damageDiceResult = document.querySelector(\n        \".damage-roll .dice-formula\"\n      )?.innerHTML;\n      expect(damageDiceResult).equal(\"1d6\");\n    });\n    afterEach(async () => {\n      await trashChat();\n    });\n  });\n\n  describe(\"RollSave(parts, data, skipDialog, speaker, flavor, title, chatMessage)\", () => {\n    describe(\"Skipping dialog\", () => {\n      const skipDialog = true;\n      it(\"produces a roll chat message\", async () => {\n        await OseDice.RollSave({\n          parts: [\"1d10\"],\n          skipDialog,\n          data: { roll: { blindroll: false } },\n        });\n        await waitForInput();\n        expect(game.messages.size).equal(1);\n        expect(document.querySelector(\".roll-result\")).not.undefined;\n      });\n    });\n\n    describe(\"Not skipping dialog\", () => {\n      it(\"produces a dialog\", async () => {\n        OseDice.RollSave({\n          parts: [\"1d10\"],\n          data: { roll: { blindroll: false } },\n        });\n        await waitForInput();\n        const dialog = document.querySelector(\".dialog\");\n        expect(dialog?.querySelector(\".ok\")).not.null;\n        expect(dialog?.querySelector(\".magic\")).not.null;\n        expect(dialog?.querySelector(\".cancel\")).not.null;\n        await closeDialogs();\n      });\n    });\n\n    afterEach(async () => {\n      await trashChat();\n      await closeDialogs();\n    });\n  });\n\n  describe(\"Roll(parts, data, skipDialog, speaker, flavor, title, chatMessage, flags)\", () => {\n    describe(\"Skipping dialog\", () => {\n      const skipDialog = true;\n      it(\"produces a roll chat message\", async () => {\n        await OseDice.Roll({\n          parts: [\"1d10\"],\n          skipDialog,\n          data: { roll: { blindroll: false } },\n        });\n        await waitForInput();\n        expect(game.messages.size).equal(1);\n        expect(document.querySelector(\".roll-result\")).not.undefined;\n      });\n    });\n\n    describe(\"Not skipping dialog\", () => {\n      it(\"produces a dialog\", async () => {\n        OseDice.Roll({\n          parts: [\"1d10\"],\n          data: { roll: { blindroll: false } },\n        });\n        await waitForInput();\n        const dialog = document.querySelector(\".dialog\");\n        expect(dialog?.querySelector(\".ok\")).not.null;\n        expect(dialog?.querySelector(\".magic\")).is.null;\n        expect(dialog?.querySelector(\".cancel\")).not.null;\n        await closeDialogs();\n      });\n    });\n\n    afterEach(async () => {\n      await trashChat();\n      await closeDialogs();\n      await waitForInput();\n    });\n  });\n};\n","/**\n * @file Contains tests for handlebars helpers\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../e2e\";\n\nexport const key = \"ose.helpers.handlebars\";\nexport const options = {\n  displayName: \"OSE: Helpers: Handlebars\",\n};\n\nexport default ({ describe, it, expect }: QuenchMethods) => {\n  describe(\"registerHelpers()\", () => {\n    describe(\"eq helper\", () => {\n      const helper = \"eq\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        expect(Handlebars.helpers.eq(1, 1)).equal(true);\n        expect(Handlebars.helpers.eq(\"test\", \"test\")).equal(true);\n        expect(Handlebars.helpers.eq(1, 2)).equal(false);\n        expect(Handlebars.helpers.eq(\"test\", 1)).equal(false);\n        expect(Handlebars.helpers.eq([], [])).equal(false);\n      });\n    });\n\n    describe(\"mod helper\", () => {\n      const helper = \"mod\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        expect(Handlebars.helpers.mod(0)).equal(\"0\");\n        expect(Handlebars.helpers.mod(1)).equal(\"+1\");\n        expect(Handlebars.helpers.mod(-1)).equal(\"-1\");\n        expect(Handlebars.helpers.mod(\"1\")).equal(\"+1\");\n        expect(Handlebars.helpers.mod(\"-1\")).equal(\"-1\");\n        expect(Handlebars.helpers.mod(\"a\")).equal(\"0\");\n      });\n    });\n\n    describe(\"add helper\", () => {\n      const helper = \"add\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        expect(Handlebars.helpers.add(1, 2)).equal(3);\n        expect(Handlebars.helpers.add(1, -2)).equal(-1);\n        expect(Handlebars.helpers.add(\"1\", \"3\")).equal(4);\n        expect(Handlebars.helpers.add(\"1\", \"-3\")).equal(-2);\n      });\n    });\n\n    describe(\"subtract helper\", () => {\n      const helper = \"subtract\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        expect(Handlebars.helpers.subtract(1, 2)).equal(-1);\n        expect(Handlebars.helpers.subtract(1, -2)).equal(3);\n        expect(Handlebars.helpers.subtract(\"1\", \"3\")).equal(-2);\n        expect(Handlebars.helpers.subtract(\"1\", \"-3\")).equal(4);\n      });\n    });\n\n    describe(\"divide helper\", () => {\n      const helper = \"divide\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        expect(Handlebars.helpers.divide(1, 2)).equal(0);\n        expect(Handlebars.helpers.divide(1, -2)).equal(-1);\n        expect(Handlebars.helpers.divide(10, 3)).equal(3);\n        expect(Handlebars.helpers.divide(\"10\", \"3\")).equal(3);\n        expect(Handlebars.helpers.divide(\"10\", \"-3\")).equal(-4);\n      });\n    });\n\n    describe(\"mult helper\", () => {\n      const helper = \"mult\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        expect(Handlebars.helpers.mult(1, 2)).equal(2);\n        expect(Handlebars.helpers.mult(1, -2)).equal(-2);\n        expect(Handlebars.helpers.mult(10, 3)).equal(30);\n        expect(Handlebars.helpers.mult(\"10\", \"3\")).equal(30);\n        expect(Handlebars.helpers.mult(\"10\", \"-3\")).equal(-30);\n        expect(Handlebars.helpers.mult(0.1, 2)).equal(0.2);\n        expect(Handlebars.helpers.mult(0.01, 1)).equal(0.01);\n        expect(Handlebars.helpers.mult(0.001, 1)).equal(0);\n      });\n    });\n\n    describe(\"roundWeight helper\", () => {\n      const helper = \"roundWeight\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        expect(Handlebars.helpers.roundWeight(10.1)).equal(0);\n        expect(Handlebars.helpers.roundWeight(100.1)).equal(0.1);\n        expect(Handlebars.helpers.roundWeight(1000.1)).equal(1);\n      });\n    });\n\n    describe(\"getTagIcon helper\", () => {\n      const helper = \"getTagIcon\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      describe(\"is functional\", () => {\n        const tags = Object.keys(CONFIG.OSE.tags);\n        tags.forEach((tag) => {\n          it(`for ${tag} tag`, async () => {\n            expect(Handlebars.helpers.getTagIcon(CONFIG.OSE.tags[tag])).equal(\n              CONFIG.OSE.tag_images[tag]\n            );\n          });\n        });\n      });\n    });\n\n    describe(\"counter helper\", () => {\n      const helper = \"counter\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        expect(Handlebars.helpers.counter(true, 12, 10)).equal(100);\n        expect(Handlebars.helpers.counter(true, -10, 10)).equal(0);\n        expect(Handlebars.helpers.counter(true, 3, 10)).equal(30);\n        expect(Handlebars.helpers.counter(true, 33, 100)).equal(33);\n        expect(Handlebars.helpers.counter(true, 100, 400)).equal(25);\n        expect(Handlebars.helpers.counter(false, 12, 10)).equal(0);\n        expect(Handlebars.helpers.counter(false, -10, 10)).equal(100);\n        expect(Handlebars.helpers.counter(false, 3, 10)).equal(70);\n        expect(Handlebars.helpers.counter(false, 33, 100)).equal(67);\n        expect(Handlebars.helpers.counter(false, 100, 400)).equal(75);\n      });\n    });\n\n    describe(\"times helper\", () => {\n      const helper = \"times\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        const block = {\n          fn: (i) => i,\n        };\n        expect(Handlebars.helpers.times(2, block)).equal(\"01\");\n        expect(Handlebars.helpers.times(5, block)).equal(\"01234\");\n      });\n    });\n\n    describe(\"path helper\", () => {\n      const helper = \"path\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        expect(Handlebars.helpers.path(\"/test\")).equal(\n          `${CONFIG.OSE.systemPath()}/test`\n        );\n      });\n    });\n\n    describe(\"asset helper\", () => {\n      const helper = \"asset\";\n      it(\"is registered\", () => {\n        expect(Object.keys(Handlebars.helpers)).contain(helper);\n      });\n\n      it(\"is functional\", () => {\n        expect(Handlebars.helpers.asset(\"/test\")).equal(\n          `${CONFIG.OSE.assetsPath}/test`\n        );\n      });\n    });\n  });\n};\n","/**\n * @file Contains tests for Quench for testing macros\n */\n// eslint-disable-next-line import/no-cycle\nimport { QuenchMethods } from \"../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  cleanUpMacros,\n  cleanUpScenes,\n  cleanUpWorldItems,\n  closeDialogs,\n  createActorTestItem,\n  createMockActorKey,\n  createMockMacro,\n  createMockScene,\n  createWorldTestItem,\n  openDialogs,\n  waitForInput,\n} from \"../../e2e/testUtils\";\nimport { createOseMacro, rollItemMacro } from \"../helpers-macros\";\n\nexport const key = \"ose.helpers.macro\";\nexport const options = { displayName: \"OSE: Helpers: Macro\" };\n\n/* MOCKING HELPERS */\nconst createMockActor = async (type: string, data: object = {}) =>\n  createMockActorKey(type, data, key);\n\n/* CLEAN UP HELPERS */\nconst cleanUpActors = () => cleanUpActorsByKey(key);\n\nexport default ({\n  describe,\n  it,\n  expect,\n  before,\n  after,\n  afterEach,\n}: QuenchMethods) => {\n  before(async () => {\n    game?.scenes?.active?.update({ active: false });\n    await ui.notifications?.close();\n  });\n\n  afterEach(async () => {\n    cleanUpMacros();\n    cleanUpActors();\n    cleanUpWorldItems();\n    cleanUpScenes();\n  });\n\n  after(async () => {\n    closeDialogs();\n    cleanUpMacros();\n    cleanUpActors();\n    cleanUpWorldItems();\n    cleanUpScenes();\n    await ui.notifications?.render(true);\n  });\n\n  describe(\"createOseMacro(data, slot)\", () => {\n    it(\"Can create macro\", async () => {\n      const macro = await createMockMacro();\n      expect(game.macros?.contents.find((m) => m.uuid === macro?.uuid)).not\n        .undefined;\n    });\n\n    it(\"Can drag Macro to hotbar\", async () => {\n      const macro = await createMockMacro();\n      const data = { type: \"Macro\", uuid: macro?.uuid };\n      const macroSlot = 9;\n\n      await createOseMacro(data, macroSlot);\n      const hotbar = game.user?.getHotbarMacros(1);\n\n      expect(hotbar[macroSlot - 1].macro).equal(macro);\n    });\n\n    it(\"Dragging Actor to hotbar send notification\", async () => {\n      const actor = await createMockActor(\"character\");\n      const data = { type: actor?.type, uuid: actor?.uuid };\n      const macroSlot = 9;\n      expect(ui.notifications?.queue.length).equal(0);\n      await createOseMacro(data, macroSlot);\n      expect(ui.notifications?.queue.length).equal(1);\n      expect(ui.notifications?.queue.pop()?.message).equal(\n        game.i18n.localize(\"OSE.warn.macrosNotAnItem\")\n      );\n      expect(ui.notifications?.queue.length).equal(0);\n      await actor?.delete();\n    });\n\n    it(\"Dragging World Item to hotbar send notification\", async () => {\n      const actor = await createMockActor(\"character\");\n      const worldItem = await createWorldTestItem(\"weapon\");\n      const data = { type: \"Item\", uuid: worldItem?.uuid };\n      const macroSlot = 9;\n      expect(ui.notifications?.queue.length).equal(0);\n      await createOseMacro(data, macroSlot);\n      expect(ui.notifications?.queue.length).equal(1);\n      expect(ui.notifications?.queue.pop()?.message).equal(\n        game.i18n.localize(\"OSE.warn.macrosOnlyForOwnedItems\")\n      );\n      expect(ui.notifications?.queue.length).equal(0);\n      await actor?.delete();\n      await worldItem?.delete();\n    });\n\n    describe(\"Dragging all item types creates macros\", () => {\n      const itemTypes = new Set([\n        \"spell\",\n        \"ability\",\n        \"armor\",\n        \"weapon\",\n        \"item\",\n        \"container\",\n      ]);\n      itemTypes.forEach((type) => {\n        it(`Dragging Actor ${type.capitalize()} to hotbar craetes macro`, async () => {\n          const actor = await createMockActor(\"character\");\n          await createActorTestItem(actor, type);\n          const item = actor?.items.contents[0];\n          const data = {\n            type: \"Item\",\n            uuid: item?.uuid,\n            item: {\n              name: item?.name,\n              img: \"\",\n            },\n          };\n          const macroSlot = 9;\n\n          await createOseMacro(data, macroSlot);\n          const macro = game.user?.getHotbarMacros()[macroSlot - 1];\n          expect(macro?.macro?.command).equal(\n            `game.ose.rollItemMacro(\"New Actor Test ${type.capitalize()}\");`\n          );\n          await actor?.delete();\n        });\n      });\n    });\n  });\n\n  describe(\"rollItemMacro(itemName)\", () => {\n    it(\"No scene creates warning\", async () => {\n      const type = \"weapon\";\n      const actor = await createMockActor(\"character\");\n      await createActorTestItem(actor, type);\n      await game.user?.update({ character: actor?.id });\n      expect(ChatMessage.getSpeaker().scene).is.null;\n      expect(ChatMessage.getSpeaker().actor).is.not.null;\n      expect(ui.notifications?.queue.length).equal(0);\n      await rollItemMacro(`New Actor Test ${type.capitalize()}`);\n      expect(ui.notifications?.queue.length).equal(1);\n      expect(ui.notifications?.queue.pop()?.message).equal(\n        game.i18n.localize(\"OSE.warn.macrosNoTokenOwnedInScene\")\n      );\n      expect(ui.notifications?.queue.length).equal(0);\n      await actor?.delete();\n    });\n\n    it(\"No assigned actor creates warning\", async () => {\n      const type = \"weapon\";\n      const actor = await createMockActor(\"character\");\n      const scene = await createMockScene();\n      expect(scene?.tokenVision).equal(true);\n      await createActorTestItem(actor, type);\n      await game.user?.update({ character: null });\n      expect(ChatMessage.getSpeaker().scene).is.not.null;\n      expect(ChatMessage.getSpeaker().actor).is.null;\n      expect(ui.notifications?.queue.length).equal(0);\n      await rollItemMacro(`New Actor Test ${type.capitalize()}`);\n      expect(ui.notifications?.queue.length).equal(1);\n      expect(ui.notifications?.queue.pop()?.message).equal(\n        game.i18n.localize(\"OSE.warn.macrosNoTokenOwnedInScene\")\n      );\n      expect(ui.notifications?.queue.length).equal(0);\n      await actor?.delete();\n      await scene?.delete();\n    });\n\n    it(\"Scene & assigned actor creates roll\", async () => {\n      const type = \"weapon\";\n      const actor = await createMockActor(\"character\");\n      const scene = await createMockScene();\n      expect(scene?.tokenVision).equal(true);\n      await createActorTestItem(actor, type);\n      await game.user?.update({ character: actor?.id });\n      expect(ChatMessage.getSpeaker().scene).is.not.null;\n      expect(ChatMessage.getSpeaker().actor).is.not.null;\n      await rollItemMacro(`New Actor Test ${type.capitalize()}`);\n      await waitForInput();\n      expect(openDialogs().length).equal(1);\n      await closeDialogs();\n      await actor?.delete();\n      await scene?.delete();\n    });\n\n    it(\"Duplicate item creates warning but also craetes rolls\", async () => {\n      const type = \"weapon\";\n      const actor = await createMockActor(\"character\");\n      const scene = await createMockScene();\n      expect(scene?.tokenVision).equal(true);\n      await createActorTestItem(actor, type);\n      await createActorTestItem(actor, type);\n      await game.user?.update({ character: actor?.id });\n      expect(ui.notifications?.queue.length).equal(0);\n      await rollItemMacro(`New Actor Test ${type.capitalize()}`);\n      await waitForInput();\n      expect(ui.notifications?.queue.length).equal(1);\n      expect(ui.notifications?.queue.pop()?.message).equal(\n        game.i18n.format(\"OSE.warn.moreThanOneItemWithName\", {\n          actorName: actor?.name,\n          itemName: `New Actor Test ${type.capitalize()}`,\n        })\n      );\n      expect(ui.notifications?.queue.length).equal(0);\n      await waitForInput();\n      expect(openDialogs().length).equal(1);\n      await closeDialogs();\n      await actor?.delete();\n      await scene?.delete();\n    });\n\n    it(\"Missing item creates warning\", async () => {\n      const type = \"weapon\";\n      const actor = await createMockActor(\"character\");\n      const scene = await createMockScene();\n      expect(scene?.tokenVision).equal(true);\n      await createActorTestItem(actor, type);\n      await game.user?.update({ character: actor?.id });\n      await actor?.items\n        .getName(`New Actor Test ${type.capitalize()}`)\n        ?.delete();\n      expect(ui.notifications?.queue.length).equal(0);\n      await rollItemMacro(`New Actor Test ${type.capitalize()}`);\n      await waitForInput();\n      expect(ui.notifications?.queue.length).equal(1);\n      const error = ui.notifications?.queue.pop();\n      expect(ui.notifications?.queue.length).equal(0);\n      expect(error?.type).equal(\"error\");\n      expect(error?.message).equal(\n        game.i18n.format(\"OSE.error.noItemWithName\", {\n          actorName: actor?.name,\n          itemName: `New Actor Test ${type.capitalize()}`,\n        })\n      );\n      await actor?.delete();\n      await scene?.delete();\n    });\n  });\n};\n","/**\n * @file Contains tests for party helpers\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../e2e\";\nimport {\n  cleanUpActorsByKey,\n  closeDialogs,\n  createMockActorKey,\n  openDialogs,\n  waitForInput,\n} from \"../../e2e/testUtils\";\nimport { update } from \"../helpers-party\";\nimport OsePartySheet from \"../party/party-sheet\";\n\nexport const key = \"ose.helpers.party\";\nexport const options = {\n  displayName: \"OSE: Helpers: Party\",\n};\n\n/* MOCKING HELPERS */\nconst createMockActor = async (type: string, data: object = {}) =>\n  createMockActorKey(type, data, key);\n\n/* CLEAN UP HELPERS */\nconst cleanUpActors = () => cleanUpActorsByKey(key);\n\nexport default ({ describe, it, expect, after }: QuenchMethods) => {\n  after(() => {\n    cleanUpActors();\n  });\n\n  // @todo: How to test?\n  describe(\"addControl(object, html)\", () => {});\n\n  describe(\"update(actor)\", () => {\n    it(\"Doesn't render a partysheet when not in party\", async () => {\n      const actor = await createMockActor(\"character\");\n      update(actor);\n      expect(openDialogs().length).equal(0);\n      await actor?.delete();\n    });\n\n    it(\"Opens a partysheet when in party\", async () => {\n      const actor = await createMockActor(\"character\");\n      actor?.setFlag(game.system.id, \"party\", true);\n      update(actor);\n      await waitForInput();\n      await OsePartySheet?.partySheet?.render(true);\n      await waitForInput();\n      const partyMember = document\n        .querySelector(\".party-members .actor\")\n        ?.getAttribute(\"data-actor-id\");\n      expect(partyMember).equal(actor?.id);\n      expect(openDialogs().length).equal(1);\n      await closeDialogs();\n      actor?.delete();\n      expect(openDialogs().length).equal(1);\n    });\n  });\n};\n","/**\n * @file Contains tests for treasure helpers\n */\n// eslint-disable-next-line prettier/prettier, import/no-cycle\nimport { QuenchMethods } from \"../../e2e\";\nimport { trashChat, waitForInput } from \"../../e2e/testUtils\";\nimport { functionsForTesting } from \"../helpers-treasure\";\n\nconst { drawTreasure, rollTreasure } = functionsForTesting;\n\nexport const key = \"ose.helpers.treasure\";\nexport const options = {\n  displayName: \"OSE: Helpers: Treasure\",\n};\n\nconst createMockTable = async () =>\n  RollTable.create({\n    name: `Mock Table ${key}`,\n  });\n\nconst createMockTreasureTable = async () => {\n  const table: RollTable = (await createMockTable()) as RollTable;\n  await table.update({ name: `Mock Treasure Table ${key}` });\n  await table.setFlag(game.system.id, \"treasure\", true);\n  return table;\n};\n\nconst cleanUpTables = async () => {\n  const tables = game.tables?.filter(\n    (t) =>\n      t.name === `Mock Table ${key}` || t.name === `Mock Treasure Table ${key}`\n  );\n  tables?.forEach((t) => t.delete());\n};\n\nexport default ({ describe, it, expect, after }: QuenchMethods) => {\n  // @todo: how to test?\n  describe(\"augmentTable(table, html)\", () => {});\n\n  describe(\"drawTreasure(table, data)\", () => {\n    it(\"Can create table\", async () => {\n      const table = await createMockTreasureTable();\n      await table.createEmbeddedDocuments(\"TableResult\", [\n        {\n          text: \"50% Chance\",\n          range: [1, 1],\n          weight: 50,\n        },\n      ]);\n      expect(table.results.size).equal(1);\n      await table.delete();\n    });\n\n    it(\"Draws successfully from a treasure table\", async () => {\n      const table = await createMockTreasureTable();\n      await table.createEmbeddedDocuments(\"TableResult\", [\n        {\n          text: \"100% Chance\",\n          range: [1, 1],\n          weight: 100,\n        },\n      ]);\n      const data = await drawTreasure(table, {});\n      await waitForInput();\n      expect(data.treasure).is.not.undefined;\n      const resultKey = Object.keys(data.treasure)[0];\n      expect(data.treasure[resultKey].text).equal(\"100% Chance\");\n    });\n\n    // @todo: volatile, may still draw due to 1% minimum, how to fix?\n    /* it(\"Draws unsuccessfully from a treasure table\", async () => {\n      const table = await createMockTreasureTable();\n      await table.createEmbeddedDocuments(\"TableResult\", [\n        {\n          text: \"1% Chance\",\n          range: [1, 1],\n          weight: 1,\n        },\n      ]);\n      const data = await drawTreasure(table, {});\n      expect(Object.keys(data.treasure).length).equal(0);\n    }); */\n\n    it(\"Just draws from a non-treasure table\", async () => {\n      const table = await createMockTable();\n      table?.update({ formula: \"1d100\" });\n      await table?.createEmbeddedDocuments(\"TableResult\", [\n        {\n          text: \"100% Chance\",\n          range: [1, 100],\n        },\n      ]);\n      const data = await drawTreasure(table, {});\n      await waitForInput();\n      expect(data.treasure).is.not.undefined;\n      const resultKey = Object.keys(data.treasure)[0];\n      expect(data.treasure[resultKey].text).equal(\"100% Chance\");\n    });\n  });\n\n  describe(\"rollTreasure(table, options)\", () => {\n    it(\"Rolling on treasure table produces a chat message\", async () => {\n      trashChat();\n      const table = await createMockTreasureTable();\n      await table.createEmbeddedDocuments(\"TableResult\", [\n        {\n          text: \"100% Chance\",\n          range: [1, 1],\n          weight: 100,\n        },\n      ]);\n      await rollTreasure(table);\n      await waitForInput();\n      expect(game.messages?.size).equal(1);\n      expect(game.messages?.contents[0].content).contains(\"100% Chance\");\n    });\n  });\n\n  after(() => {\n    cleanUpTables();\n    trashChat();\n  });\n};\n","/* eslint-disable import/no-cycle */\n/* eslint-disable simple-import-sort/imports */\n/**\n * @file Orchestration for our Quench tests\n */\n// ACTOR TESTING IMPORTS\nimport actorDataModelCharacterTests, {\n  key as actorDataModelCharacterKey,\n  options as actorDataModelCharacterOptions,\n} from \"../module/actor/__tests__/data-model-character.test\";\nimport actorDataModelCharacterACTests, {\n  key as actorDataModelCharacterACKey,\n  options as actorDataModelCharacterACOptions,\n} from \"../module/actor/data-model-classes/__tests__/data-model-character-ac.test\";\nimport actorDataModelCharacterEncumbranceTests, {\n  key as actorDataModelCharacterEncumbranceKey,\n  options as actorDataModelCharacterEncumbranceOptions,\n} from \"../module/actor/data-model-classes/__tests__/data-model-character-encumbrance.test\";\nimport actorDataModelCharacterMoveTests, {\n  key as actorDataModelCharacterMoveKey,\n  options as actorDataModelCharacterMoveOptions,\n} from \"../module/actor/data-model-classes/__tests__/data-model-character-move.test\";\nimport actorDataModelCharacterScoresTests, {\n  key as actorDataModelCharacterScoresKey,\n  options as actorDataModelCharacterScoresOptions,\n} from \"../module/actor/data-model-classes/__tests__/data-model-character-scores.test\";\nimport actorDataModelCharacterSpellsTests, {\n  key as actorDataModelCharacterSpellsKey,\n  options as actorDataModelCharacterSpellsOptions,\n} from \"../module/actor/data-model-classes/__tests__/data-model-character-spells.test\";\nimport actorDataModelMonsterTests, {\n  key as actorDataModelMonsterKey,\n  options as actorDataModelMonsterOptions,\n} from \"../module/actor/__tests__/data-model-monster.test\";\nimport actorEntityTests, {\n  key as actorEntityKey,\n  options as actorEntityOptions,\n} from \"../module/actor/__tests__/entity-actor.test\";\nimport actorSheetTests, {\n  key as actorSheetKey,\n  options as actorSheetOptions,\n} from \"../module/actor/__tests__/sheet-actor.test\";\nimport actorSheetDragNDropTests, {\n  key as actorSheetDragNDropKey,\n  options as actorSheetDragNDropOptions,\n} from \"../module/actor/__tests__/sheet-actor/sheet-actor-e2e-dragndrop.test\";\nimport actorSheetCharacterTests, {\n  key as actorSheetCharacterKey,\n  options as actorSheetCharacterOptions,\n} from \"../module/actor/__tests__/sheet-character.test\";\nimport actorSheetMonsterTests, {\n  key as actorSheetMonsterKey,\n  options as actorSheetMonsterOptions,\n} from \"../module/actor/__tests__/sheet-monster.test\";\n\n// DIALOG TESTING IMPORTS\nimport actorSheetCharacterDialogModifiersTest, {\n  key as actorSheetCharacterDialogModifiersKey,\n  options as actorSheetCharacterDialogModifiersOptions,\n} from \"../module/dialog/__tests__/sheet-character-modifiers.test\";\nimport actorSheetDialogEntityTweaksTests, {\n  key as actorSheetDialogEntityTweaksKey,\n  options as actorSheetDialogEntityTweaksOptions,\n} from \"../module/dialog/__tests__/sheet-entity-tweaks.test\";\n\n// ITEM TESTING IMPORTS\nimport itemDataModelAbilityTests, {\n  key as itemDataModelAbilityKey,\n  options as itemDataModelAbilityOptions,\n} from \"../module/item/__tests__/data-model-item-ability.test\";\nimport itemDataModelArmorTests, {\n  key as itemDataModelArmorKey,\n  options as itemDataModelArmorOptions,\n} from \"../module/item/__tests__/data-model-item-armor.test\";\nimport itemDataModelContainerTests, {\n  key as itemDataModelContainerKey,\n  options as itemDataModelContainerOptions,\n} from \"../module/item/__tests__/data-model-item-container.test\";\nimport itemDataModelMiscTests, {\n  key as itemDataModelMiscKey,\n  options as itemDataModelMiscOptions,\n} from \"../module/item/__tests__/data-model-item-misc.test\";\nimport itemDataModelSpellTests, {\n  key as itemDataModelSpellKey,\n  options as itemDataModelSpellOptions,\n} from \"../module/item/__tests__/data-model-item-spell.test\";\nimport itemDataModelWeaponTests, {\n  key as itemDataModelWeaponKey,\n  options as itemDataModelWeaponOptions,\n} from \"../module/item/__tests__/data-model-item-weapon.test\";\nimport itemEntityTests, {\n  key as itemEntityKey,\n  options as itemEntityOptions,\n} from \"../module/item/__tests__/entity-item.test\";\nimport itemSheetTests, {\n  key as itemSheetKey,\n  options as itemSheetOptions,\n} from \"../module/item/__tests__/sheet-item.test\";\n\n// PARTY TESTING IMPORTS\nimport partyEntityTests, {\n  key as partyEntityKey,\n  options as partyEntityOptions,\n} from \"../module/party/__tests__/entity-party.test\";\nimport partySheetTests, {\n  key as partySheetKey,\n  options as partySheetOptions,\n} from \"../module/party/__tests__/sheet-party.test\";\nimport partyXpSheetTests, {\n  key as partyXpSheetKey,\n  options as partyXpSheetOptions,\n} from \"../module/party/__tests__/sheet-party-xp.test\";\n\n// HELPER TESTING IMPORTS\nimport helpersBehaviourTests, {\n  key as helpersBehaviourKey,\n  options as helpersBehaviourOptions,\n} from \"../module/__tests__/helpers-behaviour.test\";\nimport helpersChatTests, {\n  key as helpersChatKey,\n  options as helpersChatOptions,\n} from \"../module/__tests__/helpers-chat.test\";\nimport helpersDiceTests, {\n  key as helpersDiceKey,\n  options as helpersDiceOptions,\n} from \"../module/__tests__/helpers-dice.test\";\nimport helpersHandlebarsTests, {\n  key as helpersHandlebarsKey,\n  options as helpersHandlebarsOptions,\n} from \"../module/__tests__/helpers-handlebars.test\";\nimport helpersMacrosTests, {\n  key as helpersMacrosKey,\n  options as helpersMacrosOptions,\n} from \"../module/__tests__/helpers-macros.test\";\nimport helpersPartyTests, {\n  key as helpersPartyKey,\n  options as helpersPartyOptions,\n} from \"../module/__tests__/helpers-party.test\";\nimport helpersTreasureTests, {\n  key as helpersTreasureKey,\n  options as helpersTreasureOptions,\n} from \"../module/__tests__/helpers-treasure.test\";\n\nexport type QuenchMethods = {\n  [s: string]: any;\n};\n\ntype Quench = {\n  registerBatch: (key: string, tests: Function, options: any) => void;\n};\n\nHooks.on(\"quenchReady\", async (quench: Quench) => {\n  /* ------------------------------------------- */\n  /* ACTOR TESTING                               */\n  /* ------------------------------------------- */\n  quench.registerBatch(\n    actorDataModelCharacterKey,\n    actorDataModelCharacterTests,\n    actorDataModelCharacterOptions\n  );\n  quench.registerBatch(\n    actorDataModelCharacterACKey,\n    actorDataModelCharacterACTests,\n    actorDataModelCharacterACOptions\n  );\n  quench.registerBatch(\n    actorDataModelCharacterEncumbranceKey,\n    actorDataModelCharacterEncumbranceTests,\n    actorDataModelCharacterEncumbranceOptions\n  );\n  quench.registerBatch(\n    actorDataModelCharacterMoveKey,\n    actorDataModelCharacterMoveTests,\n    actorDataModelCharacterMoveOptions\n  );\n  quench.registerBatch(\n    actorDataModelCharacterScoresKey,\n    actorDataModelCharacterScoresTests,\n    actorDataModelCharacterScoresOptions\n  );\n  quench.registerBatch(\n    actorDataModelCharacterSpellsKey,\n    actorDataModelCharacterSpellsTests,\n    actorDataModelCharacterSpellsOptions\n  );\n  quench.registerBatch(\n    actorDataModelMonsterKey,\n    actorDataModelMonsterTests,\n    actorDataModelMonsterOptions\n  );\n\n  quench.registerBatch(actorEntityKey, actorEntityTests, actorEntityOptions);\n\n  quench.registerBatch(actorSheetKey, actorSheetTests, actorSheetOptions);\n  quench.registerBatch(\n    actorSheetDragNDropKey,\n    actorSheetDragNDropTests,\n    actorSheetDragNDropOptions\n  );\n  quench.registerBatch(\n    actorSheetCharacterKey,\n    actorSheetCharacterTests,\n    actorSheetCharacterOptions\n  );\n  quench.registerBatch(\n    actorSheetMonsterKey,\n    actorSheetMonsterTests,\n    actorSheetMonsterOptions\n  );\n\n  /* ------------------------------------------- */\n  /* DIALOG TESTING                              */\n  /* ------------------------------------------- */\n\n  quench.registerBatch(\n    actorSheetCharacterDialogModifiersKey,\n    actorSheetCharacterDialogModifiersTest,\n    actorSheetCharacterDialogModifiersOptions\n  );\n  quench.registerBatch(\n    actorSheetDialogEntityTweaksKey,\n    actorSheetDialogEntityTweaksTests,\n    actorSheetDialogEntityTweaksOptions\n  );\n\n  /* ------------------------------------------- */\n  /* ITEM TESTING                                */\n  /* ------------------------------------------- */\n\n  quench.registerBatch(\n    itemDataModelAbilityKey,\n    itemDataModelAbilityTests,\n    itemDataModelAbilityOptions\n  );\n  quench.registerBatch(\n    itemDataModelArmorKey,\n    itemDataModelArmorTests,\n    itemDataModelArmorOptions\n  );\n  quench.registerBatch(\n    itemDataModelContainerKey,\n    itemDataModelContainerTests,\n    itemDataModelContainerOptions\n  );\n  quench.registerBatch(\n    itemDataModelMiscKey,\n    itemDataModelMiscTests,\n    itemDataModelMiscOptions\n  );\n  quench.registerBatch(\n    itemDataModelSpellKey,\n    itemDataModelSpellTests,\n    itemDataModelSpellOptions\n  );\n  quench.registerBatch(\n    itemDataModelWeaponKey,\n    itemDataModelWeaponTests,\n    itemDataModelWeaponOptions\n  );\n\n  quench.registerBatch(itemEntityKey, itemEntityTests, itemEntityOptions);\n\n  quench.registerBatch(itemSheetKey, itemSheetTests, itemSheetOptions);\n\n  /* ------------------------------------------- */\n  /* PARTY TESTING                         */\n  /* ------------------------------------------- */\n\n  quench.registerBatch(partyEntityKey, partyEntityTests, partyEntityOptions);\n  quench.registerBatch(partySheetKey, partySheetTests, partySheetOptions);\n  quench.registerBatch(partyXpSheetKey, partyXpSheetTests, partyXpSheetOptions);\n\n  /* ------------------------------------------- */\n  /* HELPER TESTING                               */\n  /* ------------------------------------------- */\n\n  quench.registerBatch(\n    helpersBehaviourKey,\n    helpersBehaviourTests,\n    helpersBehaviourOptions\n  );\n  quench.registerBatch(helpersChatKey, helpersChatTests, helpersChatOptions);\n  quench.registerBatch(helpersDiceKey, helpersDiceTests, helpersDiceOptions);\n  quench.registerBatch(\n    helpersHandlebarsKey,\n    helpersHandlebarsTests,\n    helpersHandlebarsOptions\n  );\n  quench.registerBatch(\n    helpersMacrosKey,\n    helpersMacrosTests,\n    helpersMacrosOptions\n  );\n  quench.registerBatch(helpersPartyKey, helpersPartyTests, helpersPartyOptions);\n  quench.registerBatch(\n    helpersTreasureKey,\n    helpersTreasureTests,\n    helpersTreasureOptions\n  );\n});","/**\n * @file Polyfills for the system\n */\n\nexport default () => {\n  // @ts-ignore - Math.clamp is not a standard JS function\n  if (typeof Math.clamp !== \"function\") {\n    // @ts-ignore - Math.clamp is not a standard JS function\n    Math.clamp = Math.clamped;\n  }\n};\n","/**\n * @file The entry point for the OSE system\n *       We should handle most of our setup here.\n */\nimport OseActorSheetCharacter from \"./module/actor/character-sheet\";\nimport OseDataModelCharacter from \"./module/actor/data-model-character\";\nimport OseDataModelMonster from \"./module/actor/data-model-monster\";\nimport OseActor from \"./module/actor/entity\";\nimport OseActorSheetMonster from \"./module/actor/monster-sheet\";\n\nimport OseDataModelAbility from \"./module/item/data-model-ability\";\nimport OseDataModelArmor from \"./module/item/data-model-armor\";\nimport OseDataModelContainer from \"./module/item/data-model-container\";\nimport OseDataModelItem from \"./module/item/data-model-item\";\nimport OseDataModelSpell from \"./module/item/data-model-spell\";\nimport OseDataModelWeapon from \"./module/item/data-model-weapon\";\nimport OseItem from \"./module/item/entity\";\nimport OseItemSheet from \"./module/item/item-sheet\";\n\nimport * as chat from \"./module/helpers-chat\";\nimport OseCombat from \"./module/combat\";\nimport OSE from \"./module/config\";\nimport registerFVTTModuleAPIs from \"./module/fvttModuleAPIs\";\nimport handlebarsHelpers from \"./module/helpers-handlebars\";\nimport * as macros from \"./module/helpers-macros\";\nimport * as party from \"./module/helpers-party\";\nimport OsePartySheet from \"./module/party/party-sheet\";\nimport templates from \"./module/preloadTemplates\";\nimport * as renderList from \"./module/renderList\";\nimport registerSettings from \"./module/settings\";\nimport * as treasure from \"./module/helpers-treasure\";\n\nimport \"./e2e\";\nimport polyfill from \"./module/polyfill\";\n\n\npolyfill();\n\n/* -------------------------------------------- */\n/*  Foundry VTT Initialization                  */\n/* -------------------------------------------- */\n\nHooks.once(\"init\", async () => {\n  /**\n   * Set an initiative formula for the system\n   *\n   * @type {string}\n   */\n  CONFIG.Combat.initiative = {\n    formula: \"1d6 + @init\",\n    decimals: 2,\n  };\n\n  CONFIG.OSE = OSE;\n\n  game.ose = {\n    rollItemMacro: macros.rollItemMacro,\n    rollTableMacro: macros.rollTableMacro,\n    oseCombat: OseCombat,\n  };\n\n  // Init Party Sheet handler\n  OsePartySheet.init();\n\n  // Custom Handlebars helpers\n  handlebarsHelpers();\n\n  // Give modules a chance to add encumbrance schemes\n  // They can do so by adding their encumbrance schemes\n  // to CONFIG.OSE.encumbranceOptions\n  Hooks.call(\"ose-setup-encumbrance\");\n\n  // Register custom system settings\n  registerSettings();\n\n  // Register APIs of Foundry VTT Modules we explicitly support that provide custom hooks\n  registerFVTTModuleAPIs();\n\n  CONFIG.Actor.documentClass = OseActor;\n  CONFIG.Item.documentClass = OseItem;\n\n  CONFIG.Actor.systemDataModels = {\n    character: OseDataModelCharacter,\n    monster: OseDataModelMonster,\n  };\n  CONFIG.Item.systemDataModels = {\n    weapon: OseDataModelWeapon,\n    armor: OseDataModelArmor,\n    item: OseDataModelItem,\n    spell: OseDataModelSpell,\n    ability: OseDataModelAbility,\n    container: OseDataModelContainer,\n  };\n\n  // Register sheet application classes\n  Actors.unregisterSheet(\"core\", ActorSheet);\n  Actors.registerSheet(game.system.id, OseActorSheetCharacter, {\n    types: [\"character\"],\n    makeDefault: true,\n    label: \"OSE.SheetClassCharacter\",\n  });\n  Actors.registerSheet(game.system.id, OseActorSheetMonster, {\n    types: [\"monster\"],\n    makeDefault: true,\n    label: \"OSE.SheetClassMonster\",\n  });\n\n  Items.unregisterSheet(\"core\", ItemSheet);\n  Items.registerSheet(game.system.id, OseItemSheet, {\n    makeDefault: true,\n    label: \"OSE.SheetClassItem\",\n  });\n\n  await templates();\n});\n\n/**\n * This function runs after game data has been requested and loaded from the servers, so entities exist\n */\nHooks.once(\"setup\", () => {\n  // Localize CONFIG objects once up-front\n  [\"saves_short\", \"saves_long\", \"scores\", \"armor\", \"colors\", \"tags\"].forEach(\n    (o) => {\n      CONFIG.OSE[o] = Object.entries(CONFIG.OSE[o]).reduce((obj, e) => {\n        const localized = { ...obj };\n        localized[e[0]] = game.i18n.localize(e[1]);\n        return localized;\n      }, {});\n    }\n  );\n\n  // Custom languages\n  const languages = game.settings.get(game.system.id, \"languages\");\n  if (languages !== \"\") {\n    const langArray = languages.split(\",\").map((s) => s.trim());\n    CONFIG.OSE.languages = langArray;\n  }\n});\n\nHooks.once(\"ready\", async () => {\n  Hooks.on(\"hotbarDrop\", (bar, data, slot) => {\n    macros.createOseMacro(data, slot);\n    // Returning false to stop the rest of hotbarDrop handling.\n    return false;\n  });\n});\n\n// License info\nHooks.on(\"renderSidebarTab\", async (object, html) => {\n  if (object instanceof ActorDirectory) {\n    party.addControl(object, html);\n  }\n  if (object instanceof Settings) {\n    const gamesystem = html.find(\"#game-details\");\n    // SRD Link\n    const ose = gamesystem.find(\"h4\").last();\n    ose.append(\n      ` <sub><a href=\"https://oldschoolessentials.necroticgnome.com/srd/index.php\">SRD<a></sub>`\n    );\n\n    // License text\n    const template = `${OSE.systemPath()}/templates/chat/license.html`;\n    const rendered = await renderTemplate(template);\n    gamesystem.find(\".system\").append(rendered);\n\n    // User guide\n    const docs = html.find(\"button[data-action='docs']\");\n    const styling =\n      \"border:none;margin-right:2px;vertical-align:middle;margin-bottom:5px\";\n    $(\n      `<button type=\"button\" data-action=\"userguide\"><img src='${OSE.assetsPath}/dragon.png' width='16' height='16' style='${styling}'/>Old School Guide</button>`\n    ).insertAfter(docs);\n    html.find('button[data-action=\"userguide\"]').click(() => {\n      new FrameViewer(\"https://ose.vtt.red/\", {\n        resizable: true,\n      }).render(true);\n    });\n  }\n});\n\nHooks.on(\"preCreateCombatant\", (combat, data, options, id) => {\n  const init = game.settings.get(game.system.id, \"initiative\");\n  if (init === \"group\") {\n    OseCombat.addCombatant(combat, data, options, id);\n  }\n});\n\nHooks.on(\"updateCombatant\", OseCombat.debounce(OseCombat.updateCombatant), 100);\nHooks.on(\"renderCombatTracker\", OseCombat.debounce(OseCombat.format, 100));\nHooks.on(\"preUpdateCombat\", OseCombat.preUpdateCombat);\nHooks.on(\n  \"getCombatTrackerEntryContext\",\n  OseCombat.debounce(OseCombat.addContextEntry, 100)\n);\n\nHooks.on(\"renderChatLog\", (app, html) => OseItem.chatListeners(html));\nHooks.on(\"getChatLogEntryContext\", chat.addChatMessageContextOptions);\nHooks.on(\"renderChatMessage\", chat.addChatMessageButtons);\nHooks.on(\"renderRollTableConfig\", treasure.augmentTable);\nHooks.on(\"updateActor\", party.update);\n\nHooks.on(\"renderCompendium\", renderList.RenderCompendium);\nHooks.on(\"renderSidebarDirectory\", renderList.RenderDirectory);\n\nHooks.on(\"OSE.Party.showSheet\", OsePartySheet.showPartySheet);\n","/**\n * @file A place to store Handlebars helpers for our templates\n */\nimport OSE, { InventoryItemTag } from \"./config\";\n\nconst registerHelpers = async () => {\n  // Handlebars template helpers\n  Handlebars.registerHelper(\"eq\", (a, b) => a === b);\n\n  Handlebars.registerHelper(\"mod\", (val) => {\n    if (val > 0) {\n      return `+${val}`;\n    }\n    if (val < 0) {\n      return `${val}`;\n    }\n    return \"0\";\n  });\n\n  Handlebars.registerHelper(\n    \"add\",\n    (lh, rh) => parseInt(lh, 10) + parseInt(rh, 10)\n  );\n\n  Handlebars.registerHelper(\n    \"subtract\",\n    (lh, rh) => parseInt(lh, 10) - parseInt(rh, 10)\n  );\n\n  Handlebars.registerHelper(\"divide\", (lh, rh) =>\n    Math.floor(parseFloat(lh) / parseFloat(rh))\n  );\n\n  Handlebars.registerHelper(\n    \"mult\",\n    (lh, rh) => Math.round(100 * parseFloat(lh) * parseFloat(rh)) / 100\n  );\n\n  Handlebars.registerHelper(\n    \"roundWeight\",\n    (weight) => Math.round(parseFloat(weight) / 100) / 10\n  );\n\n  Handlebars.registerHelper(\"getTagIcon\", (tagValue: string) => {\n    const tagKey = (Object.keys(CONFIG.OSE.tags) as InventoryItemTag[])\n      // find key for the tag display name who's name matches the provided tag text.\n      .find((findTagName) => CONFIG.OSE.tags[findTagName] === tagValue);\n    // if that tag key is found, return the image for the tag key\n    return tagKey ? CONFIG.OSE.tag_images[tagKey] : null;\n  });\n\n  Handlebars.registerHelper(\"counter\", (status, value, max) =>\n    status\n      ? Math.clamp((100 * value) / max, 0, 100)\n      : Math.clamp(100 - (100 * value) / max, 0, 100)\n  );\n\n  Handlebars.registerHelper(\"times\", (n, block) => {\n    let accum = \"\";\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < n; ++i) accum += block.fn(i);\n    return accum;\n  });\n\n  Handlebars.registerHelper(\n    \"path\",\n    (relativePath) => `${OSE.systemPath()}${relativePath}`\n  );\n\n  Handlebars.registerHelper(\n    \"asset\",\n    (relativePath) => `${OSE.assetsPath}${relativePath}`\n  );\n\n  Handlebars.registerHelper(\"ceil\", (val) => Math.ceil(val));\n};\n\nexport default registerHelpers;\n","/**\n * @file Wire up system settings.\n */\n\nimport { ApplyDamageOption } from \"./config\";\nimport { EncumbranceOption } from \"./config\";\n\n/**\n * Perform setting registration.\n */\nconst registerSettings = () => {\n  game.settings.register(game.system.id, \"initiative\", {\n    name: game.i18n.localize(\"OSE.Setting.Initiative\"),\n    hint: game.i18n.localize(\"OSE.Setting.InitiativeHint\"),\n    default: \"group\",\n    scope: \"world\",\n    type: String,\n    config: true,\n    choices: {\n      individual: \"OSE.Setting.InitiativeIndividual\",\n      group: \"OSE.Setting.InitiativeGroup\",\n    },\n  });\n\n  game.settings.register(game.system.id, \"rerollInitiative\", {\n    name: game.i18n.localize(\"OSE.Setting.RerollInitiative\"),\n    hint: game.i18n.localize(\"OSE.Setting.RerollInitiativeHint\"),\n    default: \"reset\",\n    scope: \"world\",\n    type: String,\n    config: true,\n    choices: {\n      keep: \"OSE.Setting.InitiativeKeep\",\n      reset: \"OSE.Setting.InitiativeReset\",\n      reroll: \"OSE.Setting.InitiativeReroll\",\n    },\n  });\n\n  game.settings.register(game.system.id, \"ascendingAC\", {\n    name: game.i18n.localize(\"OSE.Setting.AscendingAC\"),\n    hint: game.i18n.localize(\"OSE.Setting.AscendingACHint\"),\n    default: false,\n    scope: \"world\",\n    type: Boolean,\n    config: true,\n  });\n\n  game.settings.register(game.system.id, \"morale\", {\n    name: game.i18n.localize(\"OSE.Setting.Morale\"),\n    hint: game.i18n.localize(\"OSE.Setting.MoraleHint\"),\n    default: false,\n    scope: \"world\",\n    type: Boolean,\n    config: true,\n  });\n\n  game.settings.register(game.system.id, \"encumbranceOption\", {\n    name: game.i18n.localize(\"OSE.Setting.Encumbrance\"),\n    hint: game.i18n.localize(\"OSE.Setting.EncumbranceHint\"),\n    default: \"detailed\",\n    scope: \"world\",\n    type: String,\n    config: true,\n    choices: Object.values(CONFIG.OSE.encumbranceOptions)\n    .reduce((obj, enc) => {\n      return {...obj, [enc.type]: enc.localizedLabel}\n    }, {}) as SettingConfig<EncumbranceOption>[\"choices\"],\n  });\n\n  game.settings.register(game.system.id, \"significantTreasure\", {\n    name: game.i18n.localize(\"OSE.Setting.SignificantTreasure\"),\n    hint: game.i18n.localize(\"OSE.Setting.SignificantTreasureHint\"),\n    default: 800,\n    scope: \"world\",\n    type: Number,\n    config: true,\n  });\n\n  game.settings.register(game.system.id, \"languages\", {\n    name: game.i18n.localize(\"OSE.Setting.Languages\"),\n    hint: game.i18n.localize(\"OSE.Setting.LanguagesHint\"),\n    default: \"\",\n    scope: \"world\",\n    type: String,\n    config: true,\n  });\n  game.settings.register(game.system.id, \"applyDamageOption\", {\n    name: game.i18n.localize(\"OSE.Setting.applyDamageOption\"),\n    hint: game.i18n.localize(\"OSE.Setting.applyDamageOptionHint\"),\n    default: \"selected\",\n    scope: \"world\",\n    type: String,\n    config: true,\n    choices:  {\n      selected : game.i18n.localize(\"OSE.Setting.damageSelected\"),\n      targeted : game.i18n.localize(\"OSE.Setting.damageTarget\"),\n      originalTarget : game.i18n.localize(\"OSE.Setting.damageOriginalTarget\"),\n    },\n  });\n  game.settings.register(game.system.id, \"invertedCtrlBehavior\", {\n    name: game.i18n.localize(\"OSE.Setting.InvertedCtrlBehavior\"),\n    hint: game.i18n.localize(\"OSE.Setting.InvertedCtrlBehaviorHint\"),\n    default: false,\n    scope: \"world\",\n    type: Boolean,\n    config: true,\n  });\n};\n\ndeclare global {\n  namespace ClientSettings {\n    // Include OSE settings in addition to foundry default settings\n    interface Values {\n      \"ose.initiative\": \"individual\" | \"group\";\n      \"ose.rerollInitiative\": \"keep\" | \"reset\" | \"reroll\";\n      \"ose.ascendingAC\": boolean;\n      \"ose.morale\": boolean;\n      \"ose.encumbranceOption\": EncumbranceOption;\n      \"ose.significantTreasure\": number;\n      \"ose.languages\": string;\n      \"ose.applyDamageOption\": ApplyDamageOption;\n    }\n  }\n}\n\nexport default registerSettings;\n","/**\n * @file Register APIs that help the system more gracefully integrate with other modules\n */\n\nconst registerFVTTModuleAPIs = () => {\n  // see docs for more info https://github.com/fantasycalendar/FoundryVTT-ItemPiles/blob/master/docs/api.md\n  Hooks.once(\"item-piles-ready\", async () => {\n\n    game.itempiles.API.addSystemIntegration({\n\n      \"VERSION\": \"1.0.1\",\n\n      // The actor class type is the type of actor that will be used for the default item pile actor that is created on first item drop.\n      \"ACTOR_CLASS_TYPE\": \"character\",\n\n      // The item quantity attribute is the path to the attribute on items that denote how many of that item that exists\n      \"ITEM_QUANTITY_ATTRIBUTE\": \"system.quantity.value\",\n\n      // The item price attribute is the path to the attribute on each item that determine how much it costs\n      \"ITEM_PRICE_ATTRIBUTE\": \"system.cost\",\n\n      // Item types and the filters actively remove items from the item pile inventory UI that users cannot loot, such as spells, feats, and classes\n      \"ITEM_FILTERS\": [\n        {\n          \"path\": \"type\",\n          \"filters\": \"spell,ability\"\n        }\n      ],\n\n      \"UNSTACKABLE_ITEM_TYPES\": [\"weapon\", \"armor\", \"container\"],\n\n      // Item similarities determines how item piles detect similarities and differences in the system\n      \"ITEM_SIMILARITIES\": [\"name\", \"type\", \"system.treasure\"],\n\n      // Currencies in item piles is a versatile system that can accept actor attributes (a number field on the actor's sheet) or items (actual items in their inventory)\n      // In the case of attributes, the path is relative to the \"actor.system\"\n      // In the case of items, it is recommended you export the item with `.toObject()` and strip out any module data\n      \"CURRENCIES\": [\n        {\n          type: \"item\",\n          name: \"OSE.items.gp.long\",\n          img: \"systems/ose/assets/gold.png\",\n          abbreviation: \"{#}GP\",\n          data: {\n            item: {\n              \"name\": \"Gold Coins\",\n              \"type\": \"item\",\n              \"img\": \"systems/ose/assets/gold.png\",\n              \"system\": {\n                \"quantity\": { \"value\": 1, \"max\": null },\n                \"weight\": 0.1,\n                \"cost\": 1,\n                \"treasure\": true,\n              }\n            }\n          },\n          primary: true,\n          exchangeRate: 1\n        }\n      ]\n    });\n  });\n};\n\nexport default registerFVTTModuleAPIs;\n","/**\n * @file A file that manages preloading our system templates\n */\nimport OSE from \"./config\";\n\nconst preloadHandlebarsTemplates = async () => {\n  const templatePaths = [\n    // Character Sheets\n    `${OSE.systemPath()}/templates/actors/character-sheet.html`,\n    `${OSE.systemPath()}/templates/actors/monster-sheet.html`,\n    // Character Sheets Partials\n    `${OSE.systemPath()}/templates/actors/partials/character-header.html`,\n    `${OSE.systemPath()}/templates/actors/partials/character-attributes-tab.html`,\n    `${OSE.systemPath()}/templates/actors/partials/character-abilities-tab.html`,\n    `${OSE.systemPath()}/templates/actors/partials/character-spells-tab.html`,\n    `${OSE.systemPath()}/templates/actors/partials/character-inventory-tab.html`,\n    `${OSE.systemPath()}/templates/actors/partials/actor-item-summary.html`,\n    `${OSE.systemPath()}/templates/actors/partials/character-notes-tab.html`,\n    `${OSE.systemPath()}/templates/actors/partials/monster-header.html`,\n    `${OSE.systemPath()}/templates/actors/partials/monster-attributes-tab.html`,\n    // Item Display\n    `${OSE.systemPath()}/templates/actors/partials/item-auto-tags-partial.html`,\n    // Party Sheet\n    `${OSE.systemPath()}/templates/apps/party-sheet.html`,\n    // `${OSE.systemPath()}/templates/apps/party-xp.html`,\n  ];\n  return loadTemplates(templatePaths);\n};\n\nexport default preloadHandlebarsTemplates;\n","/**\n * @file Functions that alter the way that sidebar and compendium lists render\n */\nimport OSE from \"./config\";\n\nexport const RenderCompendium = async (object, html, d) => {\n  if (object.metadata.type !== \"Item\") {\n    return;\n  }\n\n  const render = html[0].querySelectorAll(\".item\");\n  const docs = await d.collection.getDocuments();\n\n  render.forEach(async (item, i) => {\n    const id = render[i].dataset.documentId;\n\n    const element = docs.find((doc) => doc.id === id);\n    const tagTemplate = $.parseHTML(\n      await renderTemplate(\n        `${OSE.systemPath()}/templates/actors/partials/item-auto-tags-partial.html`,\n        { tags: element.system.autoTags }\n      )\n    );\n\n    $(item).append(tagTemplate);\n  });\n};\n\nexport const RenderDirectory = async (object, html) => {\n  if (object.id !== \"items\") {\n    return;\n  }\n\n  const render = html[0].querySelectorAll(\".item\");\n  const content = object.documents;\n\n  render.forEach(async (item) => {\n    const foundryDocument = content.find(\n      (e) => e.id === item.dataset.documentId\n    );\n\n    const tagTemplate = $.parseHTML(\n      await renderTemplate(\n        `${OSE.systemPath()}/templates/actors/partials/item-auto-tags-partial.html`,\n        { tags: foundryDocument.system.autoTags || [] }\n      )\n    );\n    $(item).append(tagTemplate);\n  });\n};\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","get","__classPrivateFieldSet","set","OseDataModelCharacterEncumbrance","constructor","variant","max","baseEncumbranceCap","items","_OseDataModelCharacterEncumbrance_encumbranceVariant","this","_OseDataModelCharacterEncumbrance_max","_OseDataModelCharacterEncumbrance_weight","enabled","pct","Math","clamp","encumbered","steps","atThirdBreakpoint","encumbranceSteps","half","_OseDataModelCharacterEncumbrance_instances","_OseDataModelCharacterEncumbrance_delta_get","atSecondBreakpoint","threeEighths","atFirstBreakpoint","quarter","Object","defineProperty","OseDataModelCharacterEncumbranceBasic","options","super","type","_OseDataModelCharacterEncumbranceBasic_weight","_OseDataModelCharacterEncumbranceBasic_treasureEncumbrance","_OseDataModelCharacterEncumbranceBasic_heaviestArmor","significantTreasure","reduce","acc","system","treasure","quantity","weight","heaviest","armorType","equipped","armorWeight","unarmored","light","heavy","overTreasureThreshold","overSignificantTreasureThreshold","isHeavy","isLightWithTreasure","OseDataModelCharacterEncumbranceComplete","_OseDataModelCharacterEncumbranceComplete_weight","includes","values","OseDataModelCharacterEncumbranceDetailed","_OseDataModelCharacterEncumbranceDetailed_weight","_OseDataModelCharacterEncumbranceDetailed_hasAdventuringGear","some","i","gearWeight","OseDataModelCharacterEncumbranceDisabled","OseDataModelCharacterEncumbranceItemBased","_OseDataModelCharacterEncumbranceItemBased_equippedMax","_OseDataModelCharacterEncumbranceItemBased_packedMax","_OseDataModelCharacterEncumbranceItemBased_max","_OseDataModelCharacterEncumbranceItemBased_atFiveEighths","_OseDataModelCharacterEncumbranceItemBased_atThreeQuarters","_OseDataModelCharacterEncumbranceItemBased_atSevenEights","_OseDataModelCharacterEncumbranceItemBased_atOneThird","_OseDataModelCharacterEncumbranceItemBased_atFiveNinths","_OseDataModelCharacterEncumbranceItemBased_atSevenNinths","_OseDataModelCharacterEncumbranceItemBased_weight","_OseDataModelCharacterEncumbranceItemBased_equippedWeight","_OseDataModelCharacterEncumbranceItemBased_packedWeight","ceil","itemslots","packedEncumbranceSteps","fiveEighths","threeQuarters","sevenEighths","equippedEncumbranceSteps","oneThird","fiveNinths","sevenNinths","usingEquippedEncumbrance","equippedValues","packedValues","equippedIndex","findIndex","packedIndex","OSE","systemPath","systemRoot","game","id","assetsPath","encumbrance","settings","encumbranceOptions","disabled","basic","detailed","complete","itembased","scores","str","int","dex","wis","con","cha","scores_short","exploration_skills","ld","od","sd","fs","exploration_skills_short","roll_type","above","below","saves_short","death","wand","paralysis","breath","spell","saves_long","armor","shield","apply_damage_options","selected","targeted","originalTarget","colors","green","red","yellow","purple","blue","orange","white","languages","tags","melee","missile","slow","twohanded","blunt","brace","splash","reload","charge","auto_tags","label","CONFIG","image","icon","tag_images","monster_saves","d","w","p","b","s","monster_thac0","OseDice","async","parts","data","title","flavor","speaker","form","chatMessage","template","chatData","user","templateData","config","bonus","push","roll","Roll","join","evaluate","allowStrings","rollMode","blindroll","isGM","whisper","ChatMessage","getWhisperRecipients","_id","blind","digestResult","render","r","rollOSE","renderTemplate","content","dice3d","showForRoll","displayed","create","sound","sounds","dice","isSuccess","isFailure","target","total","die","terms","results","table","output","details","attackIsSuccess","thac0","ac","digestAttackResult","targetActorData","actor","targetAc","targetAac","aac","victim","attackBonus","i18n","format","flags","dmg","filter","v","length","ui","notifications","error","dmgRoll","dr","rollDamage","skipDialog","rolled","dialogData","formula","rollModes","Dice","rollData","sendRoll","buttons","ok","localize","callback","html","querySelector","magic","cancel","Dialog","default","close","sendAttackRoll","OseCharacterCreator","FormApplication","defaultOptions","classes","width","submitOnClose","object","name","getData","foundry","utils","deepClone","counters","gold","stats","sum","avg","std","doStats","ev","list","$","currentTarget","closest","n","mean","parseFloat","sqrt","map","x","siblings","find","text","round","removeAttr","score","rollParts","skipMessage","skipMessagRoll","event","getSpeaker","count","activateListeners","click","el","parentElement","dataset","rollScore","val","trigger","change","char","submit","updateData","preventClose","preventRender","extendedData","_onSubmit","itemData","img","cost","createEmbeddedDocuments","formData","preventDefault","update","sheet","OseCharacterGpCost","preparedData","position","totalCost","getTotalCost","inventory","gp","item","newGP","updateEmbeddedDocuments","physical","Set","forEach","OseCharacterModifiers","skipRollDialogCheck","ctrlKey","metaKey","OseEntityTweaks","isCharacter","ascendingAC","_render","OseActorSheet","ActorSheet","owner","isOwner","editable","isEditable","initiative","isNew","activateEditor","initialContent","_getItemFromActor","li","itemId","_toggleItemCategory","css","removeClass","addClass","slideDown","slideUp","_toggleContainedItems","targetItems","_toggleItemSummary","itemSummary","style","display","show","deleteEmbeddedDocuments","containerId","newItemIds","itemIds","o","_useConsumable","decrement","field","parseInt","each","_","memorized","counter","rollWeapon","spendSpell","rollFormula","actorObject","element","save","rollSave","attack","targetAttack","_onSortItem","source","dropTarget","targetId","Error","targetData","_onDragStart","dragData","itemIdsArray","classList","contains","toDragData","actorId","sceneId","isToken","canvas","scene","tokenId","token","pack","effectId","effect","effects","dataTransfer","setData","JSON","stringify","key","folder","fromUuid","uuid","itemArray","contents","getSubfolders","subfolder","_onDropItemCreate","targetItem","targetIsContainer","Item","implementation","fromDropData","toObject","exists","isContainer","_onContainerItemRemove","_onContainerItemAdd","container","newList","itemObj","alreadyExistsInActor","parent","latestItem","newItem","pop","droppedItem","targetContainer","Array","isArray","containedItems","parse","containedItem","choices","types","dlg","_createItem","header","lvl","createItem","capitalize","split","_chooseItemType","dialogInput","args","_renderInner","resizable","heightDelta","height","baseSize","_onResize","editor","editorSize","_onConfigureActor","top","left","_getHeaderButtons","canConfigure","class","onclick","concat","_rollSave","_rollAttack","rollHitDice","_rollAbility","stopPropagation","_displayItemInChat","_removeItemFromActor","confirm","yes","defaultYes","select","_updateItemQuantity","bind","_onSpellChange","_resetSpells","OseActorSheetCharacter","mergeObject","tabs","navSelector","contentSelector","initial","scrollY","_prepareItems","owned","armors","weapons","treasures","containers","carriedTreasure","abilities","spells","spellList","slots","spellSlots","usesAscendingAC","meleeMod","rangedMod","init","sort","a","generateScores","enrichedBiography","TextEditor","enrichHTML","biography","enrichedNotes","notes","choice","_pushLang","_chooseLang","newData","_popLang","lang","_onShowModifiers","document","append","stat","rollCheck","rollLoyalty","expl","exploration","rollExploration","_onShowGpCost","array","parents","OseDataModelCharacterAC","isAscending","dexMod","mod","_OseDataModelCharacterAC_armor","_OseDataModelCharacterAC_dexMod","_OseDataModelCharacterAC_mod","_OseDataModelCharacterAC_acProp","_OseDataModelCharacterAC_isAscending","propAscending","propDescending","base","baseAscending","baseDescending","naked","_OseDataModelCharacterAC_instances","_OseDataModelCharacterAC_getShieldBonus","_OseDataModelCharacterAC_armored_get","_change","_a","OseDataModelCharacterMove","shouldCalculateMovement","baseMoveRate","_OseDataModelCharacterMove_moveBase","_OseDataModelCharacterMove_autocalculate","_OseDataModelCharacterMove_encumbranceVariant","_OseDataModelCharacterMove_overEncumbranceLimit","_OseDataModelCharacterMove_atFirstBreakpoint","_OseDataModelCharacterMove_atSecondBreakpoint","_OseDataModelCharacterMove_atThirdBreakpoint","_OseDataModelCharacterMove_instances","_OseDataModelCharacterMove_derivedSpeed","encounter","overland","OseDataModelCharacterScores","_OseDataModelCharacterScores_str","_OseDataModelCharacterScores_int","_OseDataModelCharacterScores_wis","_OseDataModelCharacterScores_dex","_OseDataModelCharacterScores_con","_OseDataModelCharacterScores_cha","static","undefined","_OseDataModelCharacterScores_instances","_OseDataModelCharacterScores_strMod_get","_OseDataModelCharacterScores_strOpenDoorsMod_get","_OseDataModelCharacterScores_intMod_get","literacy","_OseDataModelCharacterScores_intLiteracyMod_get","spoken","_OseDataModelCharacterScores_intSpokenLanguagesMod_get","_OseDataModelCharacterScores_wisMod_get","_OseDataModelCharacterScores_dexMod_get","_OseDataModelCharacterScores_dexInitMod_get","_OseDataModelCharacterScores_conMod_get","_OseDataModelCharacterScores_chaMod_get","loyalty","_OseDataModelCharacterScores_chaLoyaltyMod_get","retain","_OseDataModelCharacterScores_chaRetainMod_get","npc","_OseDataModelCharacterScores_chaReactionMod_get","valueFromTable","standardAttributeMods","openDoorMods","literacyMods","spokenMods","cappedAttributeMods","OseDataModelCharacterSpells","maxSlots","t","prototype","hasOwnProperty","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","_OseDataModelCharacterSpells_slots","_OseDataModelCharacterSpells_spellList","_OseDataModelCharacterSpells_enabled","usedSlots","_b","_OseDataModelCharacterSpells_instances","_OseDataModelCharacterSpells_reducedUsedSlots","keys","idx","_OseDataModelCharacterSpells_usedAndMaxSlots","othersAtLvl","assign","localeCompare","reducedSpells","WeakMap","WeakSet","cast","Number","isNaN","usedAtLvl","lv","used","getItemsOfActorOfType","filterType","filterFn","OseDataModelCharacter","abstract","TypeDataModel","prepareDerivedData","movement","movementAuto","StringField","NumberField","BooleanField","ObjectField","SchemaField","fields","hp","hd","integer","saves","ft","positive","retainer","wage","ascendingAcMod","bba","isSlow","every","OseDataModelMonster","prev","curr","attackPatterns","pattern","updated","OseItem","defaultIcons","ability","weapon","context","tag","prepareData","enrichedDescription","description","on","_onChatCardAction","_onChatCardToggleContent","htmlOptions","itemType","props","range","duration","properties","isNPC","_source","rollType","autoTags","rollTarget","_getRollTag","_getSaveTag","getAutoTagList","tagList","damage","short","medium","long","requirements","req","rollTag","saveTag","pushManualTag","regExp","matches","exec","slice","index","trim","popManualTag","getChatData","labels","isHealing","hasDamage","isSpell","hasSave","CONST","CHAT_MESSAGE_STYLES","OTHER","alias","button","card","messageId","message","messages","action","isTargetted","isAuthor","_getChatCardActor","actorName","targets","_getChatCardTargets","tokenKey","scenes","tokenData","getEmbeddedDocument","Token","actors","character","controlled","tokens","arr","removeFalsyElements","OseActor","Actor","version","startsWith","prototypeToken","texture","acValue","aacValue","bbaValue","thac0Value","embeddedName","getExperience","actorData","modified","floor","xp","generateSave","tmp","k","actorType","RollSave","fastForward","rollMorale","morale","rollReaction","attribute","level","rollAppearing","check","appearing","attData","dmgParts","size","rollAttack","ignoreBonusDamage","attackMods","ose","amount","multiplier","OseActorSheetMonster","monsterData","link","isNewerVersion","_onDrop","tableDatum","packs","all","_cycleAttackPatterns","currentColor","contextmenu","_resetAttacks","_updateAttackCounter","rollHP","OseTags","rollTagFormula","formulaData","rollTagTarget","OseDataModelAbility","ArrayField","manualTags","OseDataModelArmor","ArmorTypes","min","tagNames","flat","OseDataModelContainer","totalWeight","OseDataModelItem","cumulativeWeight","cumulativeCost","cumulativeItemslots","OseDataModelSpell","OseDataModelWeapon","missileTag","meleeTag","slowTag","qualities","OseItemSheet","ItemSheet","enriched","keypress","which","applyChatCardDamage","last","dmgTgt","victimId","_c","applyDamageToTarget","nameOrId","applyDamage","canApply","canApplyDamage","applyDamageOption","_d","configName","configValue","OseCombat","STATUS_SLOW","STATUS_DIZZY","debounce","wait","timeoutId","window","clearTimeout","setTimeout","combat","combatants","groups","cbt","group","getFlag","present","toMessage","setupTurns","reroll","resetAll","updates","rolls","c","cf","_getInitiativeFormula","getInitiativeRoll","pool","PoolTerm","fromRolls","combinedRoll","fromTerms","evalRoll","rollArr","msgContent","entries","combats","viewed","skipDefeated","isDefeated","tData","turn","span","innerHTML","ct","controls","cmbtant","combatantId","moveInCombat","preparingSpell","moveActive","eq","after","spellActive","announceListener","remove","trash","insertBefore","color","prepend","addListeners","updateCombatant","combatant","groupInit","cmbtGroup","isActive","setFlag","rollInitiative","addCombatant","disposition","updateSource","activateCombatant","turns","addContextEntry","unshift","diff","resetInitiative","individualInitiative","drawTreasure","chance","percent","getChatText","TABLE_RESULT_TYPES","DOCUMENT","collection","embeddedTable","tables","resultId","rollTreasure","add","functionsForTesting","createOseMacro","slot","assignHotbarMacro","command","macro","Macro","warn","macros","m","ownership","userId","rollItemMacro","itemName","rollTableMacro","tableUuId","draw","displayChat","OseParty","currentParty","act","party","OsePartyXP","closeOnSubmit","_updateObject","_dealXP","_calculateShare","totalXP","baseXpShare","xpShare","share","row","qRow","Party","partySheet","OsePartySheet","dragDrop","dragSelector","dropSelector","focus","ascending","partyActors","_onDropActor","_onDropFolder","droppedActor","_addActorToParty","_recursiveAddFolder","children","documentName","getActor","_removeActorFromParty","delay","ms","trashChat","documentClass","deleteDocuments","deleteAll","waitForInput","openWindows","className","windows","openDialogs","closeDialogs","closeSheets","createMockActorKey","createWorldTestItem","createActorTestItem","createMockMacro","randomID","createMockScene","Scene","tokenVision","getMockActorKey","getName","cleanUpMacros","mockMacros","delete","cleanUpActorsByKey","cleanUpWorldItems","_e","cleanUpScenes","_f","itemTypes","displayName","createMockActor","actorDataModelCharacterTests","describe","it","expect","before","dataModel","ascendingACSetting","initiativeSetting","encumbranceSetting","not","spellLevels","contain","subFields","subField","subSubField","equal","testActor","to","be","true","false","is","getter","actorDataModelCharacterACTests","itemsArmor","itemsShield","itemsBoth","negativeDexMod","negativeArbitraryMod","armorAC","toPct","createMockItem","itemOptions","actorDataModelCharacterEncumbranceTests","enc","EncumbranceDisabled","EncumbranceBasic","expectedSteps","have","members","EncumbranceDetailed","EncumbranceComplete","console","info","EncumbranceItemBased","actorDataModelCharacterMoveTests","move","expectedBase","expectedEncounter","expectedOverland","actorDataModelCharacterScoresTests","scoreSpread","from","_el","scoreKeys","fromTable","tableKey","numberToScores","number","fromEntries","scoreKey","buildTestCases","scoresToUse","scoresObj","buildTestCasesWithModifiers","added","spreadToModTests","createMockSpell","spellOptions","spellsPerLevel","actorDataModelCharacterSpellsTests","levels","lvCount","createMockSpellList","spellData","actorDataModelMonsterTests","afterEach","atHalfEncumbered","atQuarterEncumbered","atEighthEncumbered","transparent","preSelected","actorEntityTests","assert","actorItem","low","high","wands","savesData","thac0Data","thac0PlusData","conScoreSpread","conBonusSpread","hdSpread","levelSpread","conMod","expectedTerms","modSign","modUnsigned","expression","operator","toString","_g","_h","_j","_k","_l","_m","_o","_p","activate","getTokenDocument","placeables","setTarget","releaseOthers","groupSelection","null","_q","_r","_s","_t","_u","_v","_w","_x","rolldata","actorSheetTests","originalCtrlSetting","mockedItem","tab","clickElement","descriptionStyle","nextElementSibling","clickCategory","sheets","categoryElement","clickContainerCaret","containerElement","clickItemSummary","summaryElement","macroReference","clickItemShow","mockClickItem","clickSave","attackClass","dragNDropCasePreflightCheck","sourceItemName","dragNDropCasePostflightCheck","documents","dragNDropSanityChecks","defaultChoices","dialogs","customChoices","updateQuantity","modifier","String","InputEvent","dispatchEvent","quantityElement","executeDragNDrop","mockDragStartEvent","DragEvent","DataTransfer","bubbles","cancelable","itemElement","mockDropEvent","actorSheetDragNDropTests","beforeEach","sourceElement","executeDrag","parsedData","getDragEventData","compendium","finalElement","CompendiumCollection","createCompendium","path","private","package","createMockCompendium","worldItem","importDocument","deleteCompendium","actorSheetCharacterTests","scoreValue","actorSheetMonsterTests","orginalCtrlSetting","rt","rollTable","RollTable","dragElement","dropElement","currentPattern","patternIndex","nextIndex","actorSheetCharacterDialogModifiersTest","dialogTitle","actorSheetDialogEntityTweaksTests","entityTweaks","itemDataModelAbilityTests","itemDataModelArmorTests","dataTypes","itemDataModelContainerTests","itemDataModelMiscTests","miscItem","itemDataModelSpellTests","itemDataModelWeaponTests","itemEntityTests","non_existing","testItemCreate","equals","initialSlots","testPushManualTag","itemTagData","itemTag","testSystemBooleans","poppedTag","rollMessageTest","users","u","itemSheetTests","partyEntityTests","promisedAnswer","actorsInParty","partySheetTests","showPartySheet","promisedAddAnswer","promisedRemoveAnswer","resolvedResponse","Folder","subFolder","response","folders","partyXpSheetTests","partyXP","helpersBehaviourTests","originalSetting","setting","KeyboardEvent","helpersChatTests","createMockRoll","resultArray","helpersDiceTests","acSetting","chatCard","_evaluated","_formula","createMockData","dataNat20","rollTargetOne","rollTargetTwenty","notification","queue","attackDiceResult","damageDiceResult","dialog","helpersHandlebarsTests","Handlebars","helpers","subtract","divide","mult","roundWeight","getTagIcon","block","fn","times","asset","cleanUpActors","helpersMacrosTests","active","hotbar","getHotbarMacros","macroSlot","_y","_z","_0","helpersPartyTests","partyMember","getAttribute","createMockTable","createMockTreasureTable","helpersTreasureTests","resultKey","Hooks","quench","registerBatch","actorDataModelCharacterKey","actorDataModelCharacterOptions","actorDataModelCharacterACOptions","actorDataModelCharacterEncumbranceOptions","actorDataModelCharacterMoveOptions","actorDataModelCharacterScoresOptions","actorDataModelCharacterSpellsOptions","actorDataModelMonsterKey","actorDataModelMonsterOptions","actorEntityKey","actorEntityOptions","actorSheetKey","actorSheetOptions","actorSheetDragNDropKey","actorSheetDragNDropOptions","actorSheetCharacterKey","actorSheetCharacterOptions","actorSheetMonsterKey","actorSheetMonsterOptions","actorSheetCharacterDialogModifiersKey","actorSheetCharacterDialogModifiersOptions","actorSheetDialogEntityTweaksKey","actorSheetDialogEntityTweaksOptions","itemDataModelAbilityOptions","itemDataModelArmorOptions","itemDataModelContainerOptions","itemDataModelMiscOptions","itemDataModelSpellOptions","itemDataModelWeaponOptions","itemEntityOptions","itemSheetOptions","partyEntityKey","partyEntityOptions","partySheetKey","partySheetOptions","partyXpSheetOptions","helpersBehaviourOptions","helpersChatOptions","helpersDiceOptions","helpersHandlebarsOptions","helpersMacrosKey","helpersMacrosOptions","helpersPartyKey","helpersPartyOptions","helpersTreasureKey","helpersTreasureOptions","clamped","once","Combat","decimals","macros.rollItemMacro","macros.rollTableMacro","oseCombat","registerHelper","lh","rh","tagValue","tagKey","findTagName","status","accum","relativePath","register","hint","scope","individual","keep","reset","Boolean","obj","localizedLabel","itempiles","API","addSystemIntegration","VERSION","ACTOR_CLASS_TYPE","ITEM_QUANTITY_ATTRIBUTE","ITEM_PRICE_ATTRIBUTE","ITEM_FILTERS","filters","UNSTACKABLE_ITEM_TYPES","ITEM_SIMILARITIES","CURRENCIES","abbreviation","primary","exchangeRate","systemDataModels","monster","Actors","unregisterSheet","registerSheet","makeDefault","Items","templatePaths","loadTemplates","localized","langArray","bar","macros.createOseMacro","ActorDirectory","control","replaceWith","party.addControl","Settings","gamesystem","rendered","docs","styling","insertAfter","FrameViewer","preUpdateCombat","app","chatListeners","condition","msg","blindable","isTreasureTable","treasureTableToggle","toggleClass","isTreasure","hide","attr","party.update","metadata","querySelectorAll","getDocuments","documentId","doc","tagTemplate","parseHTML","foundryDocument"],"mappings":"AAqEO,SAASA,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,GAAO,CAC3F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,GAAO,CAC9F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAO,KAIhBO,KAAKR,EAAWK,EAAY,CAC9GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OACtE,GACA,CA0JO,SAASO,EAAuBC,EAAUC,EAAOC,EAAMC,GAC1D,GAAa,MAATD,IAAiBC,EAAG,MAAM,IAAIC,UAAU,iDAC5C,GAAqB,mBAAVH,EAAuBD,IAAaC,IAAUE,GAAKF,EAAMI,IAAIL,GAAW,MAAM,IAAII,UAAU,4EACvG,MAAgB,MAATF,EAAeC,EAAa,MAATD,EAAeC,EAAEG,KAAKN,GAAYG,EAAIA,EAAEb,MAAQW,EAAMM,IAAIP,EACxF,CAEO,SAASQ,EAAuBR,EAAUC,EAAOX,EAAOY,EAAMC,GACjE,GAAa,MAATD,EAAc,MAAM,IAAIE,UAAU,kCACtC,GAAa,MAATF,IAAiBC,EAAG,MAAM,IAAIC,UAAU,iDAC5C,GAAqB,mBAAVH,EAAuBD,IAAaC,IAAUE,GAAKF,EAAMI,IAAIL,GAAW,MAAM,IAAII,UAAU,2EACvG,MAAiB,MAATF,EAAeC,EAAEG,KAAKN,EAAUV,GAASa,EAAIA,EAAEb,MAAQA,EAAQW,EAAMQ,IAAIT,EAAUV,GAASA,CACxG,mDC/Nc,MAAOoB,EAwBnBC,YACEC,EAAU,WACVC,EAAMH,EAAiCI,mBACvCC,EAAQ,gBAhBVC,EAAoBP,IAAAQ,UAAA,GAEpBC,EAAKT,IAAAQ,UAAA,GAELE,EAAAV,IAAAQ,KAAU,GAcRT,EAAAS,KAAID,EAAuBJ,EAAO,KAClCJ,EAAAS,KAAIC,EAAQL,EAAG,IAChB,CAEGD,cACF,OAAOb,EAAAkB,KAAID,EAAA,IACZ,CAEGI,cACF,MAAoC,aAA7BrB,EAAAkB,KAAwBD,EAAA,IAChC,CAEGK,UACF,OAAOC,KAAKC,MAAO,IAAMN,KAAK3B,MAAS2B,KAAKJ,IAAK,EAAG,IACrD,CAEGW,iBACF,OAAOP,KAAK3B,MAAQ2B,KAAKJ,GAC1B,CAGGY,YACF,MAAO,EACR,CAEGnC,YACF,OAAOS,EAAAkB,KAAIE,EAAA,IACZ,CAEGN,UACF,OAAOd,EAAAkB,KAAIC,EAAA,IACZ,CAEGL,QAAIvB,GACNkB,EAAAS,KAAIC,EAAQ5B,EAAK,IAClB,CAMGoC,wBACF,OACET,KAAK3B,MACL2B,KAAKJ,KACFH,EAAiCiB,iBAAiBC,KAAO,MACzD7B,EAAAkB,KAAIY,EAAA,IAAAC,IAAW,EAErB,CAEGC,yBACF,OACEd,KAAK3B,MACL2B,KAAKJ,KACFH,EAAiCiB,iBAAiBK,aAAe,MACjEjC,EAAAkB,KAAIY,EAAA,IAAAC,IAAW,EAErB,CAEGG,wBACF,OACEhB,KAAK3B,MACL2B,KAAKJ,KACFH,EAAiCiB,iBAAiBO,QAAU,MAC5DnC,EAAAkB,KAAIY,EAAA,IAAAC,IAAW,EAErB,uEA5BC,OAAOb,KAAKJ,IAAMH,EAAiCI,kBACrD,EAjEOqB,OAAAC,eAAA1B,EAAA,qBAAA,iDAAqB,OAErByB,OAAAC,eAAA1B,EAAA,mBAAA,2CAAmBpB,MAAA,CACxB4C,QAAS,GACTF,aAAc,KACdJ,KAAM,MCNW,MAAAS,UACX3B,EAsCRC,YACEE,EAAMH,EAAiCI,mBACvCC,EAAgB,GAChBuB,EAAmB,IAEnBC,MAAMF,EAAsCG,KAAM3B,GAXpD4B,EAAQhC,IAAAQ,UAAA,GAERyB,EAAqBjC,IAAAQ,UAAA,GAErB0B,EAAelC,IAAAQ,UAAA,GAQbT,EAAAS,QACEqB,aAAO,EAAPA,EAASM,sBACTP,EAAsCO,oBAAmB,KAE3DpC,EAAAS,OAAeF,EAAM8B,QACnB,CAACC,GAAeN,OAAMO,QAAUC,WAAUC,WAAUC,aACzC,SAATV,GAAoBQ,EAAiBF,EAAMG,EAAS3D,MAAQ4D,EAA7BJ,GACjC,GACD,KAEDtC,EAAAS,OAAsBF,EAAM8B,QAC1B,CAACM,GAAYX,OAAMO,QAAUP,KAAMY,EAAWC,eAC/B,UAATb,GAAqBa,EAET,UAAdD,GACAD,IACEd,EAAsCiB,YAAYC,UAE7ClB,EAAsCiB,YAAYE,MACzC,UAAdJ,EACKf,EAAsCiB,YAAYG,MACpDN,EATmCA,GAW5Cd,EAAsCiB,YAAYC,eAErD,CAEG9B,YACF,MAAO,CAAE,IAAM1B,EAAAkB,KAAyByB,EAAA,KAAIzB,KAAKJ,IAClD,CAEG6C,4BACF,OAAOzC,KAAK3B,OAASS,EAAAkB,WACtB,CAEG3B,YACF,OAAOS,EAAAkB,KAAIwB,EAAA,IACZ,CAEGkB,uCACF,OAAO1C,KAAK3B,OAASS,EAAAkB,WACtB,CAEGS,wBACF,OACE3B,EAAAkB,KAAmB0B,EAAA,OACjBN,EAAsCiB,YAAYG,OACpDxC,KAAK3B,OAASS,EAAAkB,KAAIyB,EAAA,IAErB,CAEGX,yBACF,MAAM6B,EACJ7D,EAAAkB,KAAmB0B,EAAA,OACnBN,EAAsCiB,YAAYG,MAC9CI,EACJ9D,EAAAkB,KAAmB0B,EAAA,OACjBN,EAAsCiB,YAAYE,OACpDvC,KAAK3B,OAASS,EAAAkB,YAChB,OAAO2C,GAAWC,CACnB,CAEG5B,wBACF,OACElC,EAAAkB,KAAmB0B,EAAA,OACjBN,EAAsCiB,YAAYE,OACpDvC,KAAK0C,gCAER,4CA7GMxB,OAAAC,eAAAC,EAAA,yBAAA,iDAAyB,KAEzBF,OAAAC,eAAAC,EAAA,uBAAA,iDAAuB,KAKvBF,OAAAC,eAAAC,EAAA,OAAA,iDAAO,UAKPF,OAAAC,eAAAC,EAAA,iBAAA,iDAAiB,iCAKjBF,OAAAC,eAAAC,EAAA,sBAAA,iDAAsB,MAMtBF,OAAAC,eAAAC,EAAA,cAAA,2CAAc/C,MAAA,CACnBiE,UAAW,EACXC,MAAO,EACPC,MAAO,KCtCU,MAAAK,UACXpD,EAmBRC,YACEE,EAAMH,EAAiCI,mBACvCC,EAAgB,IAEhBwB,MAAMuB,EAAyCtB,KAAM3B,GANvDkD,EAAQtD,IAAAQ,UAAA,GAONT,EAAAS,OAAeF,EAAM8B,QACnB,CAACC,GAAON,OAAMO,QAAUE,WAAUC,aACnB,SAATV,EAAwBM,EAAMG,EAAS3D,MAAQ4D,EAC/C,CAAC,SAAU,QAAS,aAAac,SAASxB,GACrCM,EAAMI,EACRJ,GAET,GACD,IACF,CAGGrB,YACF,OAAOU,OAAO8B,OAAOvD,EAAiCiB,iBACvD,CAEGrC,YACF,OAAOS,EAAAkB,KAAI8C,EAAA,IACZ,gBAvCM5B,OAAAC,eAAA0B,EAAA,yBAAA,iDAAyB,KAEzB3B,OAAAC,eAAA0B,EAAA,uBAAA,iDAAuB,KAKvB3B,OAAAC,eAAA0B,EAAA,OAAA,iDAAO,aAKP3B,OAAAC,eAAA0B,EAAA,iBAAA,iDAAiB,oCChBL,MAAAI,UACXxD,EA0BRC,YACEE,EAAMH,EAAiCI,mBACvCC,EAAgB,IAEhBwB,MAAM2B,EAAyC1B,KAAM3B,GARvDsD,EAAA1D,IAAAQ,KAAU,GAEVmD,EAAoB3D,IAAAQ,UAAA,GAOlBT,EAAAS,KAA2BmD,EAAArD,EAAMsD,MAC9BC,GAAuB,SAAXA,EAAE9B,OAAoB8B,EAAEvB,OAAOC,WAC7C,KACDxC,EAAAS,OACEF,EAAM8B,QACJ,CAACC,GAAON,OAAMO,QAAUC,WAAUC,WAAUC,cAC1C,GAAa,UAATV,GAA6B,YAATA,EAAoB,OAAOM,EAEnD,IAAIxD,EAAQwD,EAKZ,MAHa,SAATN,GAAmBQ,IAAU1D,GAAS2D,EAAS3D,MAAQ4D,GACvD,CAAC,SAAU,QAAS,aAAac,SAASxB,KAAOlD,GAAS4D,GAEvD5D,CAAK,GAEd,IAEDS,EAAAkB,KAAwBmD,EAAA,KACrBF,EAAyCK,WACzC,GAAE,IACT,CAGG9C,YACF,OAAOU,OAAO8B,OAAOvD,EAAiCiB,iBACvD,CAEGrC,YACF,OAAOS,EAAAkB,KAAIkD,EAAA,IACZ,8BAzDMhC,OAAAC,eAAA8B,EAAA,yBAAA,iDAAyB,KAEzB/B,OAAAC,eAAA8B,EAAA,uBAAA,iDAAuB,KAKvB/B,OAAAC,eAAA8B,EAAA,OAAA,iDAAO,aAKP/B,OAAAC,eAAA8B,EAAA,iBAAA,iDAAiB,oCAKjB/B,OAAAC,eAAA8B,EAAA,aAAA,iDAAa,KCpBD,MAAAM,UACX9D,EAiBRC,cACE4B,MAAMiC,EAAyChC,KAChD,CAGGlD,YACF,OAAO,CACR,EArBM6C,OAAAC,eAAAoC,EAAA,yBAAA,iDAAyB,KAEzBrC,OAAAC,eAAAoC,EAAA,uBAAA,iDAAuB,KAKvBrC,OAAAC,eAAAoC,EAAA,OAAA,iDAAO,aAKPrC,OAAAC,eAAAoC,EAAA,iBAAA,iDAAiB,oCCjBL,MAAAC,UACX/D,EAkDRC,YAAYE,EAAM,GAAIE,EAAgB,IACpCwB,MAAMkC,EAA0CjC,KAAM3B,GApCxD6D,EAAajE,IAAAQ,UAAA,GAEb0D,EAAWlE,IAAAQ,UAAA,GAEX2D,EAAKnE,IAAAQ,UAAA,GAEL4D,EAAepE,IAAAQ,UAAA,GACf6D,EAAiBrE,IAAAQ,UAAA,GACjB8D,EAAetE,IAAAQ,UAAA,GAEf+D,EAAYvE,IAAAQ,UAAA,GACZgE,EAAcxE,IAAAQ,UAAA,GACdiE,EAAezE,IAAAQ,UAAA,GAgBfkE,EAAQ1E,IAAAQ,UAAA,GAERmE,EAAgB3E,IAAAQ,UAAA,GAEhBoE,EAAc5E,IAAAQ,UAAA,GAMZT,EAAAS,KAAI0D,EAAc,GAAE,KACpBnE,EAAAS,KAAIyD,EAAgB,EAAC,KACrBlE,EAAAS,KAAqBoE,EAAA/D,KAAKgE,KACxBvE,EAAM8B,QACJ,CAACC,GAAON,OAAMO,QAAUE,WAAUsC,YAAWlC,eAC9B,SAATb,GAAoBa,EAEpB,CAAC,SAAU,QAAS,aAAaW,SAASxB,KAAUa,EAC/CP,EAAMyC,EACRzC,EAHEA,EAAMG,EAAS3D,MAAQiG,GAKlC,SAGJ/E,EAAAS,KAAuBmE,EAAA9D,KAAKgE,KAC1BvE,EAAM8B,QACJ,CAACC,GAAON,OAAMO,QAAUE,WAAUsC,YAAWlC,eAC9B,SAATb,GAAmBa,EACdP,EAAMG,EAAS3D,MAAQiG,EAC5B,CAAC,SAAU,QAAS,aAAavB,SAASxB,IAASa,EAC9CP,EAAMyC,EACRzC,GAET,SAGJtC,EAAAS,OAAsBlB,EAAAkB,YAAelB,EAAAkB,KAAS2D,EAAA,MAAIH,EAA0Ce,uBAAuBC,YAAc,UACjIjF,EAAAS,OAAwBlB,EAAAkB,YAAelB,EAAAkB,KAAS2D,EAAA,MAAIH,EAA0Ce,uBAAuBE,cAAgB,UACrIlF,EAAAS,OAAsBlB,EAAAkB,YAAelB,EAAAkB,KAAS2D,EAAA,MAAIH,EAA0Ce,uBAAuBG,aAAe,UAElInF,EAAAS,OAAmBlB,EAAAkB,YAAelB,EAAAkB,KAAS2D,EAAA,MAAIH,EAA0CmB,yBAAyBC,SAAW,UAC7HrF,EAAAS,OAAqBlB,EAAAkB,YAAelB,EAAAkB,KAAS2D,EAAA,MAAIH,EAA0CmB,yBAAyBE,WAAa,UACjItF,EAAAS,OAAsBlB,EAAAkB,YAAelB,EAAAkB,KAAS2D,EAAA,MAAIH,EAA0CmB,yBAAyBG,YAAc,SACpI,CAGGtE,YACF,OAAOR,KAAK+E,yBACR7D,OAAO8B,OACLQ,EAA0CmB,0BAE5CzD,OAAO8B,OACLQ,EAA0Ce,uBAEjD,CAEGQ,+BACF,MAAMC,EAAiB9D,OAAO8B,OAC5BQ,EAA0CmB,0BAEtCM,EAAe/D,OAAO8B,OAC1BQ,EAA0Ce,wBAE5C,IAAIW,EAAgBF,EAAeG,WAChC7G,GAASA,EAAQQ,EAAAkB,KAAImE,EAAA,KAAmBrF,EAAAkB,KAAIyD,EAAA,KAAiB,MAEhEyB,GAAmC,IAAnBA,EAAuB,EAAIA,EAE3C,IAAIE,EAAcH,EAAaE,WAC5B7G,GAASA,EAAQQ,EAAAkB,KAAIoE,EAAA,KAAiBtF,EAAAkB,KAAI0D,EAAA,KAAe,MAE5D,OADA0B,GAA+B,IAAjBA,EAAqB,EAAIA,KAC7BF,GAAiBE,EAC5B,CAEG/G,YACF,OAAOS,EAAAkB,KAAIkE,EAAA,IACZ,CAEGtE,UACF,OAAOd,EAAAkB,KAAI2D,EAAA,IACZ,CAEG3C,wBACF,OAAOhB,KAAK+E,yBACRjG,EAAAkB,KAAgB+D,EAAA,KAChBjF,EAAAkB,KAAI4D,EAAA,IACT,CAEG9C,yBACF,OAAOd,KAAK+E,yBACRjG,EAAAkB,KAAkBgE,EAAA,KAClBlF,EAAAkB,KAAI6D,EAAA,IACT,CAEGpD,wBACF,OAAOT,KAAK+E,yBACRjG,EAAAkB,KAAmBiE,EAAA,KACnBnF,EAAAkB,KAAI8D,EAAA,IACT,0KA1IM5C,OAAAC,eAAAqC,EAAA,yBAAA,2CAAyBnF,MAAA,CAC9BmG,YAAa,KACbC,cAAe,GACfC,aAAc,QAGTxD,OAAAC,eAAAqC,EAAA,2BAAA,2CAA2BnF,MAAA,CAChCuG,SAAU,MACVC,WAAY,MACZC,YAAa,SAiBR5D,OAAAC,eAAAqC,EAAA,yBAAA,iDAAyB,KAEzBtC,OAAAC,eAAAqC,EAAA,uBAAA,iDAAuB,KAKvBtC,OAAAC,eAAAqC,EAAA,OAAA,iDAAO,cAKPtC,OAAAC,eAAAqC,EAAA,iBAAA,iDAAiB,qCClCnB,MAAM6B,EAAM,CAEjBC,aACE,MAAO,GAAGtF,KAAKuF,iBAChB,EAEGA,iBACF,MAAO,YAAYC,KAAK1D,OAAO2D,IAChC,EAEGC,iBACF,MAAO,GAAG1F,KAAKuF,mBAChB,EACGI,kBACF,MAAMhG,EAAU6F,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,qBAClD,OAAOzF,KAAK6F,mBAAmBlG,IAAYK,KAAK6F,mBAAmBC,QACpE,EACDD,mBAAoB,CAClBE,MAAO3E,EACP4E,SAAU/C,EACVgD,SAAUpD,EACViD,SAAUvC,EACV2C,UAAW1C,GAEb2C,OAAQ,CACNC,IAAK,sBACLC,IAAK,sBACLC,IAAK,sBACLC,IAAK,sBACLC,IAAK,sBACLC,IAAK,uBAEPC,aAAc,CACZN,IAAK,uBACLC,IAAK,uBACLC,IAAK,uBACLC,IAAK,uBACLC,IAAK,uBACLC,IAAK,wBAEPE,mBAAoB,CAClBC,GAAI,0BACJC,GAAI,0BACJC,GAAI,0BACJC,GAAI,2BAENC,yBAA0B,CACxBJ,GAAI,2BACJC,GAAI,2BACJC,GAAI,2BACJC,GAAI,4BAENE,UAAW,CACTvI,OAAQ,IACRwI,MAAO,IACPC,MAAO,KAETC,YAAa,CACXC,MAAO,wBACPC,KAAM,uBACNC,UAAW,4BACXC,OAAQ,yBACRC,MAAO,yBAETC,WAAY,CACVL,MAAO,uBACPC,KAAM,sBACNC,UAAW,2BACXC,OAAQ,wBACRC,MAAO,wBAETE,MAAO,CACLrF,UAAW,sBACXC,MAAO,kBACPC,MAAO,kBACPoF,OAAQ,oBAEVC,qBAAsB,CACpBC,SAAW,WACXC,SAAW,WACXC,eAAiB,kBAEnBC,OAAQ,CACNC,MAAO,mBACPC,IAAK,iBACLC,OAAQ,oBACRC,OAAQ,oBACRC,KAAM,kBACNC,OAAQ,oBACRC,MAAO,oBAETC,UAAW,CACT,SACA,SACA,UACA,UACA,UACA,eACA,SACA,WACA,SACA,WACA,QACA,UACA,SACA,WACA,QACA,YACA,SACA,aACA,SACA,WACA,OACA,SACA,SAEFC,KAAM,CACJC,MAAO,kBACPC,QAAS,oBACTC,KAAM,iBACNC,UAAW,sBACXC,MAAO,kBACPC,MAAO,kBACPC,OAAQ,mBACRC,OAAQ,mBACRC,OAAQ,oBAEVC,UAAW,CACLT,YACF,MAAO,CACLU,MAAOC,OAAOjE,IAAIqD,KAAKC,MACvBY,MAAO,GAAGD,OAAOjE,IAAIK,uBACrB8D,KAAM,WAET,EACGZ,cACF,MAAO,CACLS,MAAOC,OAAOjE,IAAIqD,KAAKE,QACvBW,MAAO,GAAGD,OAAOjE,IAAIK,yBACrB8D,KAAM,eAET,EACGX,WACF,MAAO,CACLQ,MAAOC,OAAOjE,IAAIqD,KAAKG,KACvBU,MAAO,GAAGD,OAAOjE,IAAIK,sBACrB8D,KAAM,oBAET,EACGV,gBACF,MAAO,CACLO,MAAOC,OAAOjE,IAAIqD,KAAKI,UACvBS,MAAO,GAAGD,OAAOjE,IAAIK,2BACrB8D,KAAM,mBAET,EACGT,YACF,MAAO,CACLM,MAAOC,OAAOjE,IAAIqD,KAAKK,MACvBQ,MAAO,GAAGD,OAAOjE,IAAIK,uBACrB8D,KAAM,kBAET,EACGR,YACF,MAAO,CACLK,MAAOC,OAAOjE,IAAIqD,KAAKM,MACvBO,MAAO,GAAGD,OAAOjE,IAAIK,uBACrB8D,KAAM,iBAET,EACGP,aACF,MAAO,CACLI,MAAOC,OAAOjE,IAAIqD,KAAKO,OACvBM,MAAO,GAAGD,OAAOjE,IAAIK,wBACrB8D,KAAM,WAET,EACGN,aACF,MAAO,CACLG,MAAOC,OAAOjE,IAAIqD,KAAKQ,OACvBK,MAAO,GAAGD,OAAOjE,IAAIK,wBACrB8D,KAAM,UAET,EACGL,aACF,MAAO,CACLE,MAAOC,OAAOjE,IAAIqD,KAAKS,OACvBI,MAAO,GAAGD,OAAOjE,IAAIK,wBACrB8D,KAAM,oBAET,GAEHC,WAAY,CACNd,YACF,MAAO,GAAGW,OAAOjE,IAAIK,sBACtB,EACGkD,cACF,MAAO,cACR,EACGC,WACF,MAAO,GAAGS,OAAOjE,IAAIK,qBACtB,EACGoD,gBACF,MAAO,GAAGQ,OAAOjE,IAAIK,0BACtB,EACGqD,YACF,MAAO,GAAGO,OAAOjE,IAAIK,sBACtB,EACGsD,YACF,MAAO,GAAGM,OAAOjE,IAAIK,sBACtB,EACGuD,aACF,MAAO,GAAGK,OAAOjE,IAAIK,uBACtB,EACGwD,aACF,MAAO,GAAGI,OAAOjE,IAAIK,uBACtB,EACGyD,aACF,MAAO,GAAGG,OAAOjE,IAAIK,uBACtB,GAEHgE,cAAe,CACb,EAAG,CACDC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEL,EAAG,CACDJ,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEL,EAAG,CACDJ,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEL,EAAG,CACDJ,EAAG,EACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEL,GAAI,CACFJ,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,IAEL,GAAI,CACFJ,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAEL,GAAI,CACFJ,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAEL,GAAI,CACFJ,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAEL,GAAI,CACFJ,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,IAGPC,cAAe,CACb,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,GAAI,GACJ,GAAI,GACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,IC9TFC,EAAU,CACdC,gBAAeC,MACbA,EAAQ,GAAEC,KACVA,EAAO,CAAE,EAAAC,MACTA,EAAQ,KAAIC,OACZA,EAAS,KAAIC,QACbA,EAAU,KAAIC,KACdA,EAAO,KAAIC,YACXA,GAAc,GACZ,IACF,MAAMC,EAAW,GAAGrF,EAAIC,+CAElBqF,EAAW,CACfC,KAAMpF,KAAKoF,KAAKnF,GAChB8E,WAGIM,EAAe,CACnBR,QACAC,SACAF,OACAU,OAAQxB,OAAOjE,KAIJ,OAATmF,GAAiBA,EAAKO,MAAM1M,OAC9B8L,EAAMa,KAAKR,EAAKO,MAAM1M,OAGxB,MAAM4M,EAAO,IAAIC,KAAKf,EAAMgB,KAAK,KAAMf,SACjCa,EAAKG,SAAS,CAACC,cAAc,IAGnC,IAAIC,EAAW9F,KAAKI,SAAStG,IAAI,OAAQ,YAkBzC,OAjBAgM,EAAWd,EAAOA,EAAKc,SAASjN,MAAQiN,GAGnCd,GAAQJ,EAAKa,KAAKM,YACrBD,EAAW9F,KAAKoF,KAAKY,KAAO,WAAa,aAGvC,CAAC,SAAU,aAAazI,SAASuI,KACnCX,EAASc,QAAUC,YAAYC,qBAAqB,OACrC,aAAbL,IAAyBX,EAASc,QAAU,CAACjG,KAAKoF,KAAKgB,MAC1C,cAAbN,IACFX,EAASkB,OAAQ,EACjBzB,EAAKa,KAAKM,WAAY,GAGxBV,EAAanM,OAASuL,EAAQ6B,aAAa1B,EAAMa,GAE1C,IAAIhN,SAASC,IAClB+M,EAAKc,SAASnN,MAAMoN,IAClBnB,EAAaoB,QAAUD,EACvBE,eAAexB,EAAUG,GAAcjM,MAAMuN,IAC3CxB,EAASwB,QAAUA,EAEf3G,KAAK4G,OACP5G,KAAK4G,OACFC,YACCpB,EACAzF,KAAKoF,MACL,EACAD,EAASc,QACTd,EAASkB,OAEVjN,MAAM0N,KACe,IAAhB7B,GAAuBiB,YAAYa,OAAO5B,GAC9CzM,EAAQ+M,EAAK,KAGjBN,EAAS6B,MAAQlD,OAAOmD,OAAOC,MACX,IAAhBjC,GAAuBiB,YAAYa,OAAO5B,GAC9CzM,EAAQ+M,GACT,GACD,GACF,GAEL,EASDa,aAAa1B,EAAMa,GAEjB,MAAMvM,EAAS,CACbiO,WAAW,EACXC,WAAW,EACXC,OAAQzC,EAAKa,KAAK4B,OAClBC,MAAO7B,EAAK6B,OAGRC,EAAM9B,EAAK+B,MAAM,GAAGC,QAAQ,GAAGvO,OAErC,OAAQ0L,EAAKa,KAAK1J,MAChB,IAAK,SACC0J,EAAK6B,QAAUpO,EAAOmO,OACxBnO,EAAOiO,WAAY,EAEnBjO,EAAOkO,WAAY,EAGrB,MAGF,IAAK,QAEC3B,EAAK6B,OAASpO,EAAOmO,OACvBnO,EAAOiO,WAAY,EAEnBjO,EAAOkO,WAAY,EAGrB,MAGF,IAAK,QAEC3B,EAAK6B,OAASpO,EAAOmO,OACvBnO,EAAOiO,WAAY,EAEnBjO,EAAOkO,WAAY,EAGrB,MAGF,IAAK,QAES,IAARG,GAAc9B,EAAK6B,OAASpO,EAAOmO,QAAUE,EAAM,GACrDrO,EAAOiO,WAAY,EAEnBjO,EAAOkO,WAAY,EAGrB,MAGF,IAAK,QAAS,CAEZ,MAAMM,MAAEA,GAAU9C,EAAKa,KACvB,IAAIkC,EAASjM,OAAO8B,OAAOkK,GAAO,GAClC,IAAK,IAAI7J,EAAI,EAAGA,GAAK4H,EAAK6B,MAAOzJ,IAC3B6J,EAAM7J,KACR8J,EAASD,EAAM7J,IAGnB3E,EAAO0O,QAAUD,EAEjB,KACD,CAED,QACEzO,EAAOiO,WAAY,EACnBjO,EAAOkO,WAAY,EAKvB,OAAOlO,CACR,EAUD2O,gBAAe,CAACpC,EAAMqC,EAAOC,IAEa,IAApCtC,EAAK+B,MAAM,GAAGC,QAAQ,GAAGvO,SAIW,KAApCuM,EAAK+B,MAAM,GAAGC,QAAQ,GAAGvO,QAGtBuM,EAAK6B,MAAQS,GAAMD,GAY5BE,mBAAmBpD,EAAMa,GAEvB,MAAMvM,EAAS,CACbiO,WAAW,EACXC,WAAW,EACXC,OAAQ,GACRC,MAAO7B,EAAK6B,OAEdpO,EAAOmO,OAASzC,EAAKa,KAAKqC,MAC1B,MAAMG,EAAkBrD,EAAKa,KAAK4B,QAAQa,OAAO5L,QAAU,KAErD6L,EAAWvD,EAAKa,KAAK4B,OAASY,EAAgBF,GAAGlP,MAAQ,GACzDuP,EAAYxD,EAAKa,KAAK4B,OAASY,EAAgBI,IAAIxP,OAAS,GAGlE,GAFAK,EAAOoP,OAAS1D,EAAKa,KAAK4B,QAAU,KAEhCrH,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,eAAgB,CACpD,MAAMsI,EAAc,GAAK3D,EAAKa,KAAKqC,MAC/BtN,KAAKqN,gBAAgBpC,EAAM2C,EAAWG,IACxCrP,EAAO0O,QAAU5H,KAAKwI,KAAKC,OACzB,sCACA,CACEvP,OAAQuM,EAAK6B,QAGjBpO,EAAOiO,WAAY,IAEnBjO,EAAO0O,QAAU5H,KAAKwI,KAAKC,OACzB,sCACA,CACElD,MAAOrM,EAAOmO,SAGlBnO,EAAOkO,WAAY,EAE3B,MAAW,GAAI5M,KAAKqN,gBAAgBpC,EAAMvM,EAAOmO,OAAQc,GAAW,CAE9D,MAAMtP,EAAQgC,KAAKC,MAAM5B,EAAOmO,OAAS5B,EAAK6B,OAAQ,EAAG,GACzDpO,EAAO0O,QAAU5H,KAAKwI,KAAKC,OAAO,6BAA8B,CAC9DvP,OAAQL,EACR0M,MAAOrM,EAAOmO,SAEhBnO,EAAOiO,WAAY,CACzB,MACMjO,EAAO0O,QAAU5H,KAAKwI,KAAKC,OAAO,6BAA8B,CAC9DlD,MAAOrM,EAAOmO,SAEhBnO,EAAOkO,WAAY,EAErB,OAAOlO,CACR,EAoBDwL,sBAAqBC,MACnBA,EAAQ,GAAEC,KACVA,EAAO,CAAE,EAAA8D,MACTA,EAAQ,CAAE,EAAA7D,MACVA,EAAQ,KAAIC,OACZA,EAAS,KAAIC,QACbA,EAAU,KAAIC,KACdA,EAAO,MACL,IACF,GAAqD,IAAjDJ,EAAKa,KAAKkD,IAAIC,QAAQC,GAAY,KAANA,IAAUC,OAOxC,YAHAC,GAAGC,cAAcC,MACf,uEAIJ,MAAM/D,EAAW,GAAGrF,EAAIC,+CAClBqF,EAAW,CACfC,KAAMpF,KAAKoF,KAAKnF,GAChB8E,UACA2D,SAGIrD,EAAe,CACnBR,QACAC,SACAF,OACAU,OAAQxB,OAAOjE,KAIJ,OAATmF,GAAiBA,EAAKO,MAAM1M,OAAO8L,EAAMa,KAAKR,EAAKO,MAAM1M,OAE7D,MAAM4M,EAAO,IAAIC,KAAKf,EAAMgB,KAAK,KAAMf,SACjCa,EAAKG,WACX,MAAMsD,EAAU,IAAIxD,KAAKd,EAAKa,KAAKkD,IAAIhD,KAAK,KAAMf,SAC5CsE,EAAQtD,WAGd,IAAIE,EAAW9F,KAAKI,SAAStG,IAAI,OAAQ,YAkBzC,OAjBAgM,EAAWd,EAAOA,EAAKc,SAASjN,MAAQiN,EAGpClB,EAAKa,KAAKM,YACZD,EAAW9F,KAAKoF,KAAKY,KAAO,WAAa,aAGvC,CAAC,SAAU,aAAazI,SAASuI,KACnCX,EAASc,QAAUC,YAAYC,qBAAqB,OACrC,aAAbL,IAAyBX,EAASc,QAAU,CAACjG,KAAKoF,KAAKgB,MAC1C,cAAbN,IACFX,EAASkB,OAAQ,EACjBzB,EAAKa,KAAKM,WAAY,GAGxBV,EAAanM,OAASuL,EAAQuD,mBAAmBpD,EAAMa,GAEhD,IAAIhN,SAASC,IAClB+M,EAAKc,SAASnN,MAAMoN,IAClBnB,EAAaoB,QAAUD,EACvB0C,EAAQ3C,SAASnN,MAAM+P,IACrB9D,EAAa+D,WAAaD,EAC1BzC,eAAexB,EAAUG,GAAcjM,MAAMuN,IAC3CxB,EAASwB,QAAUA,EAEf3G,KAAK4G,OACP5G,KAAK4G,OACFC,YACCpB,EACAzF,KAAKoF,MACL,EACAD,EAASc,QACTd,EAASkB,OAEVjN,MAAK,KACAiM,EAAanM,OAAOiO,WACtB9B,EAAanM,OAAOyP,IAAMO,EAAQ5B,MAClCtH,KAAK4G,OACFC,YACCqC,EACAlJ,KAAKoF,MACL,EACAD,EAASc,QACTd,EAASkB,OAEVjN,MAAK,KACJ8M,YAAYa,OAAO5B,GACnBzM,EAAQ+M,EAAK,MAGjBS,YAAYa,OAAO5B,GACnBzM,EAAQ+M,GACT,KAGLN,EAAS6B,MAAQlD,OAAOmD,OAAOC,KAC/BhB,YAAYa,OAAO5B,GACnBzM,EAAQ+M,GACT,GACD,GACF,GACF,GAEL,EAEDf,gBAAeC,MACbA,EAAQ,GAAEC,KACVA,EAAO,CAAE,EAAAyE,WACTA,GAAa,EAAKtE,QAClBA,EAAU,KAAID,OACdA,EAAS,KAAID,MACbA,EAAQ,KAAII,YACZA,GAAc,GACZ,IACF,IAAIqE,GAAS,EACb,MAAMpE,EAAW,GAAGrF,EAAIC,+CAClByJ,EAAa,CACjBC,QAAS7E,EAAMgB,KAAK,KACpBf,OACAkB,SAAU9F,KAAKI,SAAStG,IAAI,OAAQ,YACpC2P,UAAW3F,OAAO4F,KAAKD,WAGnBE,EAAW,CACfhF,QACAC,OACAC,QACAC,SACAC,UACAE,eAEF,GAAIoE,EACF,OAAO5E,EAAQmF,SAASD,GAG1B,MAAME,EAAU,CACdC,GAAI,CACFjG,MAAO7D,KAAKwI,KAAKuB,SAAS,YAC1B/F,KAAM,kCACNgG,SAAWC,IACTX,GAAS,EACTK,EAAS3E,KAAOiF,EAAK,GAAGC,cAAc,QACtCzE,EAAOhB,EAAQmF,SAASD,EAAS,GAGrCQ,MAAO,CACLtG,MAAO7D,KAAKwI,KAAKuB,SAAS,yBAC1B/F,KAAM,+BACNgG,SAAWC,IACTX,GAAS,EACTK,EAAS3E,KAAOiF,EAAK,GAAGC,cAAc,QACtCP,EAAShF,MAAMa,KAAK,GAAGmE,EAAS/E,KAAKa,KAAK0E,SAC1CR,EAAS9E,OAAS,IAAI7E,KAAKwI,KAAKuB,SAAS,6BACvCJ,EAAS/E,KAAKa,KAAK0E,SAErB1E,EAAOhB,EAAQmF,SAASD,EAAS,GAGrCS,OAAQ,CACNpG,KAAM,+BACNH,MAAO7D,KAAKwI,KAAKuB,SAAS,cAC1BC,SAAWC,IAAD,IAIRA,QAAavD,eAAexB,EAAUqE,GAC5C,IAAI9D,EAGJ,OAAO,IAAIhN,SAASC,IAClB,IAAI2R,OAAO,CACTxF,QACA8B,QAASsD,EACTJ,UACAS,QAAS,KACTC,MAAO,KACL7R,IAAQ4Q,GAAS7D,EAAa,IAE/Bc,QAAO,EAAK,GAElB,EAED7B,YAAWC,MACTA,EAAQ,GAAEC,KACVA,EAAO,CAAE,EAAAyE,WACTA,GAAa,EAAKtE,QAClBA,EAAU,KAAID,OACdA,EAAS,KAAID,MACbA,EAAQ,KAAII,YACZA,GAAc,EAAIyD,MAClBA,EAAQ,CAAE,GACR,IACF,IAAIY,GAAS,EACb,MAAMpE,EAAW,GAAGrF,EAAIC,+CAClByJ,EAAa,CACjBC,QAAS7E,EAAMgB,KAAK,KACpBf,OACAkB,SAAUlB,EAAKa,KAAKM,UAChB,YACA/F,KAAKI,SAAStG,IAAI,OAAQ,YAC9B2P,UAAW3F,OAAO4F,KAAKD,WAEnBE,EAAW,CACfhF,QACAC,OACAC,QACAC,SACAC,UACAE,cACAyD,SAEF,GAAIW,EACF,MAAO,CAAC,QAAS,UAAW,UAAU9L,SAASqH,EAAKa,KAAK1J,MACrD0I,EAAQ+F,eAAeb,GACvBlF,EAAQmF,SAASD,GAGvB,MAAME,EAAU,CACdC,GAAI,CACFjG,MAAO7D,KAAKwI,KAAKuB,SAAS,YAC1B/F,KAAM,kCACNgG,SAAWC,IACTX,GAAS,EACTK,EAAS3E,KAAOiF,EAAK,GAAGC,cAAc,QACtCzE,EAAO,CAAC,QAAS,UAAW,UAAUlI,SAASqH,EAAKa,KAAK1J,MACrD0I,EAAQ+F,eAAeb,GACvBlF,EAAQmF,SAASD,EAAS,GAGlCS,OAAQ,CACNpG,KAAM,+BACNH,MAAO7D,KAAKwI,KAAKuB,SAAS,cAC1BC,SAAWC,IAAD,IAIRA,QAAavD,eAAexB,EAAUqE,GAC5C,IAAI9D,EAGJ,OAAO,IAAIhN,SAASC,IAClB,IAAI2R,OAAO,CACTxF,QACA8B,QAASsD,EACTJ,UACAS,QAAS,KACTC,MAAO,KACL7R,IAAQ4Q,GAAS7D,EAAa,IAE/Bc,QAAO,EAAK,GAElB,GCpgBY,MAAMkE,UAA4BC,gBACpCC,4BACT,MAAM9O,EAAUC,MAAM6O,eAMtB,OALA9O,EAAQ+O,QAAU,CAAC,MAAO,SAAU,WACpC/O,EAAQoE,GAAK,oBACbpE,EAAQqJ,SAAW,GAAGrF,EAAIC,gEAC1BjE,EAAQgP,MAAQ,IAChBhP,EAAQiP,eAAgB,EACjBjP,CACR,CASGgJ,YACF,MAAO,GAAGrK,KAAKuQ,OAAOC,SAAShL,KAAKwI,KAAKuB,SAAS,yBACnD,CASDkB,UACE,MAAMrG,EAAOsG,QAAQC,MAAMC,UAAU5Q,KAAKuQ,QAmB1C,OAlBAnG,EAAKQ,KAAOpF,KAAKoF,KACjBR,EAAKU,OAASxB,OAAOjE,IACrBrF,KAAK6Q,SAAW,CACdzK,IAAK,EACLG,IAAK,EACLD,IAAK,EACLD,IAAK,EACLI,IAAK,EACLD,IAAK,EACLsK,KAAM,GAER9Q,KAAK+Q,MAAQ,CACXC,IAAK,EACLC,IAAK,EACLC,IAAK,GAEPlR,KAAKmG,OAAS,GACdnG,KAAK8Q,KAAO,EACL1G,CACR,CAID+G,QAAQC,GACN,MAAMC,EAAOC,EAAEF,EAAGG,eAAeC,QAAQ,mBACnCrL,EAASjF,OAAO8B,OAAOhD,KAAKmG,QAC5BsL,EAAItL,EAAOmI,OACX0C,EAAM7K,EAAOvE,QAAO,CAACC,EAAKtD,IAASsD,EAAMtD,EAAKF,OAAO,GACrDqT,EAAOC,WAAWX,GAAOS,EACzBP,EAAM7Q,KAAKuR,KACfzL,EACG0L,KAAKC,IAAOA,EAAEzT,MAAQqT,IAAS,IAC/B9P,QAAO,CAACC,EAAKtD,IAASsD,EAAMtD,GAAM,GAAKkT,GAGtCV,EAAQM,EAAKU,SAAS,eAC5BhB,EAAMiB,KAAK,QAAQC,KAAKjB,GACxBD,EAAMiB,KAAK,QAAQC,KAAK5R,KAAK6R,MAAO,GAAKlB,EAAOS,GAAK,IACrDV,EAAMiB,KAAK,QAAQC,KAAK5R,KAAK6R,MAAM,IAAMhB,GAAO,KAE5CO,GAAK,GACPH,EAAEF,EAAGG,eACFC,QAAQ,QACRQ,KAAK,yBACLG,WAAW,YAGhBnS,KAAKuQ,OAAOQ,MAAQ,CAClBC,MACAC,IAAK5Q,KAAK6R,MAAO,GAAKlB,EAAOS,GAAK,GAClCP,IAAK7Q,KAAK6R,MAAM,IAAMhB,GAAO,IAEhC,CAEDhH,gBAAgBkI,EAAO/Q,EAAU,IAE/BrB,KAAK6Q,SAASuB,IAAU,EAExB,MAAM/I,EACM,SAAV+I,EACI,OACA5M,KAAKwI,KAAKuB,SAAS,cAAc6C,UACjCC,EAAY,CAAC,OAInB,GAAIhR,EAAQiR,YAAa,CACvB,MAAMC,EAAiB,IAAIrH,KAAKmH,EAAU,UACpCE,EAAenH,UACtB,CAED,OAAOnB,EAAQiB,KAAK,CAClBsH,MAAOnR,EAAQmR,MACfrI,MAAOkI,EACPjI,KAXW,CACXa,KAAM,CAAE,GAWR4D,YAAY,EACZtE,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQ9E,KAAKwI,KAAKC,OAAO,2BAA4B,CACnDmE,MAAO/I,EACPqJ,MAAO1S,KAAK6Q,SAASuB,KAEvB/H,MAAO7E,KAAKwI,KAAKC,OAAO,2BAA4B,CAClDmE,MAAO/I,EACPqJ,MAAO1S,KAAK6Q,SAASuB,MAG1B,CAGDO,kBAAkBlD,GAChBnO,MAAMqR,kBAAkBlD,GACxBA,EAAKuC,KAAK,gBAAgBY,OAAOxB,IAC/B,MAAMyB,EAAKzB,EAAGG,cAAcuB,cAAcA,eACpCV,MAAEA,GAAUS,EAAGE,QACrB/S,KAAKgT,UAAUZ,EAAO,CAAEI,MAAOpB,IAAMxS,MAAMoN,IACzChM,KAAKmG,OAAOiM,GAAS,CAAE/T,MAAO2N,EAAEc,OAChCwE,EAAEuB,GAAIb,KAAK,SAASiB,IAAIjH,EAAEc,OAAOoG,QAAQ,SAAS,GAClD,IAGJzD,EAAKuC,KAAK,eAAeY,OAAOxB,IAC9B,MAAMyB,EAAKzB,EAAGG,cAAcuB,cAAcA,cAAcA,cACxD9S,KAAKgT,UAAU,OAAQ,CAAER,MAAOpB,IAAMxS,MAAMoN,IAC1ChM,KAAK8Q,KAAO,GAAK9E,EAAEc,MACnBwE,EAAEuB,GAAIb,KAAK,eAAeiB,IAAIjT,KAAK8Q,KAAK,GACxC,IAGJrB,EAAKuC,KAAK,qBAAqBmB,QAAQ/B,IACrCpR,KAAKmR,QAAQC,EAAG,IAGlB3B,EAAKuC,KAAK,eAAeY,OAAM1I,MAAOkH,IACpC,MAAML,EAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAClD,IAAK,MAAMqC,KAAQrC,EAAO,CACxB,MAAM/E,QAAUhM,KAAKgT,UAAUI,EAAM,CAAEZ,MAAOpB,EAAIkB,aAAa,IAC/DtS,KAAKmG,OAAOiN,GAAQ,CAAE/U,MAAO2N,EAAEc,MAChC,CACD9M,KAAKmR,QAAQC,GACb,MAAMpF,QAAUhM,KAAKgT,UAAU,OAAQ,CAAER,MAAOpB,EAAIkB,aAAa,IACjEtS,KAAK8Q,KAAO,GAAK9E,EAAEc,MACnB9M,KAAKqT,QAAQ,GAEhB,CAGDnJ,gBACEsI,GACAc,WAAEA,EAAa,KAAIC,aAAEA,GAAe,EAAKC,cAAEA,GAAgB,GAAU,CAAE,GAEvE,MAAMC,EAAe,IAAKH,EAAYxR,OAAQ,CAAEqE,OAAQnG,KAAKmG,SAE7D7E,MAAMoS,UAAUlB,EAAO,CACrBc,WAAYG,EACZF,eACAC,kBAIF,MAAMjJ,EAAUmB,YAAY+G,WAAW,CAAE/E,MAAO1N,KAAKuQ,OAAO7C,QACtD7C,EAAe,CACnBC,OAAQxB,OAAOjE,IACfc,OAAQnG,KAAKmG,OACbkE,MAAO7E,KAAKwI,KAAKuB,SAAS,wBAC1BwB,MAAO/Q,KAAKuQ,OAAOQ,MACnBD,KAAM9Q,KAAK8Q,MAEP3E,QAAgBD,eACpB,GAAG7G,EAAIC,iDACPuF,SAGIa,YAAYa,OAAO,CACvBJ,UACA5B,YAIF,MAAMoJ,EAAW,CACfnD,KAAMhL,KAAKwI,KAAKuB,SAAS,sBACzBhO,KAAM,OACNqS,IAAK,GAAGvO,EAAIK,sBACZ5D,OAAQ,CACNC,UAAU,EACV8R,KAAM,EACN5R,OAAQ,EACRD,SAAU,CACR3D,MAAO2B,KAAK8Q,QAIlB9Q,KAAKuQ,OAAOuD,wBAAwB,OAAQ,CAACH,GAC9C,CAUDzJ,oBAAoBsI,EAAOuB,GACzBvB,EAAMwB,uBAEAhU,KAAKuQ,OAAO0D,OAAOF,GAGzB/T,KAAKuQ,OAAO2D,MAAMnI,QAAO,EAC1B,EC5NY,MAAMoI,UAA2BjE,gBAC9CxQ,YAAY8S,EAAO4B,EAAcC,GAC/B/S,MAAMkR,EAAO6B,GACbrU,KAAKuQ,OAAO6D,aAAeA,CAC5B,CAEUjE,4BACT,MAAM9O,EAAUC,MAAM6O,eAKtB,OAJA9O,EAAQ+O,QAAU,CAAC,MAAO,SAAU,WACpC/O,EAAQoE,GAAK,gBACbpE,EAAQqJ,SAAW,GAAGrF,EAAIC,4DAC1BjE,EAAQgP,MAAQ,IACThP,CACR,CAUGgJ,YACF,MAAO,GAAGrK,KAAKuQ,OAAOC,SAAShL,KAAKwI,KAAKuB,SACvC,4BAEH,CASDrF,gBACE,MAAME,QAAasG,QAAQC,MAAMC,UAAU5Q,KAAKuQ,OAAO6D,cAIvD,OAHAhK,EAAKkK,gBAAkBtU,MAAKuU,EAAcnK,GAC1CA,EAAKQ,KAAOpF,KAAKoF,KACjB5K,KAAKwU,UAAYxU,KAAKuQ,OAAOzQ,MACtBsK,CACR,CAEDF,YAAY7I,GACV,OAAOC,MAAMyO,MAAM1O,EACpB,CAiBD6I,gBAAgBsI,GAAOe,aAAEA,GAAe,EAAKC,cAAEA,GAAgB,GAAU,IAEvElS,MAAMoS,UAAUlB,EAAO,CACrBe,eACAC,kBAGF,MAAMc,QAAkBtU,MAAKuU,QAAoBvU,KAAKyQ,WAChDgE,QAAWzU,KAAKuQ,OAAOzQ,MAAMkS,MAAM0C,IACvC,MAAMf,EAAWe,EAAK5S,OACtB,OACG4S,EAAKlE,OAAShL,KAAKwI,KAAKuB,SAAS,uBAClB,OAAdmF,EAAKlE,OACPmD,EAAS5R,QACT,IAEJ,IAAK0S,EAEH,YADAlG,GAAGC,cAAcC,MAAMjJ,KAAKwI,KAAKuB,SAAS,mBAG5C,MAAMoF,EAAQF,EAAG3S,OAAOE,SAAS3D,MAAQiW,EACrCK,GAAS,EACX3U,KAAKuQ,OAAOqE,wBAAwB,OAAQ,CAC1C,CAAEhJ,IAAK6I,EAAGhP,GAAI,wBAAyBkP,KAGzCpG,GAAGC,cAAcC,MAAMjJ,KAAKwI,KAAKuB,SAAS,yBAE7C,CASDrF,QAAoBsI,EAAOuB,GACzBvB,EAAMwB,iBAEN,MAAMzJ,EAAUmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OAC1C6K,QAAqB7K,KAAKyQ,UAC1BtE,QAAgBD,eACpB,GAAG7G,EAAIC,kDACPuF,GAEFa,YAAYa,OAAO,CACjBJ,UACA5B,kBAGIvK,KAAKuQ,OAAO0D,OAAOF,GAGzB/T,KAAKuQ,OAAO2D,MAAMnI,QAAO,EAC1B,CAGD7B,QAAoBE,GAClB,IAAI0C,EAAQ,EACZ,MAAM+H,EAAW,IAAIC,IAAI,CAAC,OAAQ,YAAa,SAAU,UAQzD,OAPA1K,EAAKtK,MAAMiV,SAASL,IAClB,MAAMf,EAAWe,EAAK5S,OAClB+S,EAASzV,IAAIsV,EAAKnT,QAAUoS,EAAS5R,WACvC+K,GAAS6G,EAAS3R,SAASpC,IACvB+T,EAASE,KACTF,EAASE,KAAOF,EAAS3R,SAAS3D,MAAK,IAExCyO,CACR,CAKD6F,kBAAkBlD,GAChBnO,MAAMqR,kBAAkBlD,GACxBA,EAAKuC,KAAK,iBAAiBY,OAAM,KAC/B5S,KAAKqT,QAAQ,GAEhB,EC/IY,MAAM2B,UAA8B9E,gBACtCC,4BACT,MAAM9O,EAAUC,MAAM6O,eAKtB,OAJA9O,EAAQ+O,QAAU,CAAC,MAAO,SAAU,aACpC/O,EAAQoE,GAAK,kBACbpE,EAAQqJ,SAAW,GAAGrF,EAAIC,8DAC1BjE,EAAQgP,MAAQ,IACThP,CACR,CASGgJ,YACF,MAAO,GAAGrK,KAAKuQ,OAAOC,iBACvB,CASDC,UACE,MAAMrG,EAAOsG,QAAQC,MAAMC,UAAU5Q,KAAKuQ,QAE1C,OADAnG,EAAKQ,KAAOpF,KAAKoF,KACVR,CACR,CAKDuI,kBAAkBlD,GAChBnO,MAAMqR,kBAAkBlD,EACzB,EClCH,MAAMwF,EAAuBzC,GACEhN,KAAKI,SAAStG,IACzCkG,KAAK1D,OAAO2D,GACZ,0BAGI+M,IAAUA,EAAM0C,SAAW1C,EAAM2C,UACnC3C,IAAUA,EAAM0C,SAAW1C,EAAM2C,SCZxB,MAAMC,UAAwBlF,gBAChCC,4BACT,MAAM9O,EAAUC,MAAM6O,eAKtB,OAJA9O,EAAQoE,GAAK,eACbpE,EAAQ+O,QAAU,CAAC,gBACnB/O,EAAQqJ,SAAW,GAAGrF,EAAIC,2DAC1BjE,EAAQgP,MAAQ,IACThP,CACR,CAUGgJ,YACF,MAAO,GAAGrK,KAAKuQ,OAAOC,SAAShL,KAAKwI,KAAKuB,SAAS,sBACnD,CASDkB,UACE,MAAMrG,EAAOsG,QAAQC,MAAMC,UAAU5Q,KAAKuQ,QAS1C,MARkB,cAAdnG,EAAK7I,OACP6I,EAAKiL,aAAc,GAErBjL,EAAKQ,KAAOpF,KAAKoF,KACjBR,EAAKU,OAAS,IACTxB,OAAOjE,IACViQ,YAAa9P,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,gBAE1C2E,CACR,CAKDuI,kBAAkBlD,GAChBnO,MAAMqR,kBAAkBlD,EACzB,CAUDvF,oBAAoBsI,EAAOuB,GACzBvB,EAAMwB,uBAEAhU,KAAKuQ,OAAO0D,OAAOF,SAGnB/T,KAAKuQ,OAAO2D,MAAMqB,SAAQ,EACjC,EC9DY,MAAMC,UAAsBC,WACzChF,UACE,MAAMrG,EAAOsG,QAAQC,MAAMC,UAAUtP,MAAMmP,UAAUrG,MAYrD,OAXAA,EAAKsL,MAAQ1V,KAAK0N,MAAMiI,QACxBvL,EAAKwL,SAAW5V,KAAK0N,MAAMwG,MAAM2B,WAEjCzL,EAAKU,OAAS,IACTxB,OAAOjE,IACViQ,YAAa9P,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,eAC/CqQ,WAAgE,UAApDtQ,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,cAC9CE,YAAaH,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,sBAEjD2E,EAAK2L,MAAQ/V,KAAK0N,MAAMqI,QAEjB3L,CACR,CAED4L,eAAexF,EAAMnP,EAAS4U,GAK5B3U,MAAM0U,eAAexF,EAAMnP,EAAS4U,EACrC,CAIDC,kBAAkB1D,GAChB,MAAM2D,EAAK3D,EAAMjB,cAAcC,QAAQ,eACvC,OAAOxR,KAAK0N,MAAM5N,MAAMR,IAAI6W,EAAGpD,QAAQqD,OACxC,CAIDC,oBAAoB7D,GAClBA,EAAMwB,iBACN,MACMlU,EADiBwR,EAAEkB,EAAMjB,eACFhT,KAAK,cAElC,GAA6B,SAAzBuB,EAAMwW,IAAI,WAAuB,CACnC,MAAMzD,EAAKvB,EAAEkB,EAAMjB,eAAeS,KAAK,uBACvCa,EAAG0D,YAAY,kBACf1D,EAAG2D,SAAS,iBAEZ1W,EAAM2W,UAAU,IACtB,KAAW,CACL,MAAM5D,EAAKvB,EAAEkB,EAAMjB,eAAeS,KAAK,sBACvCa,EAAG0D,YAAY,iBACf1D,EAAG2D,SAAS,kBAEZ1W,EAAM4W,QAAQ,IACf,CACF,CAEDC,sBAAsBnE,GACpBA,EAAMwB,iBACN,MAAM4C,EAActF,EAAEkB,EAAM3F,OAAO2E,QAAQ,eACrC1R,EAAQ8W,EAAY5E,KAAK,8BAE/B,GAA6B,SAAzBlS,EAAMwW,IAAI,WAAuB,CACnC,MAAMzD,EAAK+D,EAAY5E,KAAK,uBAC5Ba,EAAG0D,YAAY,kBACf1D,EAAG2D,SAAS,iBAEZ1W,EAAM2W,UAAU,IACtB,KAAW,CACL,MAAM5D,EAAK+D,EAAY5E,KAAK,sBAC5Ba,EAAG0D,YAAY,iBACf1D,EAAG2D,SAAS,kBAEZ1W,EAAM4W,QAAQ,IACf,CACF,CAEDG,mBAAmBrE,GACjBA,EAAMwB,iBACN,MAAM8C,EAActE,EAAMjB,cACvBC,QAAQ,oBACR9B,cAAc,iBACjBoH,EAAYC,MAAMC,QAAwC,KAA9BF,EAAYC,MAAMC,QAAiB,QAAU,EAC1E,CAED9M,yBAAyBsI,GACvB,MAAM2D,EAAK7E,EAAEkB,EAAMjB,eAAeC,QAAQ,eAC7BxR,KAAK0N,MAAM5N,MAAMR,IAAI6W,EAAG/L,KAAK,WACrC6M,MACN,CAGD/M,2BAA2BwK,GACzB,GAAkB,YAAdA,EAAKnT,MAAoC,UAAdmT,EAAKnT,KAElC,OAAOvB,KAAK0N,MAAMwJ,wBAAwB,OAAQ,CAACxC,EAAK9I,MAE1D,GAAkB,cAAd8I,EAAKnT,MAAoD,KAA5BmT,EAAK5S,OAAOqV,YAAoB,CAC/D,MAAMA,YAAEA,GAAgBzC,EAAK5S,OACvBsV,EAAapX,KAAK0N,MAAM5N,MAC3BR,IAAI6X,GACJrV,OAAOuV,QAAQjJ,QAAQkJ,GAAMA,IAAM5C,EAAKjP,WAErCzF,KAAK0N,MAAMkH,wBAAwB,OAAQ,CAC/C,CAAEhJ,IAAKuL,EAAarV,OAAQ,CAAEuV,QAASD,KAE1C,CACD,GAAkB,cAAd1C,EAAKnT,MAAwBmT,EAAK5S,OAAOuV,QAAS,CACpD,MACM/D,EADiBoB,EAAK5S,OAAOuV,QACDzV,QAAO,CAACC,EAAKoR,KAE1CjT,KAAK0N,MAAM5N,MAAMR,IAAI2T,IACtBpR,EAAImJ,KAAK,CAAEY,IAAKqH,EAAK,qBAAsB,KACtCpR,IACN,UAEG7B,KAAK0N,MAAMkH,wBAAwB,OAAQtB,EAClD,CAGDtT,KAAK0N,MAAMwJ,wBAAwB,OAAQ,CAACxC,EAAK9I,KAClD,CAMD2L,eAAe/E,EAAOgF,GACpB,MAAM9C,EAAO1U,KAAKkW,kBAAkB1D,GACpC,IAAKkC,EAAM,OAAO,KAClB,IACE1S,UAAY3D,MAAO2D,IACjB0S,EAAK5S,OACT4S,EAAKT,OAAO,CACV,wBAAyBuD,IAAcxV,IAAaA,GAEvD,CAEDkI,qBAAqBsI,GACnBA,EAAMwB,iBACN,MAAMU,EAAO1U,KAAKkW,kBAAkB1D,GACpC,MAAmC,SAA/BA,EAAM3F,OAAOkG,QAAQ0E,MAChB/C,EAAKT,OAAO,CAAE,cAAeyD,SAASlF,EAAM3F,OAAOxO,SAEzB,aAA/BmU,EAAM3F,OAAOkG,QAAQ0E,MAChB/C,EAAKT,OAAO,CACjB,mBAAoByD,SAASlF,EAAM3F,OAAOxO,cAF9C,CAKD,CAED6L,mBAAmBsI,GACFlB,EAAEkB,EAAMjB,eACpBC,QAAQ,qBACRQ,KAAK,eACD2F,MAAK,CAACC,EAAG/E,KACd,MAAMuD,OAAEA,GAAWvD,EAAGE,QAChB2B,EAAO1U,KAAK0N,MAAM5N,MAAMR,IAAI8W,GAC5BzC,EAAWe,GAAM5S,OACvB4S,EAAKT,OAAO,CACVrI,IAAK8I,EAAKjP,GACV,cAAekO,EAASkE,WACxB,GAEL,CAED3N,mBAAmBsI,GACjB,MAAMkC,EAAO1U,KAAKkW,kBAAkB1D,GAC9BmB,EAAWe,GAAM5S,OACL,WAAd4S,EAAKnT,MACiB,YAApBvB,KAAK0N,MAAMnM,MACbmT,EAAKT,OAAO,CACV,uBAAwBN,EAASmE,QAAQzZ,MAAQ,IAGrDqW,EAAKqD,WAAW,CAAElJ,WAAYoG,EAAoBzC,MAC5B,SAAbkC,EAAKnT,KACdmT,EAAKsD,WAAW,CAAEnJ,WAAYoG,EAAoBzC,KAElDkC,EAAKuD,YAAY,CAAEpJ,WAAYoG,EAAoBzC,IAEtD,CAEDtI,gBAAgBsI,GACd,MAAM0F,EAAclY,KAAK0N,MACnByK,EAAU3F,EAAMjB,eAChB6G,KAAEA,GAASD,EAAQrF,cAAcA,cAAcC,QACrDmF,EAAYG,SAASD,EAAM,CAAE5F,SAC9B,CAEDtI,kBAAkBsI,GAChB,MAAM0F,EAAclY,KAAK0N,MACnByK,EAAU3F,EAAMjB,eAChB+G,OAAEA,GAAWH,EAAQrF,cAAcA,cAAcC,QACvDmF,EAAYK,aAAa,CAAEtN,KAAM,CAAE,GAAIqN,EAAQ,CAC7C/W,KAAM+W,EACNzJ,WAAYoG,EAAoBzC,IAEnC,CAEDgG,YAAYhG,EAAOmB,GACjB,MAAM8E,EAASzY,KAAK0N,MAAM5N,MAAMR,IAAIqU,EAAS/H,KACvCmG,EAAW/R,KAAK0N,MAAM5N,MAAMsO,QAC/B/K,GAAMA,EAAE+G,KAAKwB,MAAQ6M,EAAOrO,KAAKwB,MAE9B8M,EAAalG,EAAM3F,OAAO2E,QAAQ,kBAClCmH,EAAWD,EAAaA,EAAW3F,QAAQqD,OAAS,KACpDvJ,EAASkF,EAASC,MAAMjI,GAAMA,EAAEK,KAAKwB,MAAQ+M,IACnD,IAAK9L,EAAQ,MAAM,IAAI+L,MAAM,sBAAsBpG,EAAM3F,UACzD,MAAMgM,EAAahM,GAAQ/K,OAIP,cAAjB+K,GAAQtL,MAA+C,cAAvBsL,GAAQzC,MAAM7I,MACpB,KAA3BsX,EAAW1B,aAOsB,KAA/BsB,GAAQ3W,OAAOqV,aACjBnX,KAAK0N,MAAMkH,wBAAwB,OAAQ,CACzC,CAAEhJ,IAAK6M,EAAOhT,GAAI,qBAAsB,MAI5CnE,MAAMkX,YAAYhG,EAAOmB,IAXvB3T,KAAK0N,MAAMkH,wBAAwB,OAAQ,CACzC,CAAEhJ,IAAK6M,EAAOhT,GAAI,qBAAsBoH,EAAOpH,KAWpD,CAEDqT,aAAatG,GACX,MAAM2D,EAAK3D,EAAMjB,cACjB,IAGIwH,EAHAC,EAAe,GACnB,IAAIxG,EAAM3F,OAAOoM,UAAUC,SAAS,gBAApC,CAKA,GAAI/C,EAAGpD,QAAQqD,OAAQ,CACrB,MAAM1B,EAAO1U,KAAK0N,MAAM5N,MAAMR,IAAI6W,EAAGpD,QAAQqD,QAC7C2C,EAAWrE,EAAKyE,aAChBJ,EAASrE,KAAOA,EAChBqE,EAASxX,KAAO,OACE,cAAdmT,EAAKnT,MAAwBmT,EAAK5S,OAAOuV,QAAQ/I,OAAS,IAE5D0K,EAAetE,EAAK5S,OAAOuV,QAE9B,CASD,GANA0B,EAASK,QAAUpZ,KAAK0N,MAAMjI,GAC9BsT,EAASM,QAAUrZ,KAAK0N,MAAM4L,QAAUC,OAAOC,OAAO/T,GAAK,KAC3DsT,EAASU,QAAUzZ,KAAK0N,MAAM4L,QAAUtZ,KAAK0N,MAAMgM,MAAMjU,GAAK,KAC9DsT,EAASY,KAAO3Z,KAAK0N,MAAMiM,KAGvBxD,EAAGpD,QAAQ6G,SAAU,CACvB,MAAMC,EAAS7Z,KAAK0N,MAAMoM,QAAQxa,IAAI6W,EAAGpD,QAAQ6G,UACjDb,EAASxX,KAAO,eAChBwX,EAAS3O,KAAOyP,EAAOzP,IACxB,CAGDoI,EAAMuH,aAAaC,QACjB,aACAC,KAAKC,UAAUnB,GAAU,CAACoB,EAAK9b,IACjB,YAAR8b,EAGKF,KAAKC,UAAUlB,GAEjB3a,IAtCiD,CAyC7D,CAGD6L,oBAAoBsI,EAAOpI,GACzB,MAAMgQ,QAAeC,SAASjQ,EAAKkQ,MACnC,IAAKF,GAA0B,SAAhBA,EAAO7Y,KAAiB,OAEvC,IAAIgZ,EAAYH,EAAOI,UAAY,GAOnC,GALAJ,EAAOK,eAAc,GAAM1F,SAAS2F,IAClCH,EAAUvP,QAAQ0P,EAAUF,SAAS,IAInCD,EAAUjM,OAAS,GAAKiM,EAAU,IAAID,MAAMvX,SAAS,cAAe,CACtE,MAAMjD,EAAQ,GACdya,EAAUxF,SAAQ7K,MAAOwK,IACvB5U,EAAMkL,WAAWqP,SAAS3F,EAAK4F,MAAM,IAEvCC,EAAYza,CACb,CAEDE,KAAK2a,kBAAkBJ,EACxB,CAGDrQ,kBAAkBsI,EAAOpI,GACvB,MAAMuO,EAAWnG,EAAM3F,OAAO2E,QAAQ,UAAUuB,SAASqD,OACnDwE,EAAa5a,KAAK0N,MAAM5N,MAAMR,IAAIqZ,GAClCkC,EAAyC,cAArBD,GAAYrZ,KAGhCmT,QAAaoG,KAAKC,eAAeC,aAAa5Q,GAC9CuJ,EAAWe,EAAKuG,WAEhBC,IAAWlb,KAAK0N,MAAM5N,MAAMR,IAAIoV,EAAKjP,IAErC0V,EAAcnb,KAAK0N,MAAM5N,MAAMR,IAAIoV,EAAK5S,OAAOqV,aAGrD,GAAIzC,EAAKjP,KAAOkT,EAEhB,OAAKuC,GAAWL,EAKZM,EAAoBnb,KAAKob,uBAAuB1G,EAAMyG,GAGtDN,EAA0B7a,KAAKqb,oBAAoB3G,EAAMkG,QAA7D,EANS5a,KAAK2a,kBAAkB,CAAChH,GAOlC,CAEDzJ,6BAA6BwK,EAAM4G,GACjC,MAAMC,EAAUD,EAAUxZ,OAAOuV,QAAQjJ,QAAQrE,GAAMA,GAAK2K,EAAKjP,KAC3D+V,EAAUxb,KAAKuQ,OAAOzQ,MAAMR,IAAIoV,EAAKjP,UACrC6V,EAAUrH,OAAO,CAAEnS,OAAQ,CAAEuV,QAASkE,WACtCC,EAAQvH,OAAO,CAAEnS,OAAQ,CAAEqV,YAAa,KAC/C,CAEDjN,0BAA0BwK,EAAM7H,GAC9B,MAAM4O,EAAuB5O,EAAO6O,OAAO5b,MAAMkS,MAC9C3O,GAAMA,EAAEoC,KAAOiP,EAAKjP,KAEvB,IAAIkW,EAAajH,EACjB,IAAK+G,EAAsB,CAEzB,MAAMG,QAAgB5b,KAAK2a,kBAAkB,CAACjG,EAAKuG,aACnDU,EAAaC,EAAQC,KACtB,CAKD,IAHiChP,EAAO/K,OAAOuV,QAAQrF,MACpD3O,GAAMA,EAAEoC,KAAOkW,EAAWlW,KAEE,CAC7B,MAAM8V,EAAU,IAAI1O,EAAO/K,OAAOuV,QAASsE,EAAWlW,UAChDoH,EAAOoH,OAAO,CAAEnS,OAAQ,CAAEuV,QAASkE,WACnCI,EAAW1H,OAAO,CAAEnS,OAAQ,CAAEqV,YAAatK,EAAOpH,KACzD,CACF,CAGDyE,wBAAwB4R,EAAaC,GAAkB,GAsBrD,IApByBC,MAAMC,QAAQH,GACnCA,EACA,CAACA,IACY/G,SAASL,IAIxB,GAHIA,EAAK5S,OAAOqV,aAA2C,KAA5BzC,EAAK5S,OAAOqV,cAEzCzC,EAAK5S,OAAOqV,YAAc,IAEZ,cAAdzC,EAAKnT,MAC0B,iBAAxBmT,EAAK5S,OAAOuV,QACnB,CAEA,MAAM6E,EAAiBjC,KAAKkC,MAAMzH,EAAK5S,OAAOuV,SAC9C6E,EAAenH,SAASqH,IAEtBA,EAActa,OAAOqV,YAAc,EAAE,IAEvC2E,EAAY9Q,QAAQkR,EACrB,MAEEH,EACH,OAAO/b,KAAK0N,MAAMoG,wBAAwB,OAAQgI,GAGpD,MAAMzE,QAAEA,GAAY0E,EAAgBja,OACpCuV,EAAQrM,KAAK8Q,EAAYrW,IACzB,MAAMiP,EAAO1U,KAAK0N,MAAM5N,MAAMR,IAAIwc,EAAY,GAAGrW,UAC3CiP,EAAKT,OAAO,CAAEnS,OAAQ,CAAEqV,YAAa4E,EAAgBtW,YACrDsW,EAAgB9H,OAAO,CAAEnS,OAAQ,CAAEuV,YAC1C,CAIDnN,sBAAsBmS,EAAU,CAAC,SAAU,QAAS,SAAU,SAC5D,MAAMxR,EAAe,CAAEyR,MAAOD,GACxBE,QAAYrQ,eAChB,GAAG7G,EAAIC,kDACPuF,GAGF,OAAO,IAAI5M,SAASC,IAClB,IAAI2R,OAAO,CACTxF,MAAO7E,KAAKwI,KAAKuB,SAAS,yBAC1BpD,QAASoQ,EACTlN,QAAS,CACPC,GAAI,CACFjG,MAAO7D,KAAKwI,KAAKuB,SAAS,UAC1B/F,KAAM,+BACNgG,SAAWC,IACTvR,EAAQ,CACNqD,KAAMkO,EAAKuC,KAAK,uBAAuBiB,MACvCzC,KAAMf,EAAKuC,KAAK,sBAAsBiB,OACtC,GAGNrD,OAAQ,CACNpG,KAAM,+BACNH,MAAO7D,KAAKwI,KAAKuB,SAAS,gBAG9BO,QAAS,OACR/D,QAAO,EAAK,GAElB,CAGDyQ,YAAYhK,GACVA,EAAMwB,iBACN,MAAMyI,EAASjK,EAAMjB,eACfxP,SAAEA,EAAQR,KAAEA,EAAImb,IAAEA,GAAQD,EAAO1J,QACjC4J,EAAa,CAACpb,EAAMiP,KAAU,CAClCA,KAAMA,GAAQ,OAAOjP,EAAKqb,eAC1Brb,SAIF,GAAa,WAATA,EAMG,CACL,MAAMoS,EAAWgJ,EAAWpb,GAI5B,OAHIQ,IAAU4R,EAAS7R,OAAS,CAAEC,UAAU,IAE/B,UAATR,IAAkBoS,EAAS7R,OAAS4a,EAAM,CAAEA,OAAQ,CAACA,IAAK,IACvD1c,KAAK0N,MAAMoG,wBAAwB,OAAQ,CAACH,GAAW,CAAA,EAC/D,CAZsB,CACrB,MAAM0I,EAAUI,EAAO1J,QAAQsJ,QAAQQ,MAAM,KAC7C7c,KAAK8c,gBAAgBT,GAASzd,MAAMme,IAClC,MAAMpJ,EAAWgJ,EAAWI,EAAYxb,KAAMwb,EAAYvM,MAC1DxQ,KAAK0N,MAAMoG,wBAAwB,OAAQ,CAACH,GAAW,CAAA,EAAG,GAElE,CAOG,CAEDzJ,0BAA0BsI,GACxBA,EAAMwB,iBACN,MAAMU,EAAO1U,KAAKkW,kBAAkB1D,GAEpC,MAAmC,UAA/BA,EAAM3F,OAAOkG,QAAQ0E,MAChB/C,EAAKT,OAAO,CACjB,wBAAyByD,SAASlF,EAAM3F,OAAOxO,SAGhB,QAA/BmU,EAAM3F,OAAOkG,QAAQ0E,MAChB/C,EAAKT,OAAO,CACjB,sBAAuByD,SAASlF,EAAM3F,OAAOxO,cAFjD,CAKD,CAID6L,sBAAsB8S,GACpB,MAAMvN,QAAanO,MAAM2b,gBAAgBD,GACzChd,KAAKwK,KAAOiF,EAAK,GAGjB,MAAMyN,EAAYzN,EAAKuC,KAAK,cAC5B,GAAyB,IAArBkL,EAAU5O,OAOd,OAJA4O,EAAUvF,MAAK,CAACC,EAAG/E,KACjB,MAAMsK,EAAcnd,KAAKqU,SAAS+I,OAASpd,KAAKqB,QAAQ+b,OACxDvK,EAAGkE,MAAMqG,OAAS,GAAGD,EAAczF,SAAS7E,EAAGE,QAAQsK,aAAa,IAE/D5N,CACR,CAGDvF,gBAAgBsI,GAEdlR,MAAMgc,UAAU9K,GAEhB,MAAM/C,EAAO6B,EAAEtR,KAAKwK,MACd0S,EAAYzN,EAAKuC,KAAK,cAC5B,GAAyB,IAArBkL,EAAU5O,OACZ,OAGF4O,EAAUvF,MAAK,CAACC,EAAG/E,KACjB,MAAMsK,EAAcnd,KAAKqU,SAAS+I,OAASpd,KAAKqB,QAAQ+b,OACxDvK,EAAGkE,MAAMqG,OAAS,GAAGD,EAAczF,SAAS7E,EAAGE,QAAQsK,aAAa,IAGtD5N,EAAKuC,KAAK,WAClB2F,MAAK,CAAClS,EAAI8X,KAChB,MAAMjC,EAAYiC,EAAO/L,QAAQ,qBACjC,GAAI8J,EAAW,CACb,MAAM6B,EAAcnd,KAAKqU,SAAS+I,OAASpd,KAAKqB,QAAQ+b,OACxDG,EAAOxG,MAAMqG,OAAS,GACpBD,EAAczF,SAAS4D,EAAUvI,QAAQyK,eAE5C,IAEJ,CAGDC,kBAAkBjL,GAChBA,EAAMwB,iBACN,IAAIoB,EAAgBpV,KAAK0N,MAAO,CAC9BgQ,IAAK1d,KAAKqU,SAASqJ,IAAM,GACzBC,KAAM3d,KAAKqU,SAASsJ,MAAQ3d,KAAKqU,SAAShE,MAAQ,KAAO,IACxDtE,QAAO,EACX,CAOD6R,oBACE,IAAIvO,EAAU/N,MAAMsc,oBAGpB,MAAMC,EAAerY,KAAKoF,KAAKY,MAAQxL,KAAK0N,MAAMiI,QAWlD,OAVI3V,KAAKqB,QAAQuU,UAAYiI,IAC3BxO,EAAU,CACR,CACEhG,MAAO7D,KAAKwI,KAAKuB,SAAS,qBAC1BuO,MAAO,kBACPtU,KAAM,cACNuU,QAAUvL,GAAUxS,KAAKyd,kBAAkBjL,KAE7CwL,OAAO3O,IAEJA,CACR,CAEDsD,kBAAkBlD,GAChBnO,MAAMqR,kBAAkBlD,GAGxBA,EAAKuC,KAAK,mCAAmCY,OAAOJ,IAClDxS,KAAKie,UAAUzL,EAAM,IAGvB/C,EAAKuC,KAAK,aAAaY,OAAOJ,IAC5BxS,KAAKke,YAAY1L,EAAM,IAGzB/C,EAAKuC,KAAK,6BAA6BY,OAAOJ,IAC5CxS,KAAK0N,MAAMyQ,YAAY,CAAE3L,SAAQ,IAInC/C,EAAKuC,KAAK,8BAA8BY,OAAM1I,MAAOsI,IACnDxS,KAAKoe,aAAa5L,EAAM,IAG1B/C,EAAKuC,KAAK,mCAAmCY,OAAOJ,IAClDxS,KAAKqW,oBAAoB7D,EAAM,IAEjC/C,EAAKuC,KAAK,yCAAyCY,OAAOJ,IACxDA,EAAM6L,iBAAiB,IAEzB5O,EAAKuC,KAAK,8BAA8BY,OAAOJ,IAC7CxS,KAAK2W,sBAAsBnE,EAAM,IAGnC/C,EAAKuC,KAAK,cAAcY,OAAOJ,IAC7BxS,KAAK6W,mBAAmBrE,EAAM,IAGhC/C,EAAKuC,KAAK,6BAA6BY,OAAM1I,MAAOsI,IAClDxS,KAAKse,mBAAmB9L,EAAM,IAI3BxS,KAAKqB,QAAQuU,WAGlBnG,EAAKuC,KAAK,gBAAgBY,OAAOJ,IAE/BxS,KAAKwc,YAAYhK,EAAM,IAGzB/C,EAAKuC,KAAK,cAAcY,OAAOJ,IAChBxS,KAAKkW,kBAAkB1D,GAC/B0B,MAAMnI,QAAO,EAAK,IAGzB0D,EAAKuC,KAAK,gBAAgBY,OAAOJ,IAC/B,MAAMkC,EAAO1U,KAAKkW,kBAAkB1D,GAEpC,GAAmB,cAAfkC,GAAMnT,OAAyBmT,GAAM5S,QAAQuV,SAAS/I,OAAS,EACjE,OAAOtO,KAAKue,qBAAqB7J,GAEnC7E,OAAO2O,QAAQ,CACbnU,MAAO7E,KAAKwI,KAAKuB,SAAS,8BAC1BpD,QAAS3G,KAAKwI,KAAKuB,SAAS,qCAC5BkP,IAAK,KACHze,KAAKue,qBAAqB7J,EAAK,EAEjCgK,YAAY,GACZ,IAGJjP,EACGuC,KAAK,mBACLY,OAAOxB,GAAOA,EAAGvE,OAAO8R,WACxBxL,OAAOnT,KAAK4e,oBAAoBC,KAAK7e,OAGxCyP,EAAKuC,KAAK,kCAAkCY,OAAOJ,IACjDxS,KAAKuX,eAAe/E,GAAO,EAAK,IAElC/C,EAAKuC,KAAK,mCAAmCY,OAAOJ,IAClDxS,KAAKuX,eAAe/E,GAAO,EAAM,IAInC/C,EACGuC,KAAK,mBACLY,OAAOJ,GAAUA,EAAM3F,OAAO8R,WAC9BxL,OAAOnT,KAAK8e,eAAeD,KAAK7e,OAEnCyP,EACGuC,KAAK,mDACLY,OAAOJ,IACNxS,KAAK+e,aAAavM,EAAM,IAE7B,ECvnBY,MAAMwM,UAA+BxJ,EAMvCrF,4BACT,OAAOO,QAAQC,MAAMsO,YAAY3d,MAAM6O,eAAgB,CACrDC,QAAS,CAAC,MAAO,QAAS,QAAS,aACnC1F,SAAU,GAAGrF,EAAIC,qDACjB+K,MAAO,IACP+M,OAAQ,IACRF,WAAW,EACXgC,KAAM,CACJ,CACEC,YAAa,cACbC,gBAAiB,cACjBC,QAAS,eAGbC,QAAS,CAAC,eAEb,CAQDC,cAAcnV,GAEZA,EAAKoV,MAAQ,CACX1f,MAAOE,KAAK0N,MAAM5L,OAAOhC,MACzB2f,OAAQzf,KAAK0N,MAAM5L,OAAO6F,MAC1B+X,QAAS1f,KAAK0N,MAAM5L,OAAO4d,QAC3BC,UAAW3f,KAAK0N,MAAM5L,OAAO6d,UAC7BC,WAAY5f,KAAK0N,MAAM5L,OAAO8d,YAEhCxV,EAAKrI,SAAW/B,KAAK0N,MAAM5L,OAAO+d,gBAClCzV,EAAKwV,WAAa5f,KAAK0N,MAAM5L,OAAO8d,WACpCxV,EAAK0V,UAAY9f,KAAK0N,MAAM5L,OAAOge,UACnC1V,EAAK2V,OAAS/f,KAAK0N,MAAM5L,OAAOie,OAAOC,UACvC5V,EAAK6V,MAAQjgB,KAAK0N,MAAM5L,OAAOoe,WAI/B9V,EAAKtI,OAAOqe,gBAAkBngB,KAAK0N,MAAM5L,OAAOqe,gBAChD/V,EAAKtI,OAAOse,SAAWpgB,KAAK0N,MAAM5L,OAAOse,SACzChW,EAAKtI,OAAOue,UAAYrgB,KAAK0N,MAAM5L,OAAOue,UAC1CjW,EAAKtI,OAAOwe,KAAOtgB,KAAK0N,MAAM5L,OAAOwe,KAGrC,IACKpf,OAAO8B,OAAOoH,EAAKoV,UACnBte,OAAO8B,OAAOoH,GAAM2V,QAAQC,WAAa,CAAA,GAC5C5V,EAAK0V,WACL/K,SAASuC,GAAMA,EAAEiJ,MAAK,CAACC,EAAG1W,KAAO0W,EAAED,MAAQ,IAAMzW,EAAEyW,MAAQ,MAC9D,CAEDE,iBACE,IAAIxQ,EAAoBjQ,KAAK0N,MAAO,CAClCgQ,IAAK1d,KAAKqU,SAASqJ,IAAM,GACzBC,KAAM3d,KAAKqU,SAASsJ,MAAQ3d,KAAKqU,SAAShE,MAAQ,KAAO,IACxDtE,QAAO,EACX,CAMD7B,gBACE,MAAME,EAAO9I,MAAMmP,UAanB,OAVAzQ,KAAKuf,cAAcnV,GAEnBA,EAAKsW,wBAA0BC,WAAWC,WACxC5gB,KAAKuQ,OAAOzO,OAAOsL,QAAQyT,UAC3B,CAAE3W,OAAO,IAEXE,EAAK0W,oBAAsBH,WAAWC,WACpC5gB,KAAKuQ,OAAOzO,OAAOsL,QAAQ2T,MAC3B,CAAE7W,OAAO,IAEJE,CACR,CAEDF,oBACE,MAEMW,EAAe,CAAEwR,QAFP/S,OAAOjE,IAAIoD,WAGrB8T,QAAYrQ,eAChB,GAAG7G,EAAIC,yDACPuF,GAGF,OAAO,IAAI5M,SAASC,IAClB,IAAI2R,OAAO,CACTxF,MAAO,GACP8B,QAASoQ,EACTlN,QAAS,CACPC,GAAI,CACFjG,MAAO7D,KAAKwI,KAAKuB,SAAS,UAC1B/F,KAAM,+BACNgG,SAAWC,IACTvR,EAAQ,CACN8iB,OAAQvR,EAAKuC,KAAK,yBAAyBiB,OAC3C,GAGNrD,OAAQ,CACNpG,KAAM,+BACNH,MAAO7D,KAAKwI,KAAKuB,SAAS,gBAG9BO,QAAS,OACR/D,QAAO,EAAK,GAElB,CAEDkV,UAAU/T,GAER,IAAI+G,EADSjU,KAAK0N,MAAM5L,OACNoL,GAClBlN,KAAKkhB,cAActiB,MAAMme,IACvB,MAAMvM,EAAOlH,OAAOjE,IAAIoD,UAAUsU,EAAYiE,QAC1C/M,EAAO5V,MACT4V,EAAO5V,MAAM2M,KAAKwF,GAElByD,EAAS,CAAE5V,MAAO,CAACmS,IAGrB,MAAM2Q,EAAU,CAAA,EAEhB,OADAA,EAAQjU,GAAS+G,EACVjU,KAAK0N,MAAMuG,OAAO,CAAEnS,OAAQqf,GAAU,GAEhD,CAEDC,SAASlU,EAAOmU,GACd,MACMpN,EADOjU,KAAK0N,MAAM5L,OACJoL,GAAO7O,MAAM+P,QAAQyE,GAAOA,GAAMwO,IAChDF,EAAU,CAAA,EAEhB,OADAA,EAAQjU,GAAS,CAAE7O,MAAO4V,GACnBjU,KAAK0N,MAAMuG,OAAO,CAAEnS,OAAQqf,GACpC,CAIDG,iBAAiB9O,GACfA,EAAMwB,iBACN,IAAIgB,EAAsBhV,KAAK0N,MAAO,CACpCgQ,IAAK1d,KAAKqU,SAASqJ,IAAM,GACzBC,KAAM3d,KAAKqU,SAASsJ,MAAQ3d,KAAKqU,SAAShE,MAAQ,KAAO,IACxDtE,QAAO,EACX,CAED7B,oBAAoBsI,EAAO4B,GACzB5B,EAAMwB,iBACN,IAAIG,EAAmBnU,KAAK0N,MAAO0G,EAAc,CAC/CsJ,IAAK1d,KAAKqU,SAASqJ,IAAM,GACzBC,KAAM3d,KAAKqU,SAASsJ,MAAQ3d,KAAKqU,SAAShE,MAAQ,KAAO,IACxDtE,QAAO,EACX,CAED7B,yBAAyBsI,GACvB,MACM+J,QAAYrQ,eAChB,GAAG7G,EAAIC,qEAFY,CAAA,GAKrBic,SAAS7R,cAAc,SAAS8R,OAAOjF,EACxC,CAOD5J,kBAAkBlD,GAChBnO,MAAMqR,kBAAkBlD,GAExBA,EAAKuC,KAAK,oCAAoCY,OAAOxB,IACnD,MAAM8G,EAAclY,KAAK0N,MACnByK,EAAU/G,EAAGG,eACba,MAAEA,GAAU+F,EAAQrF,cAAcA,cAAcC,SAChD0O,KAAEA,GAAStJ,EAAQrF,cAAcA,cAAcC,QACjDX,EACF8F,EAAYwJ,UAAUtP,EAAO,CAAEI,MAAOpB,IACpB,OAATqQ,GACTvJ,EAAYyJ,YAAYvP,EAAO,CAAEI,MAAOpB,GACzC,IAGH3B,EAAKuC,KAAK,kCAAkCY,OAAOxB,IACjD,MAAM8G,EAAclY,KAAK0N,MAEnBkU,EADUxQ,EAAGG,cACEuB,cAAcA,cAAcC,QAAQ8O,YACzD3J,EAAY4J,gBAAgBF,EAAM,CAAEpP,MAAOpB,GAAK,IAGlD3B,EAAKuC,KAAK,8BAA8BY,OAAOxB,IAC7CpR,KAAKshB,iBAAiBlQ,EAAG,IAG3B3B,EAAKuC,KAAK,4BAA4BY,OAAOxB,IAC3CpR,KAAK+hB,cAAc3Q,EAAIpR,KAAKyQ,UAAU,IAInCzQ,KAAKqB,QAAQuU,WAGlBnG,EAAKuC,KAAK,cAAcY,OAAOxB,IAC7BA,EAAG4C,iBACH,MACM9G,EADSkE,EAAGG,cACGwB,QAAQiP,MAC7BhiB,KAAKihB,UAAU/T,EAAM,IAGvBuC,EAAKuC,KAAK,aAAaY,OAAOxB,IAC5BA,EAAG4C,iBACH,MACM9G,EADSkE,EAAGG,cACGwB,QAAQiP,MAC7BhiB,KAAKohB,SAASlU,EAAOoE,EAAEF,EAAGG,eAAeC,QAAQ,SAASpH,KAAK,QAAQ,IAIzEqF,EAAKuC,KAAK,gBAAgBY,OAAM1I,MAAOkH,IACrC,MAAM+E,EAAK7E,EAAEF,EAAGG,eAAe0Q,QAAQ,SACjCvN,EAAO1U,KAAK0N,MAAM5N,MAAMR,IAAI6W,EAAG/L,KAAK,iBACpCsK,EAAKT,OAAO,CAChBnS,OAAQ,CACNM,UAAWsS,EAAK5S,OAAOM,WAEzB,IAIJqN,EAAKuC,KAAK,oCAAoCY,OAAOxB,IACnDpR,KAAKygB,eAAerP,EAAG,IAE1B,2HC9OW,MAAO8Q,GA2BnBxiB,YAAYyiB,GAAc,EAAOxa,EAAgB,GAAIya,EAAS,EAAGC,EAAM,eAlBvEC,EAAO9iB,IAAAQ,UAAA,GAEPuiB,EAAQ/iB,IAAAQ,UAAA,GAERwiB,EAAKhjB,IAAAQ,UAAA,GAELyiB,EAAQjjB,IAAAQ,UAAA,GAER0iB,EAAaljB,IAAAQ,UAAA,GAWXT,EAAAS,KAAI0iB,EAAgBP,EAAW,KAC/B5iB,EAAAS,KAAIsiB,EAAU3a,EAAK,KACnBpI,EAAAS,KAAIuiB,EAAWH,EAAM,KACrB7iB,EAAAS,KAAIwiB,EAAQH,EAAG,KACf9iB,EAAAS,KAAIyiB,EAAW3jB,EAAAkB,KAAiB0iB,EAAA,KAC5BR,GAAwBS,cACxBT,GAAwBU,mBAC7B,CAeGC,WACF,OAAO/jB,EAAAkB,KAAiB0iB,EAAA,KACpBR,GAAwBY,cACxBZ,GAAwBa,cAC7B,CAOGC,YACF,OAAOlkB,EAAAkB,KAAiB0iB,EAAA,KACpB1iB,KAAK6iB,KAAO/jB,EAAAkB,KAAYuiB,EAAA,KACxBviB,KAAK6iB,KAAO/jB,EAAAkB,WACjB,CAOG4H,aACF,OAAO9I,EAAAkB,KAAIijB,EAAA,IAAAC,GAAJ7jB,KAAAW,KACR,CAwBG3B,YACF,MAAMwkB,EAAyB,OAAlB/jB,EAAAkB,KAAaijB,EAAA,IAAAE,GAAYnjB,KAAKgjB,MAAQlkB,EAAAkB,cACnD,OAAOlB,EAAAkB,KAAiB0iB,EAAA,KACpBG,EAAO7iB,KAAK4H,OAAS5H,KAAKqiB,IAC1BQ,EAAO7iB,KAAK4H,OAAS5H,KAAKqiB,GAC/B,CAIGhkB,UAAM+kB,GAAmB,CAOzBf,UACF,OAAOvjB,EAAAkB,KAAIwiB,EAAA,IACZ,CAEGH,QAAIlP,GACN5T,EAAAS,KAAIwiB,EAAQrP,EAAM,IACnB,yGAlFC,eACEkQ,EAAAvkB,EAAAkB,KAAWsiB,EAAA,KAACtQ,MAAK,EAAGlQ,QAAUP,WAA4B,WAATA,0BAC7CO,OAAOhD,EAAAkB,aAAc3B,QAAS,CAEtC,EAAC8kB,EAAA,iBAyCC,MAAMxb,EAEL,QAFa0b,EAAAvkB,EAAAkB,KAAWsiB,EAAA,KAACtQ,MACxB,EAAGlQ,QAAUP,WAA4B,WAATA,WACjC,IAAA8hB,OAAA,EAAAA,EAAEvhB,OAAOhD,EAAAkB,KAAYyiB,EAAA,MAAEpkB,MAExB,OAAKsJ,GAAmB,IAAVA,EAEP7I,EAAAkB,KAAI0iB,EAAA,KAAgB/a,EAAQ7I,EAAAkB,KAAYuiB,EAAA,KAAG5a,EAAQ7I,EAAAkB,YAFxB,IAGpC,EAzFOkB,OAAAC,eAAA+gB,GAAA,gBAAA,iDAAgB,KAEhBhhB,OAAAC,eAAA+gB,GAAA,iBAAA,iDAAiB,IAEjBhhB,OAAAC,eAAA+gB,GAAA,gBAAA,iDAAgB,QAEhBhhB,OAAAC,eAAA+gB,GAAA,iBAAA,iDAAiB,OCHZ,MAAOoB,GAwBnB5jB,YACEiG,EAAgD,IAAIlG,EACpD8jB,GAA0B,EAC1BV,EAAOS,GAA0BE,0BAxBnCC,EAAUjkB,IAAAQ,UAAA,GAEV0jB,EAAelkB,IAAAQ,UAAA,GAEf2jB,EAAoBnkB,IAAAQ,UAAA,GAEpB4jB,GAAsBpkB,IAAAQ,UAAA,GAEtB6jB,GAAmBrkB,IAAAQ,UAAA,GAEnB8jB,GAAoBtkB,IAAAQ,UAAA,GAEpB+jB,GAAmBvkB,IAAAQ,UAAA,GAejBT,EAAAS,KAAIyjB,EAAaZ,EAAI,KACrBtjB,EAAAS,KAAI0jB,EAAkBH,EAAuB,KAC7ChkB,EAAAS,KAA2B2jB,EAAAhe,EAAYhG,aACvCJ,EAAAS,KAA6B4jB,GAAAje,EAAYpF,gBAGzChB,EAAAS,KAA0B6jB,GAAAle,EAAY3E,uBACtCzB,EAAAS,KAA2B8jB,GAAAne,EAAY7E,wBACvCvB,EAAAS,KAA0B+jB,GAAApe,EAAYlF,sBACvC,CASGoiB,WAEF,OAAK/jB,EAAAkB,KAAI0jB,EAAA,MAAgD,aAA7B5kB,EAAAkB,KAAwB2jB,EAAA,KAG7C7kB,EAAAkB,KAAIgkB,EAAA,IAAAC,IAAJ5kB,KAAAW,MAFElB,EAAAkB,KAAIyjB,EAAA,IAGd,CAEGZ,SAAKxkB,GACPkB,EAAAS,KAAIyjB,EAAaplB,EAAK,IACvB,CAEG6lB,gBACF,OAAOlkB,KAAK6iB,KAAO,CACpB,CAEGsB,eACF,OAAOnkB,KAAK6iB,KAAO,CACpB,oIAxBC,OAAI/jB,EAAAkB,KAA0B4jB,GAAA,KAAS,EACnC9kB,EAAAkB,KAAuB+jB,GAAA,KAA0B,IAAjBjlB,EAAAkB,KAAcyjB,EAAA,KAC9C3kB,EAAAkB,KAAwB8jB,GAAA,KAA0B,GAAjBhlB,EAAAkB,KAAcyjB,EAAA,KAC5C3kB,EAAAkB,KAAI6jB,GAAA,KAAuC,IAAjB/kB,EAAAkB,KAAcyjB,EAAA,KAAU3kB,EAAAkB,WAC3D,EA7COkB,OAAAC,eAAAmiB,GAAA,eAAA,iDAAe,MCcV,MAAOc,GAmHnB1kB,aAAY0G,IAAEA,EAAGC,IAAEA,EAAGE,IAAEA,EAAGD,IAAEA,EAAGE,IAAEA,EAAGC,IAAEA,iBAvBvC4d,GAAsB7kB,IAAAQ,KAAA,CAAE3B,MAAO,EAAG0M,MAAO,IAEzCuZ,GAAsB9kB,IAAAQ,KAAA,CAAE3B,MAAO,EAAG0M,MAAO,IAEzCwZ,GAAsB/kB,IAAAQ,KAAA,CAAE3B,MAAO,EAAG0M,MAAO,IAEzCyZ,GAAsBhlB,IAAAQ,KAAA,CAAE3B,MAAO,EAAG0M,MAAO,IAEzC0Z,GAAsBjlB,IAAAQ,KAAA,CAAE3B,MAAO,EAAG0M,MAAO,IAEzC2Z,GAAsBllB,IAAAQ,KAAA,CAAE3B,MAAO,EAAG0M,MAAO,IAcvCxL,EAAAS,KAAIqkB,GAAQje,EAAG,KACf7G,EAAAS,KAAIskB,GAAQje,EAAG,KACf9G,EAAAS,KAAIukB,GAAQhe,EAAG,KACfhH,EAAAS,KAAIwkB,GAAQle,EAAG,KACf/G,EAAAS,KAAIykB,GAAQje,EAAG,KACfjH,EAAAS,KAAI0kB,GAAQje,EAAG,IAChB,CAxCDke,sBAAsBzX,EAA+B+F,GACnD,IAAI9F,EACJ,IAAK,IAAI9J,EAAI,EAAGA,GAAK4P,EAAK5P,GAAK,OACZuhB,IAAb1X,EAAM7J,KACR8J,EAASD,EAAM7J,IAGnB,OAAO8J,CACR,CAkCG/G,UACF,MAAO,CACL/H,MAAOS,EAAAkB,KAAIqkB,GAAA,KAAMhmB,MACjB0M,MAAOjM,EAAAkB,KAAIqkB,GAAA,KAAMtZ,MACjBsX,IAAKvjB,EAAAkB,KAAY6kB,GAAA,IAAAC,IACjBje,GAAI/H,EAAAkB,KAAqB6kB,GAAA,IAAAE,IAE5B,CAEG3e,QAAI+M,GACN5T,EAAAS,uCACKlB,EAAAkB,cACAmT,OAEN,CAgBG9M,UACF,MAAO,CACLhI,MAAOS,EAAAkB,KAAIskB,GAAA,KAAMjmB,MACjB0M,MAAOjM,EAAAkB,KAAIskB,GAAA,KAAMvZ,MACjBsX,IAAKvjB,EAAAkB,KAAY6kB,GAAA,IAAAG,IACjBC,SAAUnmB,EAAAkB,KAAoB6kB,GAAA,IAAAK,IAC9BC,OAAQrmB,EAAAkB,KAA2B6kB,GAAA,IAAAO,IAEtC,CAEG/e,QAAI8M,GACN5T,EAAAS,uCACKlB,EAAAkB,cACAmT,OAEN,CAuBG5M,UACF,MAAO,CACLlI,MAAOS,EAAAkB,KAAIukB,GAAA,KAAMlmB,MACjB0M,MAAOjM,EAAAkB,KAAIukB,GAAA,KAAMxZ,MACjBsX,IAAKvjB,EAAAkB,KAAY6kB,GAAA,IAAAQ,IAEpB,CAEG9e,QAAI4M,GACN5T,EAAAS,uCACKlB,EAAAkB,cACAmT,OAEN,CASG7M,UACF,MAAO,CACLjI,MAAOS,EAAAkB,KAAIwkB,GAAA,KAAMnmB,MACjB0M,MAAOjM,EAAAkB,KAAIwkB,GAAA,KAAMzZ,MACjBsX,IAAKvjB,EAAAkB,KAAY6kB,GAAA,IAAAS,IACjBhF,KAAMxhB,EAAAkB,KAAgB6kB,GAAA,IAAAU,IAEzB,CAEGjf,QAAI6M,GACN5T,EAAAS,uCACKlB,EAAAkB,cACAmT,OAEN,CAgBG3M,UACF,MAAO,CACLnI,MAAOS,EAAAkB,KAAIykB,GAAA,KAAMpmB,MACjB0M,MAAOjM,EAAAkB,KAAIykB,GAAA,KAAM1Z,MACjBsX,IAAKvjB,EAAAkB,KAAY6kB,GAAA,IAAAW,IAEpB,CAEGhf,QAAI2M,GACN5T,EAAAS,uCACKlB,EAAAkB,cACAmT,OAEN,CASG1M,UACF,MAAO,CACLpI,MAAOS,EAAAkB,KAAI0kB,GAAA,KAAMrmB,MACjB0M,MAAOjM,EAAAkB,KAAI0kB,GAAA,KAAM3Z,MACjBsX,IAAKvjB,EAAAkB,KAAY6kB,GAAA,IAAAY,IACjBC,QAAS5mB,EAAAkB,KAAmB6kB,GAAA,IAAAc,IAC5BC,OAAQ9mB,EAAAkB,KAAkB6kB,GAAA,IAAAgB,IAC1BC,IAAKhnB,EAAAkB,KAAoB6kB,GAAA,IAAAkB,IAE5B,CAEGtf,QAAI0M,GACN5T,EAAAS,uCACKlB,EAAAkB,cACAmT,OAEN,yHA7IC,OAAOiR,GAA4B4B,eACjC5B,GAA4B6B,sBAC5BnnB,EAAAkB,KAAIqkB,GAAA,KAAMhmB,MAEd,EAAC0mB,GAAA,WAGC,OAAOX,GAA4B4B,eACjC5B,GAA4B8B,aAC5BpnB,EAAAkB,KAAIqkB,GAAA,KAAMhmB,MAEd,EAAC2mB,GAAA,WAoBC,OAAOZ,GAA4B4B,eACjC5B,GAA4B6B,sBAC5BnnB,EAAAkB,KAAIskB,GAAA,KAAMjmB,MAEd,EAAC6mB,GAAA,WAGC,OAAOd,GAA4B4B,eACjC5B,GAA4B+B,aAC5BrnB,EAAAkB,KAAIskB,GAAA,KAAMjmB,MAEd,EAAC+mB,GAAA,WAGC,OAAOhB,GAA4B4B,eACjC5B,GAA4BgC,WAC5BtnB,EAAAkB,KAAIskB,GAAA,KAAMjmB,MAEd,EAACgnB,GAAA,WAkBC,OAAOjB,GAA4B4B,eACjC5B,GAA4B6B,sBAC5BnnB,EAAAkB,KAAIukB,GAAA,KAAMlmB,MAEd,EAACinB,GAAA,WAmBC,OAAOlB,GAA4B4B,eACjC5B,GAA4B6B,sBAC5BnnB,EAAAkB,KAAIwkB,GAAA,KAAMnmB,MAEd,EAACknB,GAAA,WAGC,OAAOnB,GAA4B4B,eACjC5B,GAA4BiC,oBAC5BvnB,EAAAkB,KAAIwkB,GAAA,KAAMnmB,MAEd,EAACmnB,GAAA,WAkBC,OAAOpB,GAA4B4B,eACjC5B,GAA4B6B,sBAC5BnnB,EAAAkB,KAAIykB,GAAA,KAAMpmB,MAEd,EAAConB,GAAA,WAqBC,OAAOrB,GAA4B4B,eACjC5B,GAA4B6B,sBAC5BnnB,EAAAkB,KAAI0kB,GAAA,KAAMrmB,MAEd,EAAC0nB,GAAA,WAGC,OAAO3B,GAA4B4B,eACjC5B,GAA4BiC,oBAC5BvnB,EAAAkB,KAAI0kB,GAAA,KAAMrmB,MAEd,EAACwnB,GAAA,WAGC,OAAO/mB,EAAAkB,KAAY6kB,GAAA,IAAAY,IAAG,CACxB,EAACE,GAAA,WAGC,OAAO7mB,EAAAkB,KAAY6kB,GAAA,IAAAY,IAAG,CACxB,EAlSOvkB,OAAAC,eAAAijB,GAAA,wBAAA,2CAAwB/lB,MAAA,CAC7B,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,EAAG,EACH,GAAI,EACJ,GAAI,EACJ,GAAI,KAUC6C,OAAAC,eAAAijB,GAAA,sBAAA,2CAAsB/lB,MAAA,CAC3B,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,EAAG,EACH,GAAI,EACJ,GAAI,EACJ,GAAI,KAQC6C,OAAAC,eAAAijB,GAAA,eAAA,2CAAe/lB,MAAA,CACpB,EAAG,EACH,EAAG,EACH,EAAG,EACH,GAAI,EACJ,GAAI,EACJ,GAAI,KAQC6C,OAAAC,eAAAijB,GAAA,eAAA,2CAAe/lB,MAAA,CACpB,EAAG,GACH,EAAG,iBACH,EAAG,oBACH,EAAG,kBAQE6C,OAAAC,eAAAijB,GAAA,aAAA,2CAAa/lB,MAAA,CAClB,EAAG,mBACH,EAAG,aACH,GAAI,kBACJ,GAAI,kBACJ,GAAI,qBC/EM,MAAOioB,GAOnB5mB,YACE2jB,EAIArD,UAJA7f,QACEA,GAEoDkjB,EADjDkD,EnBCF,SAAgBxc,EAAGvL,GACtB,IAAIgoB,EAAI,CAAA,EACR,IAAK,IAAI3c,KAAKE,EAAO7I,OAAOulB,UAAUC,eAAernB,KAAK0K,EAAGF,IAAMrL,EAAEmoB,QAAQ9c,GAAK,IAC9E2c,EAAE3c,GAAKE,EAAEF,IACb,GAAS,MAALE,GAAqD,mBAAjC7I,OAAO0lB,sBACtB,KAAIvjB,EAAI,EAAb,IAAgBwG,EAAI3I,OAAO0lB,sBAAsB7c,GAAI1G,EAAIwG,EAAEyE,OAAQjL,IAC3D7E,EAAEmoB,QAAQ9c,EAAExG,IAAM,GAAKnC,OAAOulB,UAAUI,qBAAqBxnB,KAAK0K,EAAGF,EAAExG,MACvEmjB,EAAE3c,EAAExG,IAAM0G,EAAEF,EAAExG,IAF4B,CAItD,OAAOmjB,CACX,CmBXiBM,CAAAzD,EAFb,kBAIA,IAAArD,IAAAA,EAAsB,iBAXxB+G,GAAAvnB,IAAAQ,KAAS,CAAA,GAETgnB,GAAAxnB,IAAAQ,KAAqB,IAErBinB,GAAkBznB,IAAAQ,UAAA,GAShBT,EAAAS,KAAIgnB,GAAchH,EAAS,KAC3BzgB,EAAAS,KAAgBinB,GAAA9mB,IAAW,OAE3B,MAAM+mB,GAA6B,UAAjBpoB,EAAAkB,oBAAiB,IAAAmnB,OAAA,EAAAA,EAAAvlB,OAAO9C,EAAAkB,KAAsBonB,GAAA,IAAAC,IAAE,CAAE,KAAK,CAAA,EAEzE9nB,EAAAS,KAAc+mB,GAAA7lB,OAAOomB,KAAKf,GAAY,IAAI3kB,QACxC,CAACyP,EAAMqD,EAAM6S,IACXzoB,EAAAkB,KAAqBonB,GAAA,IAAAI,IAAAnoB,KAArBW,KAAsBqR,EAAMqD,EAAM6S,EAAKL,EAAWX,IACpD,CAAA,OAEH,CAEGpmB,cACF,OAAOrB,EAAAkB,KAAIinB,GAAA,IACZ,CAEG9mB,YAAQnB,GACVO,EAAAS,KAAIinB,GAAYjoB,EAAK,IACtB,CAEGghB,gBACF,OAAOlhB,EAAAkB,KAAegnB,GAAA,KAACplB,QACrB,CAACyP,EAAMqD,IAnDS,EAACrD,EAAcqD,KACnC,MAAMgI,IAAEA,GAAQhI,EAAK5S,OACf2lB,EAAcpW,EAAKqL,IAAQ,GACjC,OAAAxb,OAAAwmB,OAAAxmB,OAAAwmB,OAAA,CAAA,EACKrW,GAAI,CACPqL,CAACA,GAAM,IAAI+K,EAAa/S,GAAM6L,MAAK,CAACC,EAAG1W,IAAM0W,EAAEhQ,KAAKmX,cAAc7d,EAAE0G,SACpE,EA6CkBoX,CAAcvW,EAAMqD,IACpC,CAAE,EAEL,CAiCGuL,YACF,OAAOnhB,EAAAkB,KAAI+mB,GAAA,IACZ,EAhCiBA,GAAA,IAAAc,QAAAb,GAAA,IAAAa,QAAAZ,GAAA,IAAAY,QAAAT,GAAA,IAAAU,QAAAT,GAAA,SAAAhW,EAA+BqD,GAC/C,MAAMgI,IAAEA,GAAQhI,EAAK5S,OACrB,IAAIimB,KAAEA,GAASrT,EAAK5S,OAChBkmB,OAAOC,MAAMF,KAAOA,EAAO,GAC/B,MAAMG,EAAY7W,EAAKqL,IAAQ,EAC/B,OACKxb,OAAAwmB,OAAAxmB,OAAAwmB,OAAA,CAAA,EAAArW,IACHqL,CAACA,GAAMwL,EAAYH,GAEvB,EAACP,GAAA,SAICnW,EACAqD,EACA6S,EACAL,EACAX,SAEA,GAAa,YAAT7R,EAAoB,OAAOrD,EAC/B,MAAM8W,EAAKZ,EAAM,EACX3nB,GAAoB,QAAdyjB,EAAAkD,EAAS4B,UAAK,IAAA9E,OAAA,EAAAA,EAAAzjB,MAAO,EAC3BwoB,EAAOlB,EAAUiB,GAEvB,OACKjnB,OAAAwmB,OAAAxmB,OAAAwmB,OAAA,CAAA,EAAArW,GACH,CAAA8W,CAACA,GAAK,CAAEC,OAAMxoB,QAElB,EC7FF,MAAMyoB,GAAwB,CAAC3a,EAAO4a,EAAYC,EAAW,OAC3D7a,EAAM5N,MACHsO,QAAO,EAAG7M,UAAWA,IAAS+mB,IAC9Bla,OAAOma,GAAQ,MAAW,IAEhB,MAAMC,WAA8B9X,QAAQ+X,SAASC,cAClEC,qBACE3oB,KAAKmG,OAAS,IAAIie,GAA4BpkB,KAAKmG,QAGnDnG,KAAK2F,YAAc,IAAI2D,OAAOjE,IAAIM,YAChC3F,KAAK2F,YAAY/F,IACjB,IAAII,KAAK0b,OAAO5b,OAChB,CACE6B,oBAAqB6D,KAAKI,SAAStG,IACjCkG,KAAK1D,OAAO2D,GACZ,uBAEFU,OAAQnG,KAAKmG,SAIjBnG,KAAK4oB,SAAW,IAAItF,GAClBtjB,KAAK2F,YACL3F,KAAK8K,OAAO+d,aACZ7oB,KAAK4oB,SAAS/F,MAKhB7iB,KAAKuN,GAAK,IAAI2U,IACZ,EACA,IACKmG,GACDroB,KAAK0b,OACL,SACC8E,GAAMA,EAAE1e,OAAOM,YAGpBpC,KAAKmG,OAAOG,IAAI+b,IAChBriB,KAAKuN,GAAG8U,KAGVriB,KAAK6N,IAAM,IAAIqU,IACb,EACAmG,GAAsBroB,KAAK0b,OAAQ,SAAU8E,GAAMA,EAAE1e,OAAOM,WAC5DpC,KAAKmG,OAAOG,IAAI+b,IAChBriB,KAAK6N,IAAIwU,KAGXriB,KAAK+f,OAAS,IAAIuG,GAA4BtmB,KAAK+f,OAAQ/f,MAAKggB,EACjE,CAGD2E,sBACE,MAAMmE,YAAEA,EAAWC,YAAEA,EAAWC,aAAEA,EAAYC,YAAEA,EAAWC,YAAEA,GAC3DxY,QAAQtG,KAAK+e,OAEf,MAAO,CACLpJ,OAAQ,IAAIkJ,EACZ9iB,OAAQ,IAAI8iB,EACZ7b,QAAS,IAAI6b,EACb1b,GAAI,IAAI0b,EACRpb,IAAK,IAAIob,EACTtjB,YAAa,IAAIsjB,EACjBL,SAAU,IAAIK,EACdne,OAAQ,IAAIme,EACZnT,WAAY,IAAImT,EAChBG,GAAI,IAAIF,EAAY,CAClBG,GAAI,IAAIP,EACRzqB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,IAClC1pB,IAAK,IAAImpB,EAAY,CAAEO,SAAS,MAElChc,MAAO,IAAI2b,EACXxgB,UAAW,IAAIwgB,EACfM,MAAO,IAAIL,EAAY,CACrB1hB,OAAQ,IAAI0hB,EAAY,CAAE7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,MAC5DjiB,MAAO,IAAI6hB,EAAY,CAAE7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,MAC3D/hB,UAAW,IAAI2hB,EAAY,CACzB7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,MAEpC7hB,MAAO,IAAIyhB,EAAY,CAAE7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,MAC3DhiB,KAAM,IAAI4hB,EAAY,CAAE7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,QAE5DzH,YAAa,IAAIqH,EAAY,CAC3BM,GAAI,IAAIT,EAAY,CAAEO,SAAS,EAAMG,UAAU,IAC/C7iB,GAAI,IAAImiB,EAAY,CAAEO,SAAS,EAAMG,UAAU,IAC/C5iB,GAAI,IAAIkiB,EAAY,CAAEO,SAAS,EAAMG,UAAU,IAC/C3iB,GAAI,IAAIiiB,EAAY,CAAEO,SAAS,EAAMG,UAAU,MAEjDC,SAAU,IAAIR,EAAY,CACxB/oB,QAAS,IAAI6oB,EACbtD,QAAS,IAAIqD,EAAY,CAAEO,SAAS,IACpCK,KAAM,IAAIb,IAGf,CAKG3I,sBACF,OAAO3a,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,cAC1C,CAEG2a,eACF,MAAMwJ,EAAiB5pB,KAAKmgB,iBAAkBngB,KAAKsN,MAAMuc,KAAW,EACpE,OACG7pB,KAAKmG,OAAOC,KAAKic,KAAO,IACxBriB,KAAKsN,OAAO+U,KAAK1Z,OAAS,GAC3BihB,CAEH,CAEGvJ,gBACF,MAAMuJ,EAAiB5pB,KAAKmgB,iBAAkBngB,KAAKsN,MAAMuc,KAAW,EACpE,OACG7pB,KAAKmG,OAAOG,KAAK+b,KAAO,IACxBriB,KAAKsN,OAAO+U,KAAKzZ,SAAW,GAC7BghB,CAEH,CAEG7T,YACF,MAAM3P,IAAEA,EAAGC,IAAEA,EAAGE,IAAEA,EAAGD,IAAEA,EAAGE,IAAEA,EAAGC,IAAEA,GAAQzG,KAAKmG,OAC9C,OAAQ,CAACC,EAAKC,EAAKE,EAAKD,EAAKE,EAAKC,GAAK7E,QACrC,CAACC,EAAKgR,IAAOhR,EAAMgR,EAAGxU,OACtB,EAEH,CAEGuhB,iBACF,OAAOyI,GACLroB,KAAK0b,OACL,aACA,EAAG5Z,QAAUqV,mBAAqBA,GAErC,CAEGwI,gBACF,OAAO0I,GACLroB,KAAK0b,OACL,QACA,EAAG5Z,QAAUC,WAAUoV,kBAAoBpV,IAAaoV,GAE3D,CAEG0I,sBACF,MAAM/S,EAAQ9M,KAAK2f,UAAU/d,QAC3B,CAACC,GAAOC,QAAUE,WAAU6R,WAAahS,EAAMG,EAAS3D,MAAQwV,GAChE,GAEF,OAAOxT,KAAK6R,MAAc,IAARpF,GAAe,GAClC,CAEGhN,YACF,OAAOuoB,GACLroB,KAAK0b,OACL,QACA,EAAG5Z,QAAUC,WAAUoV,mBAAqBpV,IAAaoV,GAE5D,CAEGuI,cACF,OAAO2I,GACLroB,KAAK0b,OACL,UACA,EAAG5Z,QAAUqV,mBAAqBA,GAErC,CAEGxP,YACF,OAAO0gB,GACLroB,KAAK0b,OACL,SACA,EAAG5Z,QAAUqV,mBAAqBA,GAErC,CAEG2I,gBACF,OAAOuI,GACLroB,KAAK0b,OACL,WACA,EAAG5Z,QAAUqV,mBAAqBA,IAClCoJ,MAAK,CAACC,EAAG1W,KAAO0W,EAAED,MAAQ,IAAMzW,EAAEyW,MAAQ,IAC7C,CAEGP,QACF,OAAOqI,GACLroB,KAAK0b,OACL,SACA,EAAG5Z,QAAUqV,mBAAqBA,GAErC,CAEG2S,aACF,OAA+B,IAAxB9pB,KAAK0f,QAAQpR,QAEhBtO,KAAK0f,QAAQqK,OACVrV,KAEiB,WAAdA,EAAKnT,OACJmT,EAAK5S,OAAO+G,OACZ6L,EAAK5S,OAAOM,WAGxB,CAGGke,WAGF,MAFkE,UAApD9a,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,eAG3CzF,KAAK8V,WAAWzX,OAAS,IACvB2B,KAAK8V,WAAWuM,KAAO,GACxBriB,KAAKmG,OAAOG,IAAIga,KAClB,CACL,ECzNH,MAAM+H,GAAwB,CAAC3a,EAAO4a,EAAYC,EAAW,OAC3D7a,EAAM5N,MACHsO,QAAO,EAAG7M,UAAWA,IAAS+mB,IAC9Bla,OAAOma,GAAQ,MAAW,IAEhB,MAAMyB,WAA4BtZ,QAAQ+X,SAASC,cAChEC,qBACE3oB,KAAK2F,YAAc,IAAIpC,EACvBvD,KAAK+f,OAAS,IAAIuG,GAA4BtmB,KAAK+f,OAAQ/f,MAAKggB,GAChEhgB,KAAK4oB,SAAW,IAAItF,GAClBtjB,KAAK2F,YACL3F,KAAK8K,OAAO+d,cAAe,EAC3B7oB,KAAK4oB,SAAS/F,KAEjB,CAGD8B,sBACE,MAAMmE,YAAEA,EAAWC,YAAEA,EAAWC,aAAEA,EAAYC,YAAEA,EAAWC,YAAEA,GAC3DxY,QAAQtG,KAAK+e,OAEf,MAAO,CACLpJ,OAAQ,IAAIkJ,EACZ7b,QAAS,IAAI6b,EACb1b,GAAI,IAAI0b,EACRpb,IAAK,IAAIob,EACTtjB,YAAa,IAAIujB,EAAY,CAC3B7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,IAClC1pB,IAAK,IAAImpB,EAAY,CAAEO,SAAS,MAElCV,SAAU,IAAIK,EACdne,OAAQ,IAAIme,EACZnT,WAAY,IAAImT,EAChBG,GAAI,IAAIF,EAAY,CAClBG,GAAI,IAAIP,EACRzqB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,IAClC1pB,IAAK,IAAImpB,EAAY,CAAEO,SAAS,MAElChc,MAAO,IAAI2b,EACXxgB,UAAW,IAAIwgB,EACfM,MAAO,IAAIL,EAAY,CACrB1hB,OAAQ,IAAI0hB,EAAY,CAAE7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,MAC5DjiB,MAAO,IAAI6hB,EAAY,CAAE7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,MAC3D/hB,UAAW,IAAI2hB,EAAY,CACzB7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,MAEpC7hB,MAAO,IAAIyhB,EAAY,CAAE7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,MAC3DhiB,KAAM,IAAI4hB,EAAY,CAAE7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,QAE5DI,SAAU,IAAIR,EAAY,CACxB/oB,QAAS,IAAI6oB,EACbtD,QAAS,IAAIqD,EAAY,CAAEO,SAAS,IACpCK,KAAM,IAAIb,IAGf,CAKG3I,sBACF,OAAO3a,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,cAC1C,CAEGsQ,YACF,OAAQ7U,OAAO8B,OAAOhD,KAAKupB,OAAO3nB,QAChC,CAACqoB,EAAMC,IAASD,GAAQvS,SAASwS,GAAM7rB,MAAO,KAAO,IACrD,EAEH,CAEGuhB,iBACF,OAAOyI,GACLroB,KAAK0b,OACL,aACA,EAAG5Z,QAAUqV,mBAAqBA,GAErC,CAEGwI,gBACF,OAAO0I,GACLroB,KAAK0b,OACL,QACA,EAAG5Z,QAAUC,WAAUoV,kBAAoBpV,IAAaoV,IACxDoJ,MAAK,CAACC,EAAG1W,IAAM0W,EAAEhQ,KAAKmX,cAAc7d,EAAE0G,OACzC,CAEG1Q,YACF,OAAOuoB,GACLroB,KAAK0b,OACL,QACA,EAAG5Z,QAAUC,WAAUoV,mBAAqBpV,IAAaoV,IACzDoJ,MAAK,CAACC,EAAG1W,IAAM0W,EAAEhQ,KAAKmX,cAAc7d,EAAE0G,OACzC,CAEGkP,cACF,OAAO2I,GACLroB,KAAK0b,OACL,UACA,EAAG5Z,QAAUqV,mBAAqBA,IAClCoJ,MAAK,CAACC,EAAG1W,IAAM0W,EAAEhQ,KAAKmX,cAAc7d,EAAE0G,OACzC,CAEG7I,YACF,OAAO0gB,GACLroB,KAAK0b,OACL,SACA,EAAG5Z,QAAUqV,mBAAqBA,IAClCoJ,MAAK,CAACC,EAAG1W,IAAM0W,EAAEhQ,KAAKmX,cAAc7d,EAAE0G,OACzC,CAEGsP,gBACF,OAAOuI,GACLroB,KAAK0b,OACL,WACA,EAAG5Z,QAAUqV,mBAAqBA,IAClCoJ,MAAK,CAACC,EAAG1W,KAAO0W,EAAED,MAAQ,IAAMzW,EAAEyW,MAAQ,IAC7C,CAEG4J,qBACF,MAAO,IAAInqB,KAAK0f,WAAY1f,KAAK8f,WAC9BS,MAAK,CAACC,EAAG1W,IAEe,gBAArB0W,EAAE1e,OAAOsoB,SACY,gBAArBtgB,EAAEhI,OAAOsoB,SAED,EACHtgB,EAAEvI,KAAKomB,cAAcnH,EAAEjf,OAASif,EAAEhQ,KAAKmX,cAAc7d,EAAE0G,QAE/D5O,QAAO,CAACqoB,EAAMC,KACb,MAAMG,EAAU,IAAKJ,IACfG,QAAEA,GAAYF,EAAKpoB,OAEzB,OADKuoB,EAAQD,KAAUC,EAAQD,GAAW,IACnC,IAAKC,EAASD,CAACA,GAAU,IAAIC,EAAQD,GAAUF,GAAO,GAC5D,CAAE,EACR,CAEGlK,QACF,OAAOqI,GACLroB,KAAK0b,OACL,SACA,EAAG5Z,QAAUqV,mBAAqBA,GAErC,CAEG2S,aACF,OAA+B,IAAxB9pB,KAAK0f,QAAQpR,QAEhBtO,KAAK0f,QAAQqK,OACVrV,KAAyB,WAAdA,EAAKnT,OAAsBmT,EAAK5S,OAAO+G,OAE1D,CAEGyX,WAGF,MAFkE,UAApD9a,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,cAEjCzF,KAAK8V,WAAWuM,IAAM,CACtC,EC5JY,MAAMiI,WAAgBxP,KAExByP,0BACT,MAAO,CACL9iB,MAAO,GAAGpC,EAAIK,+BACd8kB,QAAS,GAAGnlB,EAAIK,iCAChBiC,MAAO,GAAGtC,EAAIK,+BACd+kB,OAAQ,GAAGplB,EAAIK,gCACfgP,KAAM,GAAGrP,EAAIK,8BACb4V,UAAW,GAAGjW,EAAIK,6BAErB,CAEDif,oBAAoBva,EAAMsgB,EAAU,IAIlC,YAHiB9F,IAAbxa,EAAKwJ,MACPxJ,EAAKwJ,IAAM5T,KAAKuqB,aAAangB,EAAK7I,OAE7BD,MAAMiL,OAAOnC,EAAMsgB,EAC3B,CAED/F,mBAAmBlM,GAgBjB,MAfoB,KAAhBA,GAAQ7E,KAAc6E,EAAOlX,OAC/BkX,EAAO7E,IAAM5T,KAAKuqB,aAAa9R,EAAOlX,YAENqjB,IAA9BnM,GAAQ3W,QAAQwC,aAEfmU,GAAQ3W,QAAQ4G,MAAQ,IAAItF,MAC1BunB,GAAsB,eAAdA,EAAItsB,SAEE,WAAjBoa,GAAQlX,OAERkX,EAAO3W,OAAOwC,UAAY,GACC,UAAzBmU,GAAQ3W,QAAQP,MAAoC,UAAhBkX,EAAOlX,OAC7CkX,EAAO3W,OAAOwC,UAAY,IAGvBmU,CACR,CAEDmS,cACEtpB,MAAMspB,aACP,CAED1gB,2BAEElK,KAAK8B,OAAO+oB,0BAA4BlK,WAAWC,WACjD5gB,KAAK8B,OAAOsL,SAAS0d,aAAe9qB,KAAK8B,OAAOgpB,YAChD,CAAE5gB,OAAO,GAEZ,CAEDya,qBAAqBlV,GACnBA,EAAKsb,GAAG,QAAS,uBAAwB/qB,KAAKgrB,kBAAkBnM,KAAK7e,OACrEyP,EAAKsb,GAAG,QAAS,aAAc/qB,KAAKirB,yBAAyBpM,KAAK7e,MACnE,CAEDkK,kBAAkBghB,GAChB,MAAMC,EAAWnrB,KAAKuB,KAEhBoS,EAAW3T,KAAK8B,OAGhBspB,EAAQ,GAkBd,MAhBiB,WAAbD,GACFxX,EAASjL,KAAKqM,SAASyR,GAAM4E,EAAMpgB,KAAKwb,EAAEnoB,SAE3B,UAAb8sB,GACFC,EAAMpgB,KACJ,GAAG2I,EAASmK,SAASnK,EAAS+I,MAC9B/I,EAAS0X,MACT1X,EAAS2X,UAGT3X,EAAS+S,eAAe,aAC1B0E,EAAMpgB,KAAK2I,EAASvR,SAAW,WAAa,gBAI9CuR,EAAS4X,WAAaH,EAAMhd,QAAQvE,KAAQA,IACrC8J,CACR,CAEDoE,WAAW1W,EAAU,IACnB,MAAMmqB,EAA2B,aAAnBxrB,KAAK0N,MAAMnM,KAEnBoS,EAAW3T,KAAK8B,OAEtB,IAAIP,EAAOiqB,EAAQ,SAAW,QAC9B,MAAMrc,EAAW,CACfuF,KAAM1U,KAAKyrB,QACX/d,MAAO1N,KAAK0N,MACZzC,KAAM,CACJmN,KAAMzE,EAASyE,KACfvL,OAAQ,OAIZ,OAAI8G,EAAS/K,SAAW+K,EAAShL,QAAU6iB,GAEzC,IAAI3b,OAAO,CACTxF,MAAO,sBACP8B,QAAS,GACTkD,QAAS,CACP1G,MAAO,CACLa,KAAM,qCACNH,MAAO,QACPmG,SAAU,KACRxP,KAAK0N,MAAM6K,aAAapJ,EAAU,QAAS9N,EAAQ,GAGvDuH,QAAS,CACPY,KAAM,kCACNH,MAAO,UACPmG,SAAU,KACRxP,KAAK0N,MAAM6K,aAAapJ,EAAU,UAAW9N,EAAQ,IAI3DyO,QAAS,UACR/D,QAAO,IACH,IAEL4H,EAAS/K,UAAY4iB,IACvBjqB,EAAO,WAETvB,KAAK0N,MAAM6K,aAAapJ,EAAU5N,EAAMF,IACjC,EACR,CAED6I,kBAAkB7I,EAAU,IAC1B,MAAMsS,EAAW3T,KAAK8B,OAEtB,IAAK6R,EAAS1I,KACZ,MAAM,IAAI2N,MAAM,8CAGlB,MAAMvP,EAAQ,GAAGrJ,KAAKwQ,OAChB6B,EAAY,CAACsB,EAAS1I,MAEtB1J,EAAOoS,EAAS+X,SAEhBvc,EAAW,CACfzB,MAAO1N,KAAK0N,MACZgH,KAAM1U,KAAKyrB,QACXX,YAAa,KACb1S,KAAMzE,EAASyE,KACfmT,WAAYvrB,KAAK8B,OAAO6pB,SACxB1gB,KAAM,CACJ1J,OACAsL,OAAQ8G,EAASiY,WACjBrgB,UAAWoI,EAASpI,YASxB,MALkB,UAAdvL,KAAKuB,OACP4N,EAAS2b,YAAcnX,EAASmX,aAI3B7gB,EAAQiB,KAAK,CAClBsH,MAAOnR,EAAQmR,MACfrI,MAAOkI,EACPjI,KAAM+E,EACNN,YAAY,EACZtE,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQ9E,KAAKwI,KAAKC,OAAO,mBAAoB,CAAE5E,UAC/CgB,MAAO7E,KAAKwI,KAAKC,OAAO,mBAAoB,CAAE5E,WAEjD,CAEDa,mBACE,GAAkB,UAAdlK,KAAKuB,KACP,MAAM,IAAIqX,MACR,2DAGJ,MAAMjF,EAAW3T,KAAK8B,aAChB9B,KAAKiU,OAAO,CAChBnS,OAAQ,CACNimB,KAAMpU,EAASoU,KAAO,KAItBpU,EAAS1I,WACLjL,KAAKiY,oBAELjY,KAAKiX,KAAK,CAAEpI,YAAY,GAEjC,CAEDgd,YAAYzhB,GACV,GAAIA,EAAKa,KAAM,CACb,MAAMA,EAAO,GAAGb,EAAKa,OAAOb,EAAKwhB,WAAatiB,OAAOjE,IAAI4B,UAAUmD,EAAKshB,UAAY,KAC/EthB,EAAKwhB,WAAaxhB,EAAKwhB,WAAa,KACzC,MAAO,CACLviB,MAAO,GAAG7D,KAAKwI,KAAKuB,SAAS,qBAAqBtE,IAErD,CACF,CAED6gB,YAAY1hB,GACV,GAAIA,EAAKgO,KACP,MAAO,CACL/O,MAAOC,OAAOjE,IAAIqC,WAAW0C,EAAKgO,MAClC5O,KAAM,WAGX,CAEDuiB,iBACE,MAAMC,EAAU,GACV5hB,EAAOpK,KAAK8B,OAGlB,OAFiB9B,KAAKuB,MAGpB,IAAK,YACL,IAAK,OACH,MAGF,IAAK,SACHyqB,EAAQhhB,KAAK,CAAE3B,MAAOe,EAAK6hB,OAAQziB,KAAM,YACrCY,EAAKxB,SACPojB,EAAQhhB,KAAK,CACX3B,MAAO,GAAGe,EAAKihB,MAAMa,SAAS9hB,EAAKihB,MAAMc,UAAU/hB,EAAKihB,MAAMe,OAC9D5iB,KAAM,gBAKVY,EAAK1B,KAAKqM,SAASyR,IACjBwF,EAAQhhB,KAAK,CAAE3B,MAAOmd,EAAEnoB,OAAQ,IAElC,MAGF,IAAK,QACH2tB,EAAQhhB,KAAK,CAAE3B,MAAOC,OAAOjE,IAAIsC,MAAMyC,EAAK7I,MAAOiI,KAAM,cACzD,MAGF,IAAK,QACHwiB,EAAQhhB,KACN,CAAE3B,MAAOe,EAAK0T,OACd,CAAEzU,MAAOe,EAAKihB,OACd,CAAEhiB,MAAOe,EAAKkhB,WAEhB,MAGF,IAAK,UACUlhB,EAAKiiB,aAAaxP,MAAM,KAChC9H,SAASuX,GAAQN,EAAQhhB,KAAK,CAAE3B,MAAOijB,MAC5C,MAIJ,MAAMC,EAAUvsB,KAAK6rB,YAAYzhB,GAC7BmiB,GACFP,EAAQhhB,KAAKuhB,GAGf,MAAMC,EAAUxsB,KAAK8rB,YAAY1hB,GAKjC,OAJIoiB,GACFR,EAAQhhB,KAAKwhB,GAGRR,CACR,CAEDS,cAAczpB,GACZ,MAAMoH,EAAOpK,MAAM8B,OACnB,IAAImS,EAAS,GACT7J,EAAK1B,OACPuL,EAAS7J,EAAK1B,MAEhB,MAAMyY,EAAU,CAAA,EACVuL,EAAS,cAqCf,OApCIzY,EACFjR,EAAO+R,SAAS9B,IAEd,MAAM0Z,EAAUD,EAAOE,KAAK3Z,GAC5B,IAAI5I,EAAQ,GASZ,OARIsiB,GACFtiB,EAAQsiB,EAAQ,GAChB1Z,EAAMA,EAAI4Z,MAAM,EAAGxsB,KAAKT,IAAI,EAAG+sB,EAAQG,QAAQC,QAG/C1iB,EADA4I,EAAMA,EAAI8Z,OAIJ9Z,GACN,KAAK3J,OAAOjE,IAAIqD,KAAKC,MACnBwY,EAAQxY,OAAQ,EAChB,MAGF,KAAKW,OAAOjE,IAAIqD,KAAKG,KACnBsY,EAAQtY,MAAO,EACf,MAGF,KAAKS,OAAOjE,IAAIqD,KAAKE,QACnBuY,EAAQvY,SAAU,EAIjBuY,EAAQxY,OAAUwY,EAAQtY,MAASsY,EAAQvY,SAC9CqL,EAAOjJ,KAAK,CAAEX,QAAOhM,MAAO4U,EAAK5J,MAAO4J,GAAM,IAGlDgB,EAASjR,EAEXme,EAAQzY,KAAOuL,EACRjU,KAAKiU,OAAO,CAAEnS,OAAQqf,GAC9B,CAED6L,aAAa3uB,GACX,MAAMsV,EAAW3T,KAAK8B,QAEhB4G,KAAEA,GAASiL,EACjB,IAAKjL,EAAM,OAEX,MACMyY,EAAU,CACdzY,KAFaA,EAAK0F,QAAQyE,GAAOA,EAAGxU,OAASA,KAI/C,OAAO2B,KAAKiU,OAAO,CAAEnS,OAAQqf,GAC9B,CAEDlW,KAAK5J,EAAU,IACb,MAAMsS,EAAW3T,KAAK8B,OACtB,OAAQ9B,KAAKuB,MACX,IAAK,SACHvB,KAAK+X,WAAW1W,GAChB,MAGF,IAAK,QACHrB,KAAKgY,WAAW3W,GAChB,MAGF,IAAK,UACCsS,EAAS1I,KACXjL,KAAKiY,cAELjY,KAAKiX,OAEP,MAGF,IAAK,OACL,IAAK,QACHjX,KAAKiX,OAGV,CAOD/M,aACE,MAAMihB,EAAWnrB,KAAKuB,MAEhBmY,MAAEA,GAAU1Z,KAAK0N,MACjB7C,EAAe,CACnB6C,MAAO1N,KAAK0N,MACZ+L,QAASC,EAAQ,GAAGA,EAAMgC,OAAOjW,MAAMiU,EAAMjU,KAAO,KACpDiP,KAAM1U,KAAKyrB,QACXrV,OAAQpW,KAAKyrB,QAAQhmB,GACrB2E,WAAYpK,KAAKitB,cACjBC,OAAQltB,KAAKktB,OACbC,UAAWntB,KAAKmtB,UAChBC,UAAWptB,KAAKotB,UAChBC,QAAsB,UAAblC,EACTmC,QAASttB,KAAKstB,QACdxiB,OAAQxB,OAAOjE,KAEjBwF,EAAaoN,YAAc,IAAI/M,KAAKL,EAAaT,KAAKa,KAAMJ,GAAcmE,QAC1EnE,EAAaT,KAAKmhB,WAAavrB,KAAK8B,OAAO6pB,SAG3C,MAAMjhB,EAAW,GAAGrF,EAAIC,6CAClBmK,QAAavD,eAAexB,EAAUG,GAGtCF,EAAW,CACfC,KAAMpF,KAAKoF,KAAKnF,GAChBlE,KAAMgsB,MAAMC,oBAAoBC,MAChCthB,QAASsD,EACTlF,QAAS,CACPmD,MAAO1N,KAAK0N,MAAMjI,GAClBiU,MAAO1Z,KAAK0N,MAAMgM,MAClBgU,MAAO1tB,KAAK0N,MAAM8C,OAKhBlF,EAAW9F,KAAKI,SAAStG,IAAI,OAAQ,YAO3C,MANI,CAAC,SAAU,aAAayD,SAASuI,KACnCX,EAASc,QAAUC,YAAYC,qBAAqB,OACrC,aAAbL,IAAyBX,EAASc,QAAU,CAACjG,KAAKoF,KAAKnF,KAC1C,cAAb6F,IAA0BX,EAASkB,OAAQ,GAGxCH,YAAYa,OAAO5B,EAC3B,CAQDga,gCAAgCnS,GAC9BA,EAAMwB,iBACN,MAEM7H,EAFSqG,EAAMjB,cACDC,QAAQ,cACP9B,cAAc,iBACL,SAA1BvD,EAAQ4K,MAAMC,QAChB1F,EAAEnF,GAASsK,UAAU,KAErBnF,EAAEnF,GAASuK,QAAQ,IAEtB,CAEDiO,+BAA+BnS,GAC7BA,EAAMwB,iBAGN,MAAM2Z,EAASnb,EAAMjB,cACrBoc,EAAO7nB,UAAW,EAClB,MAAM8nB,EAAOD,EAAOnc,QAAQ,eACtBqc,UAAEA,GAAcD,EAAKpc,QAAQ,YAAYuB,QACzC+a,EAAUtoB,KAAKuoB,SAASzuB,IAAIuuB,IAC5BG,OAAEA,GAAWL,EAAO5a,QAGpBkb,EAAyB,SAAXD,EACpB,KAAMC,GAAezoB,KAAKoF,KAAKY,MAAQsiB,EAAQI,UAAW,OAG1D,MAAMxgB,EAAQ1N,KAAKmuB,kBAAkBP,GACrC,IAAKlgB,EAAO,OAGZ,MAAMgH,EAAOhH,EAAM5N,MAAMR,IAAIsuB,EAAK7a,QAAQqD,QAC1C,IAAK1B,EACH,OAAOnG,GAAGC,cAAcC,MACtBjJ,KAAKwI,KAAKC,OAAO,sCAAuC,CACtDmgB,UAAW1gB,EAAM8C,KACjB4F,OAAQwX,EAAK7a,QAAQqD,UAM3B,IAAIiY,EAAU,GAMd,OALIJ,IACFI,EAAUruB,KAAKsuB,oBAAoBV,IAI7BI,GACN,IAAK,eACGtZ,EAAK9F,WAAW,CAAE4D,UACxB,MAGF,IAAK,gBACGkC,EAAKuD,YAAY,CAAEzF,UACzB,MAGF,IAAK,OACH,GAAuB,IAAnB6b,EAAQ/f,OAIV,OAHAC,GAAGC,cAAcC,MACfjJ,KAAKwI,KAAKuB,SAAS,gCAEboe,EAAO7nB,UAAW,EAE5B,IAAK,MAAM0gB,KAAK6H,QACR7H,EAAEnO,SAASsV,EAAO5a,QAAQqF,KAAM,CAAE5F,UAS9Cmb,EAAO7nB,UAAW,CACnB,CAED6e,yBAAyBiJ,GAEvB,MAAMW,EAAWX,EAAK7a,QAAQ0G,QAC9B,GAAI8U,EAAU,CACZ,MAAOlV,EAASI,GAAW8U,EAAS1R,MAAM,KACpCrD,EAAQhU,KAAKgpB,OAAOlvB,IAAI+Z,GAC9B,IAAKG,EAAO,OAAO,KACnB,MAAMiV,EAAYjV,EAAMkV,oBAAoB,QAASjV,GACrD,IAAKgV,EAAW,OAAO,KAEvB,OADc,IAAIE,MAAMF,GACX/gB,KACd,CAGD,MAAM0L,QAAEA,GAAYwU,EAAK7a,QACzB,OAAOvN,KAAKopB,OAAOtvB,IAAI8Z,IAAY,IACpC,CAEDuL,2BAA2BiJ,GACzB,MAAMiB,UAAEA,GAAcrpB,KAAKoF,MACrBkkB,WAAEA,GAAevV,OAAOwV,OACxBV,EAAUS,EAAWltB,QACzB,CAACotB,EAAKxI,IAAOA,EAAE9Y,MAAQ,IAAIshB,EAAKxI,EAAE9Y,OAASshB,GAC3C,IAGF,OADIH,GAAmC,IAAtBC,EAAWxgB,QAAc+f,EAAQrjB,KAAK6jB,GAChDR,CACR,EC3gBH,MAAMY,GAAuBD,GAC3BA,EAAIptB,QAAO,CAAC4e,EAAG1W,IAAOA,EAAI,IAAI0W,EAAG1W,GAAK0W,GAAI,IAE7B,MAAM0O,WAAiBC,MACpCxG,qBACMnjB,KAAK4pB,QAAQC,WAAW,OAAOrvB,KAAK8B,OAAO6mB,sBAChD,CAEDhE,mBAAmBlM,GAcjB,MAZoB,KAAhBA,GAAQ7E,MACV6E,EAAO7E,IAAM,6BAE8B,KAAzC6E,GAAQ6W,gBAAgBC,SAAS3b,MACnC6E,EAAO6W,eAAeC,QAAQ3b,IAAM,6BAGlC6E,GAAQ3W,QAAQ8mB,UAAUvqB,QAAUoa,GAAQ3W,QAAQsL,QAAQwb,WAC9DnQ,EAAO3W,OAAOsL,QAAQwb,SAAWnQ,EAAO3W,OAAO8mB,SAASvqB,aACjDoa,EAAO3W,OAAO8mB,SAASvqB,OAGzBoa,CACR,CAEDvO,aAAaE,EAAM/I,EAAU,IAC3B,MAAM8f,EAAU,IAAK/W,IAEnB,kBAAmBolB,EACnB,mBAAoBC,EACpB,mBAAoBC,EACpB,qBAAsBC,GACpBxO,EAEAqO,EACFrO,EAAQ,oBAAsB,GAAKqO,EAC1BC,IACTtO,EAAQ,mBAAqB,GAAKsO,GAIhCE,EACFxO,EAAQ,oBAAsB,GAAKwO,EAC1BD,IACTvO,EAAQ,sBAAwB,GAAKuO,GAGvCpuB,MAAM2S,OAAOkN,EAAS9f,EACvB,CAED6I,8BAA8B0lB,EAAcxlB,EAAO,GAAIsgB,EAAU,CAAA,GAM/D,OALAtgB,EAAKyH,KAAK6C,SACSkQ,IAAblQ,EAAKd,MACPc,EAAKd,IAAM0W,GAAQC,aAAa7V,EAAKnT,MACtC,IAEID,MAAMwS,wBAAwB8b,EAAcxlB,EAAMsgB,EAC1D,CAKDmF,cAAcxxB,EAAOgD,EAAU,IAC7B,MAAMyuB,EAAY9vB,KAAK8B,OAKvB,GAAkB,cAJA9B,KAAKuB,KAKrB,OAEF,MAAMwuB,EAAW1vB,KAAK2vB,MACpB3xB,EAASyxB,EAAU1iB,QAAQ6iB,GAAGllB,MAAQ1M,EAAS,KAEjD,OAAO2B,KAAKiU,OAAO,CACjB,0BAAS8b,EAAWD,EAAU1iB,QAAQ6iB,GAAG5xB,QACxCO,MAAK,KACN,MAAM2L,EAAUmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OAChD0L,YAAYa,OAAO,CACjBJ,QAAS3G,KAAKwI,KAAKC,OAAO,6BAA8B,CACtDuC,KAAMxQ,KAAKwQ,KACXnS,MAAO0xB,IAETxlB,WACA,GAEL,CAEDwL,QACE,OAAO/V,KAAK8B,OAAOiU,KACpB,CAEDma,aAAa7G,GACXA,EAAKA,EAAGtmB,SAAS,KAAO2U,SAAS2R,GAAM,EAAI3R,SAAS2R,GAGpD,IAAIE,EAAQ,CAAA,EACZ,IAAK,IAAIlmB,EAAI,EAAGA,GAAKgmB,EAAIhmB,IAAK,CAC5B,MAAM8sB,EAAM7mB,OAAOjE,IAAIqE,cAAcrG,GACjC8sB,IACF5G,EAAQ4G,EAEX,CAGD,IAAI7iB,EAAQ,GACZpM,OAAOomB,KAAKhe,OAAOjE,IAAI2E,eAAe+K,SAASqb,IACzC/G,EAAK3R,SAAS0Y,KAClB9iB,EAAQhE,OAAOjE,IAAI2E,cAAcomB,GAAE,IAGrCpwB,KAAKiU,OAAO,CACV,qBAAsB3G,EACtB,mBAAoB,GAAKA,EACzB,eAAgB,CACdjG,MAAO,CACLhJ,MAAOkrB,EAAM5f,GAEfrC,KAAM,CACJjJ,MAAOkrB,EAAM3f,GAEfrC,UAAW,CACTlJ,MAAOkrB,EAAM1f,GAEfrC,OAAQ,CACNnJ,MAAOkrB,EAAMzf,GAEfrC,MAAO,CACLpJ,MAAOkrB,EAAMxf,KAIpB,CAMDG,aAAa7I,EAAU,IACrB,MAAMyL,MAAEA,SAAgB,IAAI5B,KAAKlL,KAAK8B,OAAOsnB,GAAGC,IAAIpe,KAAK,CAAEf,OAAO,IAClE,OAAOlK,KAAKiU,OAAO,CAAE,YAAa,CAAErU,IAAKkN,EAAOzO,MAAOyO,IACxD,CAEDuL,SAASD,EAAM/W,EAAU,IACvB,MAAMgI,EAAQ7D,KAAKwI,KAAKuB,SAAS,aAAa6I,UAExC0X,EAAY9vB,KAAK8B,OACjBuuB,EAAYrwB,KAAKuB,KAEjB6I,EAAO,CACXsD,MAAO1N,KACPiL,KAAM,CACJ1J,KAAM,QACNsL,OAAQijB,EAAUvG,MAAMnR,GAAM/Z,MAC9BsR,MAAqB,cAAd0gB,EAA4BP,EAAU3pB,OAAOI,IAAI8b,IAAM,GAEhEjV,QAAS5H,KAAKwI,KAAKC,OAAO,wBAAyB,CAAEmK,KAAM/O,KAO7D,OAHgB,cAAdgnB,EAA4BpmB,EAAQqmB,SAAWrmB,EAAQiB,MAGvC,CAChBsH,MAAOnR,EAAQmR,MACfrI,MApBgB,CAAC,QAqBjBC,OACAyE,WAAYxN,EAAQkvB,aAAetb,EAAoB5T,EAAQmR,OAC/DjI,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQ9E,KAAKwI,KAAKC,OAAO,gBAAiB,CAAEmK,KAAM/O,IAClDgB,MAAO7E,KAAKwI,KAAKC,OAAO,gBAAiB,CAAEmK,KAAM/O,IACjDoB,YAAapJ,EAAQoJ,aAExB,CAED+lB,WAAWnvB,EAAU,IACnB,MAIM+I,EAAO,CACXsD,MAAO1N,KACPiL,KAAM,CACJ1J,KAAM,QACNsL,OARc7M,KAAK8B,OAQDsL,QAAQqjB,SAK9B,OAAOxmB,EAAQiB,KAAK,CAClBsH,MAAOnR,EAAQmR,MACfrI,MAbgB,CAAC,OAcjBC,OACAyE,YAAY,EACZtE,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQ9E,KAAKwI,KAAKuB,SAAS,mBAC3BlF,MAAO7E,KAAKwI,KAAKuB,SAAS,oBAE7B,CAEDoS,YAAYtgB,EAAU,IACpB,MAAMgI,EAAQ7D,KAAKwI,KAAKuB,SAAS,oBAK3BnF,EAAO,CACXsD,MAAO1N,KACPiL,KAAM,CACJ1J,KAAM,QACNsL,OANc7M,KAAK8B,OAMD4nB,SAAShE,UAK/B,OAAOzb,EAAQiB,KAAK,CAClBsH,MAAOnR,EAAQmR,MACfrI,MAfgB,CAAC,OAgBjBC,OACAyE,YAAY,EACZtE,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQjB,EACRgB,MAAOhB,GAEV,CAEDqnB,aAAarvB,EAAU,IACrB,MAEM+I,EAAO,CACXsD,MAAO1N,KACPiL,KAAM,CACJ1J,KAAM,QACN2L,MAAO,CACL,EAAG1H,KAAKwI,KAAKC,OAAO,uBAAwB,CAC1CuC,KAAMxQ,KAAKwQ,OAEb,EAAGhL,KAAKwI,KAAKC,OAAO,0BAA2B,CAC7CuC,KAAMxQ,KAAKwQ,OAEb,EAAGhL,KAAKwI,KAAKC,OAAO,uBAAwB,CAC1CuC,KAAMxQ,KAAKwQ,OAEb,EAAGhL,KAAKwI,KAAKC,OAAO,2BAA4B,CAC9CuC,KAAMxQ,KAAKwQ,OAEb,GAAIhL,KAAKwI,KAAKC,OAAO,wBAAyB,CAC5CuC,KAAMxQ,KAAKwQ,UAOnB,OAAOvG,EAAQiB,KAAK,CAClBsH,MAAOnR,EAAQmR,MACfrI,MA7BgB,CAAC,OA8BjBC,OACAyE,WAAYxN,EAAQkvB,aAAetb,EAAoB5T,EAAQmR,OAC/DjI,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQ9E,KAAKwI,KAAKuB,SAAS,sBAC3BlF,MAAO7E,KAAKwI,KAAKuB,SAAS,uBAE7B,CAEDmS,UAAUtP,EAAO/Q,EAAU,IAGzB,GAAkB,cAFArB,KAAKuB,KAEQ,OAE/B,MAAMuuB,EAAY9vB,KAAK8B,OAEjBuH,EAAQ7D,KAAKwI,KAAKuB,SAAS,cAAc6C,UAGzChI,EAAO,CACXsD,MAAO1N,KACPiL,KAAM,CACJ1J,KAAM,QACNsL,OAAQijB,EAAU3pB,OAAOiM,GAAO/T,OAGlC+O,QAAS5H,KAAKwI,KAAKC,OAAO,6BAA8B,CACtDmE,MAAO/I,KAKX,OAAOY,EAAQiB,KAAK,CAClBsH,MAAOnR,EAAQmR,MACfrI,MAjBgB,CAAC,QAkBjBC,OACAyE,WAAYxN,EAAQkvB,aAAetb,EAAoB5T,EAAQmR,OAC/DjI,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQ9E,KAAKwI,KAAKC,OAAO,qBAAsB,CAAE0iB,UAAWtnB,IAC5DgB,MAAO7E,KAAKwI,KAAKC,OAAO,qBAAsB,CAAE0iB,UAAWtnB,IAC3DoB,YAAapJ,EAAQoJ,aAExB,CAED0T,YAAY9c,EAAU,IACpB,MAAMgvB,EAAYrwB,KAAKuB,KAEjBuuB,EAAY9vB,KAAK8B,OAEjBuH,EAAQ7D,KAAKwI,KAAKuB,SAAS,eAC3B8C,EAAY,CAACyd,EAAU1G,GAAGC,IAEd,cAAdgH,GACFhe,EAAUrH,KAAK8kB,EAAU3pB,OAAOK,IAAI6b,IAAMyN,EAAU1iB,QAAQwjB,OAG9D,MAAMxmB,EAAO,CACXsD,MAAO1N,KACPiL,KAAM,CACJ1J,KAAM,YAKV,OAAO0I,EAAQiB,KAAK,CAClBsH,MAAOnR,EAAQmR,MACfrI,MAAOkI,EACPjI,OACAyE,YAAY,EACZtE,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQjB,EACRgB,MAAOhB,GAEV,CAEDwnB,cAAcxvB,EAAU,IAEtB,GAAkB,YADArB,KAAKuB,KACM,OAE7B,MAAMuuB,EAAY9vB,KAAK8B,OAEjBuQ,EAAY,GAClB,IAAIhJ,EAAQ,GACU,eAAlBhI,EAAQyvB,OACVze,EAAUrH,KAAK8kB,EAAU1iB,QAAQ2jB,UAAUnnB,GAC3CP,EAAQ,QAERgJ,EAAUrH,KAAK8kB,EAAU1iB,QAAQ2jB,UAAUpnB,GAC3CN,EAAQ,OAEV,MAAMe,EAAO,CACXsD,MAAO1N,KACPiL,KAAM,CACJ1J,KAAM,CACJA,KAAM,eAMZ,OAAO0I,EAAQiB,KAAK,CAClBsH,MAAOnR,EAAQmR,MACfrI,MAAOkI,EACPjI,OACAyE,YAAY,EACZtE,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQ9E,KAAKwI,KAAKC,OAAO,qBAAsB,CAAE1M,KAAM8H,IACvDgB,MAAO7E,KAAKwI,KAAKC,OAAO,qBAAsB,CAAE1M,KAAM8H,KAEzD,CAEDyY,gBAAgBF,EAAMvgB,EAAU,IAE9B,GAAkB,cADArB,KAAKuB,KACQ,OAC/B,MAAMuuB,EAAY9vB,KAAK8B,OAEjBuH,EAAQ7D,KAAKwI,KAAKuB,SAAS,mBAAmBqS,UAG9CxX,EAAO,CACXsD,MAAO1N,KACPiL,KAAM,CACJ1J,KAAM,QACNsL,OAAQijB,EAAUjO,YAAYD,GAC9BrW,WAAW,GAEb6B,QAAS5H,KAAKwI,KAAKC,OAAO,+BAAgC,CACxD2T,KAAMvY,KAKV,OAAOY,EAAQiB,KAAK,CAClBsH,MAAOnR,EAAQmR,MACfrI,MAjBgB,CAAC,OAkBjBC,OACAyE,WAAYxN,EAAQkvB,aAAetb,EAAoB5T,EAAQmR,OAC/DjI,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQ9E,KAAKwI,KAAKC,OAAO,uBAAwB,CAAE4T,YAAaxY,IAChEgB,MAAO7E,KAAKwI,KAAKC,OAAO,uBAAwB,CAAE4T,YAAaxY,KAElE,CAEDuF,WAAWoiB,EAAS3vB,EAAU,IAC5B,MAAM+I,EAAOpK,KAAK8B,OAEZqN,EAAW,CACfzB,MAAO1N,KACP0U,KAAMsc,EAAQtc,KACdzJ,KAAM,CACJ1J,KAAM,WAIJ0vB,EAAW,GACbD,EAAQ/lB,KAAKkD,IACf8iB,EAASjmB,KAAKgmB,EAAQ/lB,KAAKkD,KAE3B8iB,EAASjmB,KAAK,OAIU,UAAtBgmB,EAAQ/lB,KAAK1J,MAAoB6I,EAAKjE,OAAOC,IAAIic,KACnD4O,EAASjmB,KAAKZ,EAAKjE,OAAOC,IAAIic,KAIhCpY,EAAQiB,KAAK,CACXsH,MAAOnR,EAAQmR,MACfrI,MAAO8mB,EACP7mB,KAAM+E,EACNN,YAAY,EACZtE,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQ,GAAG0mB,EAAQ3nB,WAAW7D,KAAKwI,KAAKuB,SAAS,gBACjDlF,MAAO,GAAG2mB,EAAQ3nB,WAAW7D,KAAKwI,KAAKuB,SAAS,iBAEnD,CAEDrF,mBAAmBE,EAAM7I,EAAMF,GAC7B,GAAImE,KAAKoF,KAAKyjB,QAAQ6C,KAAO,EAC3B,IAAK,MAAM1K,KAAKhhB,KAAKoF,KAAKyjB,QAAQrrB,SAChCoH,EAAKa,KAAK4B,OAAS2Z,QACbxmB,KAAKmxB,WAAW/mB,EAAM,CAC1B7I,OACAsN,WAAYxN,EAAQwN,kBAIxB7O,KAAKmxB,WAAW/mB,EAAM,CAAE7I,OAAMsN,WAAYxN,EAAQwN,YAErD,CAgBDsiB,WAAWH,EAAS3vB,EAAU,IAC5B,MAAM+I,EAAOpK,KAAK8B,OAEZuH,EAAQ2nB,EAAQtc,KAClBlP,KAAKwI,KAAKC,OAAO,uBAAwB,CACvCuC,KAAMwgB,EAAQtc,KAAKlE,OAErBhL,KAAKwI,KAAKC,OAAO,mBAAoB,CACnCuC,KAAMxQ,KAAKwQ,OAGXygB,EAAWhC,GAAoB,CAEnC+B,EAAQtc,MAAM5S,QAAQmqB,QAAU,SAE7BjsB,KAAK8B,OAAOgJ,QAAQsmB,mBAAqBJ,EAAQtc,MAAM5S,QAAQiJ,OAElEkmB,EAASjmB,KAAKgmB,EAAQtc,MAAM5S,QAAQiJ,OAEtC,MAAMsH,EAAY,CAAC,QACD7M,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,gBAEnC2E,EAAKkD,MAAMuc,KAAKxX,EAAUrH,KAAKZ,EAAKkD,MAAMuc,KAI3D,IAAIwH,EAAa,GAEI,UAAjBhwB,EAAQE,OACV8vB,EAAa,CAACjnB,EAAKjE,OAAOC,IAAIic,IAAKjY,EAAKkD,MAAM+U,IAAI1Z,QAEpDsoB,EAASjmB,QAAQikB,GAAoBoC,IAGhB,YAAjBhwB,EAAQE,OACV8vB,EAAa,CAACjnB,EAAKjE,OAAOG,IAAI+b,IAAKjY,EAAKkD,MAAM+U,IAAIzZ,UAGhDooB,EAAQtc,MAAM2c,EAAWrmB,KAAKgmB,EAAQtc,MAAM5S,QAAQiJ,OAExDsH,EAAUrH,QAAQikB,GAAoBoC,IAEtC,MAAMliB,EAAW,CACfzB,MAAO1N,KACP0U,KAAMsc,EAAQtc,KACd0B,OAAQ4a,EAAQtc,MAAM9I,IACtBX,KAAM,CACJ1J,KAAMF,EAAQE,KACd+L,MAAOlD,EAAKkD,MAAMjP,MAClB8P,IAAK8iB,EACL7Y,KAAM4Y,EAAQ/lB,KAAKmN,KACnBvL,OAAQmkB,EAAQ/lB,KAAK4B,SAIzB,OAAO5C,EAAQiB,KAAK,CAClBsH,MAAOnR,EAAQmR,MACfrI,MAAOkI,EACPjI,KAAM+E,EACNN,WAAYxN,EAAQwN,WACpBtE,QAASmB,YAAY+G,WAAW,CAAE/E,MAAO1N,OACzCsK,OAAQjB,EACR6E,MAAO,CAAEojB,IAAK,CAAErmB,KAAM,SAAUmL,OAAQ4a,EAAQtc,MAAM9I,MACtDvB,MAAOhB,GAEV,CAODa,kBAAkBqnB,EAAS,EAAGC,EAAa,GACzCD,EAASlxB,KAAK2vB,MAAMtY,SAAS6Z,GAAUC,GAEvC,MAAMnzB,MAAEA,EAAKuB,IAAEA,GAAQI,KAAK8B,OAAOsnB,GAGnC,OAAOppB,KAAKiU,OAAO,CACjB,kBAAmB5T,KAAKC,MAAMjC,EAAQkzB,EAAQ,EAAG3xB,IAEpD,ECjiBY,MAAM6xB,WAA6Bjc,EAMrCrF,4BACT,OAAOO,QAAQC,MAAMsO,YAAY3d,MAAM6O,eAAgB,CACrDC,QAAS,CAAC,MAAO,QAAS,UAAW,SACrC1F,SAAU,GAAGrF,EAAIC,mDACjB+K,MAAO,IACP+M,OAAQ,IACRF,WAAW,EACXgC,KAAM,CACJ,CACEC,YAAa,QACbC,gBAAiB,cACjBC,QAAS,gBAIhB,CAQDE,cAAcnV,GAEZA,EAAKoV,MAAQ,CACXE,QAAS1f,KAAK0N,MAAM5L,OAAO4d,QAC3B5f,MAAOE,KAAK0N,MAAM5L,OAAOhC,MACzB8f,WAAY5f,KAAK0N,MAAM5L,OAAO8d,WAC9BH,OAAQzf,KAAK0N,MAAM5L,OAAO6F,MAC1BgY,UAAW3f,KAAK0N,MAAM5L,OAAO6d,WAG/BvV,EAAK+f,eAAiBnqB,KAAK0N,MAAM5L,OAAOqoB,eACxC/f,EAAK2V,OAAS/f,KAAK0N,MAAM5L,OAAOie,OAAOC,SACxC,CAMD9V,gBACE,MAAME,EAAO9I,MAAMmP,UAEnBzQ,KAAKuf,cAAcnV,GAEnB,MAAMsnB,EAActnB,GAAMtI,OAgB1B,OAbAsI,EAAKU,OAAO2lB,OAASjrB,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,UACvDisB,EAAYtkB,QAAQrL,SAAS4vB,WAAahR,WAAWC,WACnD8Q,EAAYtkB,QAAQrL,SAASmL,MAC7B,CAAEhD,OAAO,IAEXE,EAAK2L,MAAQ/V,KAAK0N,MAAMqI,QAEpBrF,QAAQC,MAAMihB,eAAepsB,KAAK4pB,QAAS,YAC7ChlB,EAAKsW,wBAA0BC,WAAWC,WACxC5gB,KAAKuQ,OAAOzO,OAAOsL,QAAQyT,UAC3B,CAAE3W,OAAO,KAGNE,CACR,CAKDF,qBACE,MAEMW,EAAe,CAAEwR,QAFP/S,OAAOjE,IAAIqE,eAGrB6S,QAAYrQ,eAChB,GAAG7G,EAAIC,2DACPuF,GAGF,IAAIgF,OACF,CACExF,MAAO7E,KAAKwI,KAAKuB,SAAS,4BAC1BpD,QAASoQ,EACTlN,QAAS,CACPC,GAAI,CACFjG,MAAO7D,KAAKwI,KAAKuB,SAAS,UAC1B/F,KAAM,+BACNgG,SAAWC,IACT,MAAM4Z,EAAK5Z,EAAKuC,KAAK,oBAAoBiB,MACzCjT,KAAK0N,MAAMwiB,aAAa7G,EAAG,GAG/BzZ,OAAQ,CACNpG,KAAM,+BACNH,MAAO7D,KAAKwI,KAAKuB,SAAS,gBAG9BO,QAAS,MAEX,CACEO,MAAO,MAETtE,QAAO,EACV,CAED7B,cAAcsI,GAEZ,IAAIpI,EADJ9I,MAAMuwB,QAAQrf,GAEd,IAEE,GADApI,EAAO6P,KAAKkC,MAAM3J,EAAMuH,aAAatJ,QAAQ,eAC3B,cAAdrG,EAAK7I,KAAsB,MAGhC,CAFC,MAAOkN,GACP,OAAO,CACR,CAED,IAAIkjB,EAAO,GACX,GAAIvnB,EAAKuP,KAAM,CACb,MAAMmY,EAAatsB,KAAKusB,MACrBzyB,IAAI8K,EAAKuP,MACTmT,MAAM9a,MAAMa,GAAOA,EAAGjH,MAAQxB,EAAK3E,KACtCksB,EAAO,SAASvnB,EAAKkQ,SAASwX,EAAWthB,OAC/C,MACMmhB,EAAO,SAASvnB,EAAKkQ,QAEvBta,KAAK0N,MAAMuG,OAAO,CAAE,gCAAiC0d,GACtD,CAGDznB,oBAAoBsI,GAClB,OAAOvU,QAAQ+zB,IACbhyB,KAAK0N,MAAM5N,MACRsO,QAAQ/K,GAAiB,WAAXA,EAAE9B,OAChBsQ,KAAK4Y,GACJA,EAAOxW,OAAO,CACZ,uBAAwByD,SAAS+S,EAAO3oB,OAAOgW,QAAQlY,SAIhE,CAEDsK,2BAA2BsI,GACzBA,EAAMwB,iBACN,MAAMU,EAAO1U,KAAKkW,kBAAkB1D,GAEpC,MAAmC,UAA/BA,EAAM3F,OAAOkG,QAAQ0E,MAChB/C,EAAKT,OAAO,CACjB,uBAAwByD,SAASlF,EAAM3F,OAAOxO,SAGf,QAA/BmU,EAAM3F,OAAOkG,QAAQ0E,MAChB/C,EAAKT,OAAO,CACjB,qBAAsByD,SAASlF,EAAM3F,OAAOxO,cAFhD,CAKD,CAED4zB,qBAAqBzf,GACnB,MAAMkC,EAAOpT,MAAM4U,kBAAkB1D,GAC/B0f,EAAexd,EAAK5S,OAAOsoB,QAE3BniB,EAAS/G,OAAOomB,KAAKhe,OAAOjE,IAAI4C,QACtCA,EAAO+C,KAAK,eACZ,IAAI8hB,EAAQ7kB,EAAO0e,QAAQuL,GACvBpF,EAAQ,IAAM7kB,EAAOqG,OACvBwe,EAAQ,EAERA,IAEFpY,EAAKT,OAAO,CACV,iBAAkBhM,EAAO6kB,IAE5B,CAODna,kBAAkBlD,GAChBnO,MAAMqR,kBAAkBlD,GAExBA,EAAKuC,KAAK,mBAAmBY,OAAOxB,IACdpR,KAAK0N,MACb8iB,WAAW,CAAEhe,MAAOpB,GAAK,IAGvC3B,EAAKuC,KAAK,qBAAqBY,OAAOxB,IAChBpR,KAAK0N,MACbgjB,aAAa,CAAEle,MAAOpB,GAAK,IAGzC3B,EAAKuC,KAAK,sBAAsBY,OAAOxB,IACrC,MAAM8G,EAAclY,KAAK0N,MACnBojB,EAAQxf,EAAEF,EAAGG,eAAeC,QAAQ,gBAAgBpH,KAAK,SAC/D8N,EAAY2Y,cAAc,CAAEre,MAAOpB,EAAI0f,SAAQ,IAGjDrhB,EAAKuC,KAAK,qBAAqBmgB,aAAa/gB,IAC1CpR,KAAK0N,MAAMuG,OAAO,CAAE,gCAAiC,MAAO,IAIzDjU,KAAKqB,QAAQuU,WAElBnG,EAAKuC,KAAK,4CAA4CY,OAAOxB,IAC3DpR,KAAKoyB,cAAchhB,EAAG,IAGxB3B,EACGuC,KAAK,kBACLY,OAAOxB,GAAOA,EAAGvE,OAAO8R,WACxBxL,OAAOnT,KAAKqyB,qBAAqBxT,KAAK7e,OAEzCyP,EAAKuC,KAAK,YAAYY,OAAOxB,IAC3BpR,KAAK0N,MAAM4kB,OAAO,CAAE9f,MAAOpB,GAAK,IAGlC3B,EAAKuC,KAAK,iBAAiBY,OAAOxB,GAAOpR,KAAKiyB,qBAAqB7gB,KAEnE3B,EACGuC,KAAK,wCACLY,OAAM,IAAM5S,KAAKkwB,iBACrB,ECvOH,MAAMqC,GAAU,CAOdC,gBAAe9kB,MACbA,EAAQ,CAAE,EAAAtD,KACVA,EAAO,CACLa,KAAM,KAEN,CAAA,GAEF,MAAMwnB,EAAc,CAClB/kB,QACAtD,QAIF,OADmB,IAAIc,KAAKd,EAAKa,KAAMwnB,GAAazjB,OAErD,EAOD0jB,cAAa,EAAChH,SACZA,EAAW,GAAuCE,WAClDA,EAAa,MACX,KAGe,OAAfA,EACI,GACA,IAAItiB,OAAOjE,IAAI4B,UAAUykB,KAAYE,KCnChC,MAAM+G,WAA4BjiB,QAAQ+X,SAASC,cAChE/D,sBACE,MAAMmE,YAAEA,EAAWC,YAAEA,EAAWC,aAAEA,EAAY4J,WAAEA,EAAU3J,YAAEA,GAC1DvY,QAAQtG,KAAK+e,OACf,MAAO,CACL/Q,KAAM,IAAI0Q,EACVsB,QAAS,IAAItB,EACbuD,aAAc,IAAIvD,EAClB7d,KAAM,IAAI6d,EACV4C,SAAU,IAAI5C,EACd8C,WAAY,IAAI7C,EAChBxd,UAAW,IAAIyd,EACf8B,YAAa,IAAIhC,EACjBpgB,KAAM,IAAIkqB,EAAW,IAAI3J,GAE5B,CAEGsD,QACF,IAAKvsB,KAAKiL,KAAM,OAAO,KAcvB,MAAO,CACL5B,MAAO,GAbS7D,KAAKwI,KAAKuB,SAAS,qBAEjBgjB,GAAQC,eAAe,CACzC9kB,MAAO1N,KAAK0b,OAAOhO,MACnBtD,KAAMpK,KAAKyrB,YAGM8G,GAAQG,cAAc,CACvChH,SAAU1rB,KAAK0rB,SACfE,WAAY5rB,KAAK4rB,eAMpB,CAEGY,QACF,OAAKxsB,KAAKoY,KAEH,CACL/O,MAAOC,OAAOjE,IAAIqC,WAAW1H,KAAKoY,MAClC5O,KAAM,YAJe,IAMxB,CAEGqpB,iBACF,OAAO7yB,KAAK0I,MAAQ,EACrB,CAEGijB,eACF,MAAO,IACF3rB,KAAKqsB,aAAaxP,MAAM,KAAKhL,KAAKya,IAAG,CAAQjjB,MAAOijB,EAAIS,WAC3D/sB,MAAKusB,EACLvsB,MAAKwsB,GACLpe,QAAQoY,KAAQA,GACnB,EC1DY,MAAMsM,WAA0BpiB,QAAQ+X,SAASC,cAC9D/D,kBAAoB,CAClBriB,UAAW,sBACXC,MAAO,kBACPC,MAAO,kBACPoF,OAAQ,oBAGV+c,sBACE,MAAMuE,YACJA,EAAWJ,YACXA,EAAWC,YACXA,EAAWC,aACXA,EAAY4J,WACZA,EAAU3J,YACVA,GACEvY,QAAQtG,KAAK+e,OACjB,MAAO,CACL5nB,KAAM,IAAIunB,EAAY,CACpBzJ,QAAS,QACThD,QAASnb,OAAOomB,KAAKwL,GAAkBC,cAEzCxlB,GAAI,IAAI2b,EAAY,CAClB7qB,MAAO,IAAI0qB,EAAY,CACrB1J,QAAS,MAGbxR,IAAK,IAAIqb,EAAY,CACnB7qB,MAAO,IAAI0qB,EAAY,CACrB1J,QAAS,OAGbyL,YAAa,IAAIhC,EACjBpgB,KAAM,IAAIkqB,EAAW,IAAI3J,GACzB7mB,SAAU,IAAI4mB,EACdnV,KAAM,IAAIkV,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IACzClI,YAAa,IAAI2R,EACjB9mB,SAAU,IAAIknB,EAAY,CACxB7qB,MAAO,IAAI0qB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IAC1Czf,IAAK,IAAImpB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,MAE1Cpd,OAAQ,IAAI8mB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IAC3C/a,UAAW,IAAIykB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IAEjD,CAEGwT,iBACF,IAAK7yB,KAAK0I,KAAM,OAAO,KAEvB,MAAMuqB,EAAW,IAAIne,IACnB5T,OAAO8B,OAAOsG,OAAOjE,IAAI+D,WAAWyI,KAAI,EAAGxI,WAAYA,KAEzD,OAAOrJ,KAAK0I,KACT0F,QAAO,EAAG/P,YAAa40B,EAAS7zB,IAAIf,KACpCwT,KAAI,EAAGxH,QAAOhM,YAAa,CAC1BgM,QACAhM,QACAgL,MAAOhL,KAEZ,CAEGstB,eACF,MAAMsH,EAAW/xB,OAAO8B,OAAOsG,OAAOjE,IAAI+D,WAEpCuiB,EAAW3rB,KAAK0I,KAAKmJ,KAAI,EAAGxT,WAChC40B,EAASjhB,MAAK,EAAG3I,WAAYhL,IAAUgL,MAGzC,MAAO,CACL,CAAEA,MAAOypB,GAAkBC,WAAW/yB,KAAKuB,MAAOiI,KAAM,gBACrDmiB,KACA3rB,KAAK6yB,YAEPK,OACA9kB,QAAQoY,KAAQA,GACpB,EC3EY,MAAM2M,WAA8BziB,QAAQ+X,SAASC,cAClE/D,sBACE,MAAMuE,YACJA,EAAWJ,YACXA,EAAWC,YACXA,EAAW6J,WACXA,EAAU3J,YACVA,EAAWD,aACXA,GACEtY,QAAQtG,KAAK+e,OACjB,MAAO,CACL9R,QAAS,IAAIub,EAAW,IAAI9J,GAC5BgC,YAAa,IAAIhC,EACjBpgB,KAAM,IAAIkqB,EAAW,IAAI3J,GACzB7mB,SAAU,IAAI4mB,EACdnV,KAAM,IAAIkV,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IACzClI,YAAa,IAAI2R,EACjB9mB,SAAU,IAAIknB,EAAY,CACxB7qB,MAAO,IAAI0qB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IAC1Czf,IAAK,IAAImpB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,MAE1Cpd,OAAQ,IAAI8mB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IAC3C/a,UAAW,IAAIykB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IAEjD,CAEG7E,eACF,IAAKxa,KAAKqX,QAAS,OAAO,KAC1B,IAAKrX,MAAM0b,QAAQA,QAAQ5b,MAAO,OAAO,KACzC,MAAM2F,GAAEA,GAAOzF,KAAK0b,OACpB,OAAO1b,KAAK0b,OAAOA,OAAO5b,MAAMsO,QAC9B,EAAGtM,QAAUqV,kBAAoB1R,IAAO0R,GAE3C,CAEGic,kBACF,OAAOpzB,KAAKwa,SAAS5Y,QACnB,CAACC,GAAOC,QAAUG,SAAQD,eACxBH,EAAMI,GAAUD,GAAU3D,OAAS,IACrC,EAEH,CAEGw0B,iBACF,IAAK7yB,KAAK0I,KAAM,OAAO,KAEvB,MAAMuqB,EAAW,IAAIne,IACnB5T,OAAO8B,OAAOsG,OAAOjE,IAAI+D,WAAWyI,KAAI,EAAGxI,WAAYA,KAEzD,OAAOrJ,KAAK0I,KACT0F,QAAO,EAAG/P,YAAa40B,EAAS7zB,IAAIf,KACpCwT,KAAI,EAAGxH,QAAOhM,YAAa,CAAEgM,QAAOhM,QAAOgL,MAAOhL,KACtD,CAEGstB,eACF,MAAMsH,EAAW/xB,OAAO8B,OAAOsG,OAAOjE,IAAI+D,WAM1C,MAAO,IAJUpJ,KAAK0I,KAAKmJ,KAAI,EAAGxT,WAChC40B,EAASjhB,MAAK,EAAG3I,WAAYhL,IAAUgL,SAGjBrJ,KAAK6yB,YAAYK,OAAO9kB,QAAQoY,KAAQA,GACjE,EC9DY,MAAM6M,WAAyB3iB,QAAQ+X,SAASC,cAC7D/D,sBACE,MAAMuE,YACJA,EAAWJ,YACXA,EAAWC,YACXA,EAAWC,aACXA,EAAY4J,WACZA,EAAU3J,YACVA,GACEvY,QAAQtG,KAAK+e,OACjB,MAAO,CACLpnB,SAAU,IAAIinB,EACd8B,YAAa,IAAIhC,EACjBpgB,KAAM,IAAIkqB,EAAW,IAAI3J,GACzB7mB,SAAU,IAAI4mB,EACdnV,KAAM,IAAIkV,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IACzClI,YAAa,IAAI2R,EACjB9mB,SAAU,IAAIknB,EAAY,CACxB7qB,MAAO,IAAI0qB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IAC1Czf,IAAK,IAAImpB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,MAE1Cpd,OAAQ,IAAI8mB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IAC3C/a,UAAW,IAAIykB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IAEjD,CACGiU,uBACF,OAAOtzB,KAAKiC,OAASjC,KAAKgC,SAAS3D,KACpC,CAEGk1B,qBACF,OAAOvzB,KAAK6T,KAAO7T,KAAKgC,SAAS3D,KAClC,CAEGm1B,0BACF,OAAOnzB,KAAKgE,KAAKrE,KAAKsE,UAAYtE,KAAKgC,SAAS3D,MACjD,CAEDsmB,mBAAmBlM,GAGjB,OAFIA,EAAOrL,SAAS0d,cAAgBrS,EAAOqS,cACzCrS,EAAOqS,YAAcrS,EAAOrL,QAAQ0d,aAC/BrS,CACR,CAEGoa,iBACF,IAAK7yB,KAAK0I,KAAM,OAAO,KAEvB,MAAMuqB,EAAW,IAAIne,IACnB5T,OAAO8B,OAAOsG,OAAOjE,IAAI+D,WAAWyI,KAAI,EAAGxI,WAAYA,KAEzD,OAAOrJ,KAAK0I,KACT0F,QAAO,EAAG/P,YAAa40B,EAAS7zB,IAAIf,KACpCwT,KAAI,EAAGxH,QAAOhM,YAAa,CAAEgM,QAAOhM,QAAOgL,MAAOhL,KACtD,CAEGstB,eACF,MAAMsH,EAAW/xB,OAAO8B,OAAOsG,OAAOjE,IAAI+D,WAM1C,MAAO,IAJUpJ,KAAK0I,KAAKmJ,KAAI,EAAGxT,WAChC40B,EAASjhB,MAAK,EAAG3I,WAAYhL,IAAUgL,SAGjBrJ,KAAK6yB,YAAYK,OAAO9kB,QAAQoY,KAAQA,GACjE,EC5DY,MAAMiN,WAA0B/iB,QAAQ+X,SAASC,cAC9D/D,sBACE,MAAMmE,YAAEA,EAAWC,YAAEA,EAAW6J,WAAEA,EAAU3J,YAAEA,GAC5CvY,QAAQtG,KAAK+e,OACf,MAAO,CACL/Q,KAAM,IAAI0Q,EACVpM,IAAK,IAAIqM,EAAY,CAAEU,UAAU,EAAMuJ,IAAK,IAC5ClV,MAAO,IAAIgL,EACXwC,SAAU,IAAIxC,EACduC,MAAO,IAAIvC,EACX7d,KAAM,IAAI6d,EACVjR,UAAW,IAAIkR,EAAY,CAAEiK,IAAK,IAClCjL,KAAM,IAAIgB,EAAY,CAAEiK,IAAK,IAC7BlI,YAAa,IAAIhC,EACjBpgB,KAAM,IAAIkqB,EAAW,IAAI3J,GAE5B,CAEGsD,QACF,IAAKvsB,KAAKiL,KAAM,OAAO,KASvB,MAAO,CACL5B,MAAO,GARS7D,KAAKwI,KAAKuB,SAAS,qBAEjBgjB,GAAQC,eAAe,CACzC9kB,MAAO1N,KAAK0b,OAAOhO,MACnBtD,KAAMpK,KAAKyrB,YAMd,CAEGe,QACF,OAAKxsB,KAAKoY,KAEH,CACL/O,MAAOC,OAAOjE,IAAIqC,WAAW1H,KAAKoY,MAClC5O,KAAM,YAJe,IAMxB,CAEGqpB,iBACF,OAAO7yB,KAAK0I,MAAQ,EACrB,CAEGijB,eACF,MAAO,CACL,CAAEtiB,MAAOrJ,KAAK8d,OACd,CAAEzU,MAAOrJ,KAAKqrB,OACd,CAAEhiB,MAAOrJ,KAAKsrB,UACdtrB,MAAKusB,EACLvsB,MAAKwsB,GACLpe,QAAQoY,KAAQA,GACnB,ECxDY,MAAMkN,WAA2BhjB,QAAQ+X,SAASC,cAC/D/D,sBACE,MAAMuE,YACJA,EAAWJ,YACXA,EAAWC,YACXA,EAAWC,aACXA,EAAY4J,WACZA,EAAU3J,YACVA,GACEvY,QAAQtG,KAAK+e,OACjB,MAAO,CACL8C,OAAQ,IAAInD,EACZgC,YAAa,IAAIhC,EACjBpgB,KAAM,IAAIkqB,EAAW,IAAI3J,GACzB7mB,SAAU,IAAI4mB,EACd5Q,KAAM,IAAI0Q,EACVuC,MAAO,IAAInC,EAAY,CACrBgD,MAAO,IAAInD,EAAY,CAAEO,SAAS,EAAM0J,IAAK,EAAG3T,QAAS,IACzD8M,OAAQ,IAAIpD,EAAY,CAAEO,SAAS,EAAM0J,IAAK,EAAG3T,QAAS,IAC1D+M,KAAM,IAAIrD,EAAY,CAAEO,SAAS,EAAM0J,IAAK,EAAG3T,QAAS,MAE1DtU,MAAO,IAAIge,EAAY,IACvBqB,QAAS,IAAItB,EACblgB,QAAS,IAAIogB,EACbrgB,MAAO,IAAIqgB,EACXngB,KAAM,IAAImgB,EACVlR,QAAS,IAAIoR,EAAY,CACvB7qB,MAAO,IAAI0qB,EAAY,CAAEO,SAAS,EAAM0J,IAAK,EAAG3T,QAAS,IACzDzf,IAAK,IAAImpB,EAAY,CAAEO,SAAS,EAAM0J,IAAK,EAAG3T,QAAS,MAEzDxL,KAAM,IAAIkV,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IACzClI,YAAa,IAAI2R,EACjB9mB,SAAU,IAAIknB,EAAY,CACxB7qB,MAAO,IAAI0qB,EAAY,CAAEiK,IAAK,IAC9BpzB,IAAK,IAAImpB,EAAY,CAAEiK,IAAK,MAE9B/wB,OAAQ,IAAI8mB,EAAY,CAAEiK,IAAK,IAC/B1uB,UAAW,IAAIykB,EAAY,CAAEiK,IAAK,EAAG3T,QAAS,IAEjD,CAEGsU,QACF,OAAK3zB,KAAK4I,QACH,CACLU,OAAOjE,IAAI+D,UAAUR,QACrB,CACES,MAAO,GAAGrJ,KAAKqrB,MAAMa,SAASlsB,KAAKqrB,MAAMc,UAAUnsB,KAAKqrB,MAAMe,OAC9D5iB,KAAM,gBALgB,IAQ3B,CAEGoqB,QACF,OAAK5zB,KAAK2I,MACHW,OAAOjE,IAAI+D,UAAUT,MADJ,IAEzB,CAEGkrB,QACF,OAAK7zB,KAAK6I,KACHS,OAAOjE,IAAI+D,UAAUP,KADL,IAExB,CAEG2jB,QACF,OAAKxsB,KAAKoY,KAEH,CACL/O,MAAOC,OAAOjE,IAAIqC,WAAW1H,KAAKoY,MAClC5O,KAAM,YAJe,IAMxB,CAEGqpB,iBACF,IAAK7yB,KAAK0I,KAAM,OAAO,KAEvB,MAAMuqB,EAAW,IAAIne,IACnB5T,OAAO8B,OAAOsG,OAAOjE,IAAI+D,WAAWyI,KAAI,EAAGxI,WAAYA,KAEzD,OAAOrJ,KAAK0I,KAAK0F,QAAO,EAAG/P,YAAa40B,EAAS7zB,IAAIf,IACtD,CAOGy1B,gBACF,MAAO,IACF9zB,KAAK2rB,SACLvd,QAAQoY,KAAQA,EAAEjd,QAClBsI,KAAK2U,IAAO,IACRA,EACHnc,MAAOmc,EAAEnd,aAEVrJ,KAAK6yB,WAEX,CAEGlH,eACF,MAAMsH,EAAW/xB,OAAO8B,OAAOsG,OAAOjE,IAAI+D,WAEpCuiB,EAAW3rB,KAAK0I,KAAKmJ,KAAI,EAAGxT,WAChC40B,EAASjhB,MAAK,EAAG3I,WAAYhL,IAAUgL,MAGzC,MAAO,CACL,CAAEA,MAAOrJ,KAAKisB,OAAQziB,KAAM,WAC5BxJ,MAAK4zB,EACL5zB,MAAK2zB,EACL3zB,MAAK6zB,KACFlI,EACH3rB,MAAKwsB,GAEJ0G,OACA9kB,QAAQoY,KAAQA,GACpB,EC7GY,MAAMuN,WAAqBC,UAM7B7jB,4BACT,OAAOO,QAAQC,MAAMsO,YAAY3d,MAAM6O,eAAgB,CACrDC,QAAS,CAAC,MAAO,QAAS,QAC1BC,MAAO,IACP+M,OAAQ,IACRF,WAAW,EACXgC,KAAM,CACJ,CACEC,YAAa,QACbC,gBAAiB,cACjBC,QAAS,iBAIhB,CAKG3U,eAEF,MAAO,GADM,GAAGrF,EAAIC,kCACFtF,KAAK0U,KAAKnT,iBAC7B,CAQD2I,gBACE,MAAME,KAAEA,GAAS9I,MAAMmP,UAYvB,OAXArG,EAAKwL,SAAW5V,KAAKuhB,SAASrN,MAAM2B,WACpCzL,EAAKU,OAAS,IACTxB,OAAOjE,IACVM,YAAaH,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,sBAEjD2E,EAAK6pB,SAAW,CACdnJ,kBAAmBnK,WAAWC,WAC5B5gB,KAAK0U,KAAK5S,QAAQgpB,aAAe,GACjC,CAAE5gB,OAAO,KAGNE,CACR,CASDuI,kBAAkBlD,GAChBA,EAAKuC,KAAK,gCAAgCkiB,UAAU9iB,IAClD,GAAiB,KAAbA,EAAG+iB,MAAc,CACnB,MACMnxB,EADQsO,EAAEF,EAAGG,eAAe0B,MACb4J,MAAM,KAC3B7c,KAAKuQ,OAAOkc,cAAczpB,EAC3B,KAEHyM,EAAKuC,KAAK,eAAeY,OAAOxB,IAC9B,MAAM/S,EAAQ+S,EAAGG,cAAcuB,cAAcC,QAAQ4X,IACrD3qB,KAAKuQ,OAAOyc,aAAa3uB,EAAM,IAEjCoR,EAAKuC,KAAK,kBAAkBY,OAAM,KAChC5S,KAAKuQ,OAAO0D,OAAO,CAAE,gBAAiBjU,KAAKuQ,OAAOzO,OAAO6G,OAAQ,IAGnE8G,EAAKuC,KAAK,oBAAoBY,OAAM,KAClC5S,KAAKuQ,OAAO0D,OAAO,CAAE,kBAAmBjU,KAAKuQ,OAAOzO,OAAO8G,SAAU,IAGvEtH,MAAMqR,kBAAkBlD,EACzB,EC5EH,SAAS2kB,GAAoB3kB,EAAc+hB,WACzC,MAAMD,EAAS9hB,EAAKuC,KAAK,eAAeqiB,OAAOpiB,OACzCqiB,EAAS9uB,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,qBACjD,GAAI6uB,IAAWhrB,OAAOjE,IAAIwC,qBAAqBG,eAAgB,CAC7D,MAAMusB,EAAW9kB,EAAKuC,KAAK,gBAAgBqiB,OAAOjqB,KAAK,MACvD,MAAYxM,EAAAoC,UAAA,OAAA,GAAA,kBACV,MAAM0N,EAA2D,QAAnD8mB,QAAQna,SAASka,GAAY,WAAsB,IAAAC,OAAA,EAAAA,EAAE9mB,YAC7D+mB,GAAoB/mB,EAAO6jB,EAAQC,GAAY9jB,aAAK,EAALA,EAAO8C,OAAQ+jB,GAAY,kBACjF,GAAA,EAHD,EAID,CACGD,IAAWhrB,OAAOjE,IAAIwC,qBAAqBE,WACpC,QAATsb,EAAA7d,KAAKoF,YAAI,IAAAyY,GAAAA,EAAEgL,QAAQtZ,SAASyR,GAAMiO,GAAoBjO,EAAE9Y,MAAO6jB,EAAQC,EAAYhL,EAAEhW,SAEnF8jB,IAAWhrB,OAAOjE,IAAIwC,qBAAqBC,WAChC,QAAbqf,EAAA5N,OAAOwV,cAAM,IAAA5H,GAAAA,EAAE2H,WAAW/Z,SAASyR,GAAMiO,GAAoBjO,EAAE9Y,MAAO6jB,EAAQC,EAAYhL,EAAEhW,QAEhG,CAEA,SAAeikB,GAAoB/mB,EAAqB6jB,EAAgBC,EAAoBkD,qDAC1E,QAAXrR,EAAA7d,KAAKoF,YAAM,IAAAyY,OAAA,EAAAA,EAAA7X,OAAUkC,aAAiBwhB,SAIrCxhB,EAAMinB,YAAYpD,EAAQC,WAH9BrK,EAAA5Y,GAAGC,8BAAeC,MAAMjJ,KAAKwI,KAAKC,OAAO,6BAA8B,CAAEymB,gBAI5E,CAED,MAAME,GAA2Cze,GAC/C0e,GAAe1e,MAASA,EAAGnE,KAAK,cAAc1D,OAEhD,SAASumB,GAAeplB,eACtB,IAAKA,EAAKuC,KAAK,eAAe1D,OAAQ,OAAO,EAC7C,MAAMwmB,EAAoBtvB,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,qBAC5D,OAAQqvB,GACN,KAAKxrB,OAAOjE,IAAIwC,qBAAqBG,eACnC,QAASyH,EAAKuC,KAAK,gBAAgBqiB,OAAOjqB,KAAK,MACjD,KAAKd,OAAOjE,IAAIwC,qBAAqBE,SACnC,SAA6B,QAApBof,EAAW,QAAX9D,EAAA7d,KAAKoF,YAAM,IAAAyY,OAAA,EAAAA,EAAAgL,eAAS,IAAAlH,OAAA,EAAAA,EAAA+J,MAC/B,KAAK5nB,OAAOjE,IAAIwC,qBAAqBC,SACnC,SAAsB,QAAb0sB,EAAAjb,OAAOwV,cAAM,IAAAyF,OAAA,EAAAA,EAAE1F,WAAWxgB,QACrC,QAKE,OAJgB,QAAhBymB,EAAAxmB,GAAGC,qBAAa,IAAAumB,GAAAA,EAAEtmB,MAAMjJ,KAAKwI,KAAKC,OAAO,+BAAgC,CACvE+mB,WAAY,oBACZC,YAAaH,MAER,EAGb,CAUO,MChEDI,GAAY,CAChBC,aAAc,IACdC,cAAe,IAEfC,SAAS7lB,EAAU8lB,GACjB,IAAIC,EAAY,KAChB,MAAO,IAAIvY,KACTwY,OAAOC,aAAaF,GACpBA,EAAYC,OAAOE,YAAW,KAC5BlmB,EAAS3Q,MAAM,KAAMme,EAAK,GACzBsY,EAAK,CAEX,EACDprB,qBAAqByrB,EAAQvrB,GAE3BA,EAAKwrB,WAAa,GAClB,MAAMC,EAAS,CAAA,EACTD,EAAaD,GAAQC,WAC3BA,EAAW7gB,SAAS+gB,IAClB,MAAMC,EAAQD,EAAIE,QAAQxwB,KAAK1D,OAAO2D,GAAI,SAC1CowB,EAAOE,GAAS,CAAEE,SAAS,GAC3B7rB,EAAKwrB,WAAW5qB,KAAK8qB,EAAI,IAG3B,IAAK,MAAMC,KAASF,EAAQ,CAE1B,MAAM5qB,EAAO,IAAIC,KAAK,aAChBD,EAAKG,iBACLH,EAAKirB,UAAU,CACnB5rB,OAAQ9E,KAAKwI,KAAKC,OAAO,sBAAuB,CAC9C8nB,MAAOzsB,OAAOjE,IAAI4C,OAAO8tB,OAG7BF,EAAOE,GAAOjgB,WAAa7K,EAAK6B,KAEjC,CAED,IAAK,IAAIzJ,EAAI,EAAGA,EAAI+G,EAAKwrB,WAAWtnB,SAAUjL,EAC5C,GAAImC,KAAKoF,KAAKY,KAAM,CAClB,IAAKpB,EAAKwrB,WAAWvyB,GAAGqK,MACtB,OAEF,MAAMoiB,EAAY1lB,EAAKwrB,WAAWvyB,GAAGqK,OAAO5L,OAC5C,GAAIguB,EAAUhG,aACN1f,EAAKwrB,WAAWvyB,GAAG4Q,OAAO,CAC9B6B,WAAYof,GAAUC,kBAEnB,CACL,MAAMY,EAAQ3rB,EAAKwrB,WAAWvyB,GAAG2yB,QAAQxwB,KAAK1D,OAAO2D,GAAI,SACzDzF,KAAKq1B,SACHjrB,EAAKwrB,WAAWvyB,GAAG4Q,OAAO,CAAE6B,WAAY+f,EAAOE,GAAOjgB,aACtD,IAEH,CACF,OAGG6f,EAAOQ,YACd,EAEDjsB,sBAAsByrB,EAAQvrB,GAC5B,MAAMgsB,EAAS5wB,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,oBAC5C,CAAC,QAAS,UAAU1C,SAASqzB,IAGlCT,EAAOU,UACR,EAEDnsB,2BAA2ByrB,EAAQvrB,GACjC,MAAMksB,EAAU,GACVC,EAAQ,GACRX,EAAaD,GAAQC,WAC3B,IAAK,IAAIvyB,EAAI,EAAGA,EAAIuyB,EAAW1E,KAAM7tB,IAAK,CACxC,MAAMmzB,EAAIZ,EAAWpb,SAASnX,GAE9B,GAAImzB,GAAG1gB,YAA+B,IAAjB6f,EAAOzjB,MAC1B,SAIF,MAAMukB,QAAWD,EAAEE,sBAAsBF,GACnCvrB,QAAaurB,EAAEG,kBAAkBF,GACvCF,EAAMvrB,KAAKC,GACX,MAAMb,EAAO,CAAEwB,IAAK4qB,EAAE/wB,IACtB6wB,EAAQtrB,KAAKZ,EACd,CAED,MAAMwsB,EAAOC,SAASC,UAAUP,GAC1BQ,QAAqB7rB,KAAK8rB,UAAU,CAACJ,IAErCK,QAAiBF,EAAab,UAAU,CAAE,EAAE,CAAE3pB,QAAQ,IACtD2qB,EAAUH,EAAa/pB,MAAM,GAAGupB,MACtC,IAAIY,EAAa,GACjB,IAAK,MAAO9zB,EAAG4H,KAASisB,EAAQE,UAAW,CAEzC,MAAMtB,EAAMtwB,KAAK6xB,QAAQC,OAAO1B,WAAW5jB,MACxCwkB,GAAMA,EAAE/wB,KAAO6wB,EAAQjzB,GAAGuI,MAI7B,IAAIvN,EAAQy3B,EAAIpoB,OAAO5L,QAAQgoB,OAC3BoL,GAAUC,YACVlqB,EAAK6B,MAEL6oB,EAAO/vB,SAAS2xB,cAAgBzB,EAAI0B,aACtCn5B,EAAQ62B,GAAUE,cAEpBkB,EAAQjzB,GAAGyS,WAAazX,EAGxB,MAAMqM,EAAW,GAAGrF,EAAIC,8DAClBmyB,EAAQ,CACZjnB,KAAMslB,EAAItlB,KACVxB,QAAS/D,EAAK+D,QACdtQ,OAAQuM,EAAKvM,OACboO,MAAO7B,EAAK6B,OAGdqqB,SADuBjrB,eAAexB,EAAU+sB,EAEjD,CACDR,EAAS9qB,QAAU,iCAER3G,KAAKwI,KAAKuB,SAAS,kDAC5B4nB,oBAEFzrB,YAAYa,OAAO0qB,GAEfzxB,KAAKoF,KAAKY,YACNmqB,EAAO/gB,wBAAwB,YAAa0hB,GACpDlsB,EAAKstB,KAAO,CACb,EAEDzpB,OAAOsC,EAAQd,EAAM7E,GACnB6E,EAAKuC,KAAK,eAAe2F,MAAK,CAACC,EAAG+f,KAChCA,EAAKC,UACHD,EAAKC,YAAc,GAAG1C,GAAUC,cAC5B,wCACAwC,EAAKC,UACXD,EAAKC,UACHD,EAAKC,YAAc,GAAG1C,GAAUE,eAC5B,+BACAuC,EAAKC,SAAS,IAGtBnoB,EAAKuC,KAAK,cAAc2F,MAAK,CAACC,EAAGigB,KAE/B,MAAMC,EAAWxmB,EAAEumB,GAAI7lB,KAAK,0CACtB+lB,EAAUxnB,EAAO+mB,OAAO1B,WAAWt2B,IAAIu4B,EAAG9kB,QAAQilB,aAClDC,EAAeF,EAAQ/B,QAAQxwB,KAAK1D,OAAO2D,GAAI,gBAC/CyyB,EAAiBH,EAAQ/B,QAAQxwB,KAAK1D,OAAO2D,GAAI,gBACjD0yB,EAAaF,EAAe,SAAW,GAC7CH,EACGM,GAAG,GACHC,MACC,2CAA2CF,aAAsB3yB,KAAKwI,KAAKuB,SACzE,kFAGN,MAAM+oB,EAAcJ,EAAiB,SAAW,GAChDJ,EACGM,GAAG,GACHC,MACC,6CAA6CC,aAAuB9yB,KAAKwI,KAAKuB,SAC5E,oEAEH,IAEL2lB,GAAUqD,iBAAiB9oB,GAG3B,KADiE,UAApDjK,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,eAE7C,OAGFgK,EAAKuC,KAAK,2CAA2CwmB,SACrD/oB,EAAKuC,KAAK,2CAA2CwmB,SACrD,MAAMC,EAAQhpB,EAAKuC,KACjB,yDAEFV,EACE,mFACAonB,aAAaD,GAEfhpB,EAAKuC,KAAK,cAAc2F,MAAK,CAACC,EAAGigB,KAE/BvmB,EAAEumB,GAAI7lB,KAAK,SAASwmB,SAGpB,MACMG,EADUpoB,EAAO+mB,OAAO1B,WAAWt2B,IAAIu4B,EAAG9kB,QAAQilB,aAClChC,QAAQxwB,KAAK1D,OAAO2D,GAAI,SAG7B6L,EAAEumB,GAAI7lB,KAAK,uBACnB4mB,QACP,kDAAkDD,aAAiBrvB,OAAOjE,IAAI4C,OAAO0wB,sCACtF,IAEHzD,GAAU2D,aAAappB,EACxB,EAEDqpB,gBAAgBC,EAAW3uB,GACzB,MAAMkW,EAAO9a,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,cAEzCqqB,EAAYiJ,EAAUrrB,OAAO5L,OACnC,GAAIguB,EAAUhG,OACZ1f,EAAK0L,YAAc,SAGrB,GAAI1L,EAAK0L,YAAuB,UAATwK,EAAkB,CACvC,MAAM0Y,EAAY5uB,EAAK0L,WACjBmjB,EAAYF,EAAU/C,QAAQxwB,KAAK1D,OAAO2D,GAAI,SAEpDD,KAAK6xB,QAAQC,OAAO1B,WAAW7gB,SAAS8iB,IACtC,MAAM9B,EAAQ8B,EAAG7B,QAAQxwB,KAAK1D,OAAO2D,GAAI,SAEvCoyB,EAAG/hB,YACc,WAAjB+hB,EAAG/hB,YACH+hB,EAAGpyB,IAAM2E,EAAK3E,IACdswB,IAAUkD,GACVzzB,KAAKoF,KAAKY,MAGVutB,EAAU9kB,OAAO,CAAE6B,WAAY4B,SAASshB,IACzC,GAEJ,CACF,EAEDT,iBAAiB9oB,GACfA,EAAKuC,KAAK,oCAAoCY,OAAOxB,IACnDA,EAAG4C,iBAEH,MAAMvO,EAAK6L,EAAEF,EAAGG,eAAeC,QAAQ,cAAc,GAAGuB,QACrDilB,YACGkB,EAAW9nB,EAAGG,cAAc0H,UAAUC,SAAS,UACnC1T,KAAKmwB,OAAOC,WAAWt2B,IAAImG,GACnC0zB,QAAQ3zB,KAAK1D,OAAO2D,GAAI,gBAAiByzB,EAAS,IAE9DzpB,EAAKuC,KAAK,kCAAkCY,OAAOxB,IACjDA,EAAG4C,iBAEH,MAAMvO,EAAK6L,EAAEF,EAAGG,eAAeC,QAAQ,cAAc,GAAGuB,QACrDilB,YACGkB,EAAW9nB,EAAGG,cAAc0H,UAAUC,SAAS,UAC/C6f,EAAYvzB,KAAKmwB,OAAOC,WAAWt2B,IAAImG,GACzCD,KAAKoF,KAAKY,MACZutB,EAAUI,QAAQ3zB,KAAK1D,OAAO2D,GAAI,gBAAiByzB,EACpD,GAEJ,EAEDL,aAAappB,GAEXA,EAAKuC,KAAK,2BAA2BY,OAAOxB,IAC1C,IAAK5L,KAAKoF,KAAKY,KACb,OAEF,MAAM0mB,EAAe9gB,EAAGG,cAAcwF,MAAM4hB,MACtC1wB,EAAS/G,OAAOomB,KAAKhe,OAAOjE,IAAI4C,QACtC,IAAI6kB,EAAQ7kB,EAAO0e,QAAQuL,GACvBpF,EAAQ,IAAM7kB,EAAOqG,OACvBwe,EAAQ,EAERA,IAEF,MAAMrnB,EAAK6L,EAAEF,EAAGG,eAAeC,QAAQ,cAAc,GAAGuB,QACrDilB,YACGe,EAAYvzB,KAAKmwB,OAAOC,WAAWt2B,IAAImG,GACzCD,KAAKoF,KAAKY,MACZutB,EAAUI,QAAQ3zB,KAAK1D,OAAO2D,GAAI,QAASwC,EAAO6kB,GACnD,IAGHrd,EAAKuC,KAAK,0CAA0CY,OAAOxB,IACzD,IAAK5L,KAAKmwB,OACR,OAEF,MAAMvrB,EAAO,CAAA,EACb8qB,GAAUkE,eAAe5zB,KAAKmwB,OAAQvrB,GAClC5E,KAAKoF,KAAKY,MACZhG,KAAKmwB,OAAO1hB,OAAO,CAAE7J,SAAQxL,MAAK,KAChC4G,KAAKmwB,OAAOQ,YAAY,GAE3B,GAEJ,EAEDkD,aAAa1D,EAAQvrB,EAAM/I,EAASoE,GAClC,MAAMiU,EAAQH,OAAOwV,OAAOzvB,IAAI8K,EAAKqP,SACrC,IAAIkf,EAAQ,QAEZ,OADoBjf,GAAO4f,aAAe5f,GAAOtP,MAAMkvB,aAErD,KAAM,EACJX,EAAQ,MACR,MAGF,KAAK,EACHA,EAAQ,SACR,MAGF,KAAK,EACHA,EAAQ,QAIZvuB,EAAK8D,MAAQ,CACXojB,IAAK,CACHyE,MAAO4C,IAGXhD,EAAO4D,aAAa,CAAErrB,MAAO,CAAEojB,IAAK,CAAEyE,MAAO4C,KAC9C,EAEDa,kBAAkBrjB,GAChB,MAAMuhB,EAAOlyB,KAAKmwB,OAAO8D,MAAMt0B,WAC5BuyB,GAASA,EAAKjyB,KAAO0Q,EAAG/L,KAAK,kBAE5B5E,KAAKoF,KAAKY,MACZhG,KAAKmwB,OAAO1hB,OAAO,CAAEyjB,QAExB,EAEDgC,gBAAgBjqB,EAAMpO,GACpBA,EAAQs4B,QAAQ,CACdnpB,KAAM,aACNhH,KAAM,sCACNgG,SAAU0lB,GAAUsE,mBAEvB,EAEDtvB,sBAAsByrB,EAAQvrB,EAAMwvB,EAAMn0B,GACxC,MAAM6a,EAAO9a,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,cACzC2wB,EAAS5wB,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,oBACjD,GAAK2E,EAAK8H,MAAV,CAGA,GAAmB,IAAf9H,EAAK8H,MAAa,CACpB,GAAe,UAAXkkB,EAEF,YADAlB,GAAU2E,gBAAgBlE,EAAQvrB,EAAMwvB,EAAMn0B,GAGhD,GAAe,SAAX2wB,EACF,MAEH,CACY,UAAT9V,EACF4U,GAAUkE,eAAezD,EAAQvrB,EAAMwvB,EAAMn0B,GAC3B,eAAT6a,GACT4U,GAAU4E,qBAAqBnE,EAAQvrB,EAAMwvB,EAAMn0B,EAbpD,CAeF,GCvSHyE,eAAe6vB,GAAa7sB,EAAO9C,GAOjC,GADAA,EAAKrI,SAAW,GACZmL,EAAM8oB,QAAQxwB,KAAK1D,OAAO2D,GAAI,YAChCyH,EAAMD,QAAQ8H,SAAQ7K,MAAO8B,IAC3B,QARY9B,OAAO8vB,IACrB,MAAM/uB,EAAO,IAAIC,KAAK,SAEtB,aADMD,EAAKG,WACJH,EAAK6B,OAASktB,CAAM,EAKfC,CAAQjuB,EAAE/J,QAAS,CAC3B,MAAMgQ,EAAOjG,EAAEkuB,YAAYluB,GAK3B,GAJA5B,EAAKrI,SAASiK,EAAEvG,IAAM,CACpBmO,IAAK5H,EAAE4H,IACP3B,KAAM0O,WAAWC,WAAW3O,EAAM,CAAE/H,OAAO,KAG3C8B,EAAEzK,OAASgsB,MAAM4M,mBAAmBC,UACnB,cAAjBpuB,EAAEquB,WACF,CACA,MAAMC,EAAgB90B,KAAK+0B,OAAOj7B,IAAI0M,EAAEwuB,gBAClCT,GAAaO,EAAelwB,EAAKrI,SAASiK,EAAEvG,IACnD,CACF,SAEE,CACL,MAAMwH,QAAEA,SAAkBC,EAAMjC,OAChCgC,EAAQ8H,SAAShL,IACfK,EAAKrI,SAASgI,EAAEtE,IAAM,CAAEmO,IAAK7J,EAAE6J,IAAK3B,KAAMlI,EAAEkI,KAAM,GAErD,CACD,OAAO7H,CACT,CAOOF,eAAeuwB,GAAavtB,EAAO7L,EAAU,IAElD,MAAM+I,QAAa2vB,GAAa7sB,EAAO,CAAE,GACnCrC,EAAe,CACnB9I,SAAUqI,EAAKrI,SACfmL,SAIF,GAAI7L,EAAQmR,MAAO,CACDlB,EAAEjQ,EAAQmR,MAAMjB,cAAcuB,eAC3CmX,OACAjY,KAAK,iBACA2F,MAAK,CAACC,EAAGlD,KACfA,EAAKuE,UAAUuf,OAAO,UAClBpuB,EAAKrI,SAAS2S,EAAK3B,QAAQynB,WAC7B9lB,EAAKuE,UAAUyhB,IAAI,SACpB,GAEJ,CAED,MAKM/vB,EAAW,CACfwB,cANiBD,eACjB,GAAG7G,EAAIC,iDACPuF,IAQIS,EAAW9F,KAAKI,SAAStG,IAAI,OAAQ,YACvC,CAAC,SAAU,aAAayD,SAASuI,KACnCX,EAASc,QAAUC,YAAYC,qBAAqB,OACrC,aAAbL,IAAyBX,EAASc,QAAU,CAACjG,KAAKoF,KAAKgB,MAC1C,cAAbN,IAA0BX,EAASkB,OAAQ,GAE/CH,YAAYa,OAAO5B,EACrB,CAEO,MAAMgwB,GAAsB,CACnCZ,aAAEA,GACFU,aAAEA,IC9HKvwB,eAAe0wB,GAAexwB,EAAMywB,GACzC,GAAkB,UAAdzwB,EAAK7I,KACP,OAAOiE,KAAKoF,KAAKkwB,wBAAwBzgB,SAASjQ,EAAKkQ,MAAOugB,GAEhE,GAAkB,cAAdzwB,EAAK7I,KAAsB,CAC7B,MAAMw5B,EAAU,4BAA4B3wB,EAAKkQ,UAC3CpN,QAAcmN,SAASjQ,EAAKkQ,MAC5B0gB,QAAcC,MAAM1uB,OAAO,CAC/BiE,KAAMtD,EAAMsD,KACZjP,KAAM,SACNqS,IAAK1G,EAAM0G,IACXmnB,UACA7sB,MAAO,CAAE,kBAAkB,KAE7B,OAAO1I,KAAKoF,KAAKkwB,kBAAkBE,EAAOH,EAC3C,CACD,GAAkB,SAAdzwB,EAAK7I,KACP,OAAOgN,GAAGC,cAAc0sB,KACtB11B,KAAKwI,KAAKuB,SAAS,6BAEvB,GAAInF,EAAKkQ,KAAKqM,QAAQ,UAAY,EAChC,OAAOpY,GAAGC,cAAc0sB,KACtB11B,KAAKwI,KAAKuB,SAAS,qCAEvB,MAAMmF,KAAEA,GAAStK,EAGX2wB,EAAU,2BAA2BrmB,EAAKlE,UAChD,IAAIwqB,EAAQx1B,KAAK21B,OAAO3gB,SAASxI,MAC9BopB,GAAMA,EAAE5qB,OAASkE,EAAKlE,MAAQ4qB,EAAEL,UAAYA,IAW/C,OATKC,QAA0CpW,IAAjCoW,EAAMK,UAAU71B,KAAK81B,UACjCN,QAAcC,MAAM1uB,OAAO,CACzBiE,KAAMkE,EAAKlE,KACXjP,KAAM,SACNqS,IAAKc,EAAKd,IACVmnB,UACA7sB,MAAO,CAAE,iBAAiB,MAGvB1I,KAAKoF,KAAKkwB,kBAAkBE,EAAOH,EAC5C,CAWO,SAASU,GAAcC,GAC5B,MAAMjxB,EAAUmB,YAAY+G,aAE5B,IAAMlI,EAAQmD,QAASnD,EAAQiP,MAC7B,OAAOjL,GAAGC,cAAc0sB,KACtB11B,KAAKwI,KAAKuB,SAAS,uCAGvB,IAAI7B,EACAnD,EAAQmP,QAAOhM,EAAQlI,KAAKopB,OAAOG,OAAOxkB,EAAQmP,QACjDhM,IAAOA,EAAQlI,KAAKopB,OAAOtvB,IAAIiL,EAAQmD,QAG5C,MAAM5N,EAAQ4N,EAAQA,EAAM5N,MAAMsO,QAAQ/K,GAAMA,EAAEmN,OAASgrB,IAAY,GACvE,GAAI17B,EAAMwO,OAAS,EACjBC,GAAGC,cAAc0sB,KACf11B,KAAKwI,KAAKC,OAAO,mCAAoC,CACnDmgB,UAAW1gB,EAAM8C,KACjBgrB,mBAGC,GAAqB,IAAjB17B,EAAMwO,OACf,OAAOC,GAAGC,cAAcC,MACtBjJ,KAAKwI,KAAKC,OAAO,2BAA4B,CAC3CmgB,UAAW1gB,EAAM8C,KACjBgrB,cAON,OAHa17B,EAAM,GAGPmL,MACd,CAOO,SAASwwB,GAAeC,GAC7BrhB,SAASqhB,GAAW98B,MAAMsO,GACV,OAAVA,EACKqB,GAAGC,cAAcC,MACtBjJ,KAAKwI,KAAKC,OAAO,gCAAiC,CAChDqM,KAAMohB,KAMRxuB,EAAM8oB,QAAQxwB,KAAK1D,OAAO2D,GAAI,YACzBg1B,GAAavtB,GAEfA,EAAMyuB,KAAK,CAAEC,aAAa,KAErC,CCxHA,MAAMC,GAAW,CAOXC,mBACF,OAAOt2B,KAAKopB,OAAOxgB,QAChB2tB,GACc,cAAbA,EAAIx6B,MACJw6B,EAAI7tB,MAAM1I,KAAK1D,OAAO2D,MACc,IAApCs2B,EAAI7tB,MAAM1I,KAAK1D,OAAO2D,IAAIu2B,OAE/B,GCZY,MAAMC,WAAmB/rB,gBAC3BC,4BACT,OAAOO,QAAQC,MAAMsO,YAAY3d,MAAM6O,eAAgB,CACrDC,QAAS,CAAC,MAAO,SAAU,YAC3B1F,SAAU,GAAGrF,EAAIC,4CACjB+K,MAAO,IACP+M,OAAQ,OACRF,WAAW,EACXgf,eAAe,GAElB,CAUG7xB,YACF,OAAO7E,KAAKwI,KAAKuB,SAAS,qBAC3B,CASDkB,UACE,MAAO,CACLme,OAAQiN,GAASC,aACjB1xB,KAAMpK,KAAKuQ,OACXzF,OAAQxB,OAAOjE,IACfuF,KAAMpF,KAAKoF,KACXhF,SAAUJ,KAAKI,SAElB,CAGDisB,QAAQrf,GAGN,IAAIpI,EAFJoI,EAAMwB,iBAGN,IAEE,GADA5J,EAAO6P,KAAKkC,MAAM3J,EAAMuH,aAAatJ,QAAQ,eAC3B,SAAdrG,EAAK7I,KAAiB,MAG3B,CAFC,MAAOkN,GACP,OAAO,CACR,CACF,CAID0tB,cAAc3pB,GAEZxS,KAAKo8B,QAAQ5pB,EACd,CAGD6pB,kBACE,MAAMP,aAAEA,GAAiBD,GAEnBpsB,EAAO6B,EAAEtR,KAAKwK,MACd8xB,EAAU7sB,EAAKuC,KAAK,uBAAuBiB,MAC3CspB,EAAc5qB,WAAW2qB,GAAWR,EAAaxtB,OAEvDwtB,EAAa/mB,SAASyL,IACpB,MAAMsP,EAAYtP,GAAG1e,OACf06B,EAAUn8B,KAAK2vB,MAClBF,EAAU1iB,QAAQ6iB,GAAGwM,MAAQ,IAAOF,GAEvC9sB,EAAKuC,KAAK,qBAAqBwO,EAAE/a,cAAcwN,IAAIupB,EAAQ,GAE9D,CAGDJ,UACe9qB,EAAEtR,KAAKwK,MACFwH,KAAK,UAClB2F,MAAK,CAACC,EAAG8kB,KACZ,MAAMC,EAAOrrB,EAAEorB,GACTr+B,EAAQs+B,EAAK3qB,KAAK,SAASiB,MAC3BxN,EAAKk3B,EAAKvyB,KAAK,WACfsD,EAAQmuB,GAASC,aAAa9pB,MAAMxT,GAAMA,EAAEiH,KAAOA,IACrDpH,GACFqP,EAAMmiB,cAAcxvB,KAAK2vB,MAAMtY,SAASrZ,EAAO,KAChD,GAEJ,CAEDsU,kBAAkBlD,GAChBnO,MAAMqR,kBAAkBlD,GAELA,EAAKuC,KAAK,uBAElB+Y,GAAG,QAAS/qB,KAAKq8B,gBAAgBxd,KAAK7e,OAEjDyP,EAAKuC,KAAK,gCAAgCY,OAAOJ,IAC/ClR,MAAM+R,OAAOb,EAAM,GAEtB,ECtGH,MAAMoqB,GAAQ,CACZC,gBAAY,GAGC,MAAMC,WAAsB5sB,gBAC9BC,4BACT,OAAOO,QAAQC,MAAMsO,YAAY3d,MAAM6O,eAAgB,CACrDC,QAAS,CAAC,MAAO,SAAU,eAC3B1F,SAAU,GAAGrF,EAAIC,+CACjB+K,MAAO,IACP+M,OAAQ,IACRF,WAAW,EACX6f,SAAU,CACR,CAAEC,aAAc,qBAAsBC,aAAc,mBAEtDf,eAAe,GAElB,CAEDvX,cACEiY,GAAMC,WAAa,IAAIC,EACxB,CAEDnY,sBAAsBtjB,EAAU,IAC9By7B,GAAcD,WAAW9wB,QAAO,EAAM,CAAEmxB,OAAO,KAAS77B,GACzD,CAEUw7B,wBACT,OAAOD,GAAMC,UACd,CASGxyB,YACF,OAAO7E,KAAKwI,KAAKuB,SAAS,wBAC3B,CASDkB,UACE,MAAM7K,EAAW,CACfu3B,UAAW33B,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,gBAG/C,MAAO,CACL23B,YAAavB,GAASC,aAEtBhxB,OAAQxB,OAAOjE,IACfuF,KAAMpF,KAAKoF,KACXhF,WAEH,CAEDsE,uBAAuBwD,GACF,cAAfA,EAAMnM,YAIJmM,EAAMyrB,QAAQ3zB,KAAK1D,OAAO2D,GAAI,SAAS,EAC9C,CAEDyE,4BAA4BwD,SACpBA,EAAMyrB,QAAQ3zB,KAAK1D,OAAO2D,GAAI,SAAS,EAC9C,CAODosB,QAAQrf,GAGN,IAAIpI,EAFJoI,EAAMwB,iBAGN,IAGE,OAFA5J,EAAO6P,KAAKkC,MAAM3J,EAAMuH,aAAatJ,QAAQ,eAErCrG,EAAK7I,MACX,IAAK,QACH,OAAOvB,KAAKq9B,aAAa7qB,EAAOpI,GAGlC,IAAK,SACH,OAAOpK,KAAKs9B,cAAc9qB,EAAOpI,GAKtC,CAFC,MAAOqE,GACP,OAAO,CACR,CACF,CAEDvE,mBAAmBsI,EAAOpI,GACxB,GAAkB,UAAdA,EAAK7I,KACP,OAGiBiE,KACnB,MAAM+3B,QAAqBljB,SAASjQ,EAAKkQ,MAEzCta,KAAKw9B,iBAAiBD,EACvB,CAEDE,oBAAoBrjB,GAClBA,EAAOI,SAASzF,SAASrH,GAAU1N,KAAKw9B,iBAAiB9vB,KACzD0M,EAAOsjB,SAAS3oB,SAASqF,GAAWpa,KAAKy9B,oBAAoBrjB,EAAOA,SACrE,CAEDlQ,oBAAoBsI,EAAOpI,GACzB,GAA0B,UAAtBA,EAAKuzB,aACP,OAGF,MAAMvjB,QAAeC,SAASjQ,EAAKkQ,MAC9BF,GAELpa,KAAKy9B,oBAAoBrjB,EAC1B,CAGDlQ,mBAAmBsI,GACjB,IACE,MAAM8H,KAAEA,GAAS9H,EAAMjB,cAAcwB,QAC/BgG,SAAkBsB,SAASC,IAAOnB,aAExC3G,EAAMuH,aAAaC,QAAQ,aAAcC,KAAKC,UAAUnB,GAGzD,CAFC,MAAOtK,GACP,OAAO,CACR,CAED,OAAO,CACR,CAIDvE,cAAckH,GACZ,IAAI6qB,GAAWj8B,KAAKuQ,OAAQ,CAAE,GAAExE,QAAO,EACxC,CAGD4G,kBAAkBlD,GAChBnO,MAAMqR,kBAAkBlD,GAExBA,EAAKuC,KAAK,oBAAoBY,MAAM5S,KAAKo8B,QAAQvd,KAAK7e,OAGtD,MAAM49B,EAAYprB,IAChB,MAAM/M,EAAK+M,EAAMjB,cAAcC,QAAQ,UAAUuB,QAAQqG,QACzD,OAAO5T,KAAKopB,OAAOtvB,IAAImG,EAAG,EAG5BgK,EAAKuC,KAAK,+CAA+CY,OAAOJ,IAC9DorB,EAASprB,GAAO0B,MAAMnI,QAAO,EAAK,IAGpC0D,EACGuC,KAAK,iDACLY,OAAM1I,MAAOsI,UACNxS,KAAK69B,sBAAsBD,EAASprB,GAAO,GAEtD,EC3KI,MAWMyB,GAAUvG,IAGH,OAFAA,EAAMsoB,QAAQxwB,KAAK1D,OAAO2D,GAAI,UAMhDq3B,GAAcD,WAAW9wB,QAAQ,ECjBtB+xB,GAASC,GACpB,IAAI9/B,SAASC,IACXw3B,WAAWx3B,EAAS6/B,EAAG,IAMdC,GAAY,sBACnB3a,EAAA7d,KAAKuoB,+BAAUmD,QACF,QAAf/J,EAAA3hB,KAAKuoB,gBAAU,IAAA5G,GAAAA,EAAA8W,cAAcC,gBAAgB,GAAI,CAAEC,WAAW,IAAO,EAQ5DC,GAAe,IAAMN,GApBf,KAsBNO,GAAeC,GAC1Bp9B,OAAO8B,OAAOuL,GAAGgwB,SAASnwB,QAAQkJ,GAChCA,EAAEjW,QAAQ+O,QAAQrN,SAASu7B,KAGlBE,GAAc,IACzBt9B,OAAO8B,OAAOuL,GAAGgwB,SAASnwB,QAAQkJ,GAAMA,EAAEjW,QAAQ+O,QAAQrN,SAAS,YAExD07B,GAAe,IAAW7gC,OAAA,OAAA,OAAA,GAAA,kBACtB,QAAfylB,EAAAmb,YAAe,IAAAnb,GAAAA,EAAAtO,SAAeuC,GAAK1Z,OAAA,OAAA,OAAA,GAAA,kBAC3B0Z,EAAEvH,OACT,KACH,IAEa2uB,GAAc,IAAW9gC,OAAA,OAAA,OAAA,GAAA,YACpCygC,GAAY,SAAStpB,SAAenL,GAAMhM,OAAA,OAAA,OAAA,GAAA,YAAA,OAAAgM,EAAEmG,OAAO,MACnDquB,IACF,IAMaO,GAAqB,CAChCp9B,EACA6I,EAAe,CAAA,EACf+P,EAAc,KACZvc,OAAA,OAAA,OAAA,GAAA,YACF,OAAAuxB,MAAM5iB,OAAMrL,OAAAwmB,OAAAxmB,OAAAwmB,OAAA,GACPtd,GACH,CAAAoG,KAAM,cAAc2J,IACpB5Y,aAGSq9B,GAAsB,CACjCr9B,EACAiP,EAAe,kBAAkBjP,EAAKqb,iBACpChf,OAAA,OAAA,OAAA,GAAA,YACF,OAAAkd,KAAKvO,OAAO,CACVhL,OACAiP,YAGSquB,GAAsB,CACjCnxB,EACAnM,EACAiP,EAAe,kBAAkBjP,EAAKqb,eACtCxS,EAAe,CAAE,wCACd,OAAAsD,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,gBAAGvS,OAAMiP,QAASpG,IAAQ,IAEzD00B,GAAkB,IAAWlhC,OAAA,OAAA,OAAA,GAAA,YACxC,OAAAq9B,MAAM1uB,OAAO,CACXiE,KAAM,cAAcE,QAAQC,MAAMouB,aAClCx9B,KAAM,SACNw5B,QAAS,qCAGAiE,GAAkB,IAC7BphC,OAAA,OAAA,OAAA,GAAA,YAAA,OAAAqhC,MAAM1yB,OAAO,CAAEiE,KAAM,aAAc0uB,aAAa,GAAO,IAE5CC,GAAyBhlB,GAAevc,OAAA,OAAA,OAAA,GAAA,YAAA,IAAAupB,EACnD,OAAa,QAAbA,EAAA3hB,KAAKopB,cAAQ,IAAAzH,OAAA,EAAAA,EAAAiY,QAAQ,cAAcjlB,IAAM,IAM9BklB,GAAgB,IAAWzhC,OAAA,OAAA,OAAA,GAAA,kBACtC,MAAM0hC,EAAwB,QAAX9K,EAAAhvB,KAAK21B,cAAM,IAAA3G,OAAA,EAAAA,EAAEpmB,QAAQkJ,IAAM,IAAA+L,EAAA,OAAQ,QAARA,EAAA/L,EAAE9G,YAAM,IAAA6S,OAAA,EAAAA,EAAAtgB,SAAS,aAAa,IAE5E,OADAu8B,SAAAA,EAAYvqB,SAAeuC,GAAM1Z,OAAA,OAAA,OAAA,GAAA,YAAA,aAAM0Z,EAAEioB,QAAQ,OAC1C,CACT,IAEaC,GAA4BrlB,GAAevc,OAAA,OAAA,OAAA,GAAA,kBAC3C,QAAXm3B,EAAAvvB,KAAKopB,cAAM,IAAAmG,GAAAA,EACP3mB,QAAQoS,GAAMA,EAAEhQ,OAAS,cAAc2J,MACxCpF,SAAeyL,GAAM5iB,OAAA,OAAA,OAAA,GAAA,YAAA,aAAM4iB,EAAE+e,QAAQ,KAC1C,IAEaE,GAAoB,IAAW7hC,OAAA,OAAA,OAAA,GAAA,kBAChC,QAAV8hC,EAAAl6B,KAAK1F,aAAK,IAAA4/B,GAAAA,EACNtxB,QAAQoS,UAAM,OAAS,QAAT6C,EAAA7C,eAAAA,EAAGhQ,YAAM,IAAA6S,OAAA,EAAAA,EAAAtgB,SAAS,iBAAiB,IAClDgS,SAAeyL,uCAAM,aAAMA,EAAE+e,QAAQ,KAC1C,IAEaI,GAAgB,IAAW/hC,OAAA,OAAA,OAAA,GAAA,kBAC3B,QAAXgiC,EAAAp6B,KAAKgpB,cAAM,IAAAoR,GAAAA,EACPxxB,QAAQrE,GAAiB,eAAXA,EAAEyG,OACjBuE,SAAehL,GAAMnM,OAAA,OAAA,OAAA,GAAA,YAAA,aAAMmM,EAAEw1B,QAAQ,KAC1C,IAKaM,GAAY,IAAI/qB,IAAI,CAC/B,QACA,UACA,QACA,SACA,OACA,cClHWqF,GAAM,gCACN9Y,GAAU,CAAEy+B,YAAa,qCAEhCC,GAAkB,IAAMpB,GAAmB,YAAa,CAAE,EAAExkB,IAElE,IAAA6lB,GAAe,EAAGC,WAAUC,KAAIC,SAAQ9H,QAAO+H,aAC7C,MAAMC,EAAY,IAAI7X,GAChB8X,EAAqB96B,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,eACvD86B,EAAoB/6B,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,cACtD+6B,EAAqBh7B,KAAKI,SAAStG,IACvCkG,KAAK1D,OAAO2D,GACZ,qBAGF4yB,GAAM,KACJ7yB,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,cAAe66B,GACjD96B,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,aAAc86B,GAChD/6B,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,oBAAqB+6B,GACvDhB,GAAmBrlB,GAAI,IAIzB8lB,EAAS,wBAAwB,KAC/BG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,oBAAqB,kBACvDs6B,IACP,MAEDG,EAAG,cAAc,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC1B,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,eAAAA,EAAO5L,OAAOqE,QAAQs6B,IAAI7b,UACjCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOqE,OAAOC,KAAKq6B,IAAI7b,UACrCub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOqE,OAAOC,IAAIS,IAAI45B,IAAI7b,UACxCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOqE,OAAOE,KAAKo6B,IAAI7b,UACrCub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOqE,OAAOE,IAAI4e,UAAUwb,IAAI7b,UAC9Cub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOqE,OAAOE,IAAI8e,QAAQsb,IAAI7b,UAC5Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOqE,OAAOI,KAAKk6B,IAAI7b,UACrCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOqE,OAAOG,KAAKm6B,IAAI7b,UACrCub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOqE,OAAOG,IAAIga,MAAMmgB,IAAI7b,UAC1Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOqE,OAAOK,KAAKi6B,IAAI7b,UACrCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOqE,OAAOM,KAAKg6B,IAAI7b,UACrCub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOqE,OAAOM,IAAIif,SAAS+a,IAAI7b,UAC7Cub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOqE,OAAOM,IAAImf,QAAQ6a,IAAI7b,UAC5Cub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOqE,OAAOM,IAAIqf,KAAK2a,IAAI7b,SAC1C,MAEDsb,EAAG,mBAAmB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC/B,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,eAAAA,EAAO5L,OAAO6D,aAAa86B,IAAI7b,UACtCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYhG,SAAS8gC,IAAI7b,UAC9Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYxF,SAASsgC,IAAI7b,UAC9Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYvF,KAAKqgC,IAAI7b,UAC1Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYpF,YAAYkgC,IAAI7b,UACjDub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYnF,OAAOigC,IAAI7b,UAC5Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYtH,OAAOoiC,IAAI7b,UAC5Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAY/F,KAAK6gC,IAAI7b,UAC1Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYnF,OAAOigC,IAAI7b,SAG7C,MAEDsb,EAAG,gBAAgB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC5B,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,eAAAA,EAAO5L,OAAO8mB,UAAU6X,IAAI7b,UACnCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO8mB,SAAS/F,MAAM4d,IAAI7b,UACxCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO8mB,SAAS1E,WAAWuc,IAAI7b,UAC7Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO8mB,SAASzE,UAAUsc,IAAI7b,SAC7C,MAEDsb,EAAG,UAAU,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACtB,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,eAAAA,EAAO5L,OAAOyL,IAAIkzB,IAAI7b,UAC7Bub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOyL,GAAGsV,MAAM4d,IAAI7b,UAClCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOyL,GAAGyV,OAAOyd,IAAI7b,UACnCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOyL,GAAG3F,QAAQ64B,IAAI7b,UACpCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOyL,GAAGlP,OAAOoiC,IAAI7b,UACnCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOyL,GAAG8U,KAAKoe,IAAI7b,SAClC,MAEDsb,EAAG,WAAW,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACvB,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,eAAAA,EAAO5L,OAAO+L,KAAK4yB,IAAI7b,UAC9Bub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+L,IAAIgV,MAAM4d,IAAI7b,UACnCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+L,IAAImV,OAAOyd,IAAI7b,UACpCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+L,IAAIjG,QAAQ64B,IAAI7b,UACrCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+L,IAAIxP,OAAOoiC,IAAI7b,UACpCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+L,IAAIwU,KAAKoe,IAAI7b,SACnC,MAEDqb,EAAS,cAAc,KACrB,MAAMS,EAAc,IAAI5rB,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAEtDorB,EAAG,cAAc,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC1B,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,eAAAA,EAAO5L,OAAOie,QAAQ0gB,IAAI7b,UACjCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOie,OAAO5f,SAASsgC,IAAI7b,UACzCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOie,OAAOC,WAAWygB,IAAI7b,UAC3Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOie,OAAOE,OAAOwgB,IAAI7b,SACxC,MAED8b,EAAY3rB,SAAS2H,IACnBwjB,EAAG,mBAAmBxjB,KAAO,IAAW9e,OAAA,OAAA,OAAA,GAAA,YACtC,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,eAAAA,EAAO5L,OAAOie,OAAOE,MAAMvD,IAAM+jB,IAAI7b,UAC5Cub,EAAOj/B,OAAOomB,KAAK5Z,aAAK,EAALA,EAAO5L,OAAOie,OAAOE,MAAMvD,KAAOikB,QAAQ,QAC7DR,EAAOj/B,OAAOomB,KAAK5Z,aAAK,EAALA,EAAO5L,OAAOie,OAAOE,MAAMvD,KAAOikB,QAAQ,MAC9D,KAAC,GACF,IAGJtI,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,kBAAkB,KACzBG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACVmiC,IACP,MAEkB,CAAC,SAAU,aAAc,QAAS,aAC1ChrB,SAAS0C,IAClByoB,EAAG,OAAOzoB,KAAS,IAAW7Z,OAAA,OAAA,OAAA,GAAA,YAC5B,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO2V,IAAQgpB,IAAI7b,SAClC,KAAC,IAGoB,CACtB,CAAEnN,MAAO,KAAMmpB,UAAW,CAAC,KAAM,QAAS,QAC1C,CAAEnpB,MAAO,cAAempB,UAAW,CAAC,KAAM,KAAM,KAAM,OACtD,CAAEnpB,MAAO,WAAYmpB,UAAW,CAAC,UAAW,UAAW,UAEzC7rB,SAAQ,EAAG0C,QAAOmpB,gBAChCA,EAAU7rB,SAAS8rB,IACjBX,EAAG,GAAGzoB,eAAmBopB,cAAqB,IAAWjjC,OAAA,OAAA,OAAA,GAAA,YACvD,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO2V,IAAQgpB,IAAI7b,UACjCub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO2V,GAAOopB,IAAWJ,IAAI7b,SAC5C,KAAC,GACF,IAG0B,CAC5B,CACEnN,MAAO,QACPmpB,UAAW,CACT,CAAEC,SAAU,SAAUC,YAAa,CAAC,UACpC,CAAED,SAAU,QAASC,YAAa,CAAC,UACnC,CAAED,SAAU,YAAaC,YAAa,CAAC,UACvC,CAAED,SAAU,QAASC,YAAa,CAAC,UACnC,CAAED,SAAU,OAAQC,YAAa,CAAC,aAIlB/rB,SAAQ,EAAG0C,QAAOmpB,gBACtCA,EAAU7rB,SAAQ,EAAG8rB,WAAUC,kBAC7BZ,EAAG,GAAGzoB,eAAmBopB,yBAAgCC,WAAqB,IAAWljC,OAAA,OAAA,OAAA,GAAA,YACvF,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO2V,IAAQgpB,IAAI7b,UACjCub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO2V,GAAOopB,IAAWJ,IAAI7b,UAC3Cub,EAAOzyB,eAAAA,EAAO5L,OAAO2V,GAAOopB,GAAUC,IAAcL,IAAI7b,SACzD,KAAC,GACF,IAGJyT,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,qBAAqB,KAC5BC,EAAG,oCAAoC,KACrCC,EAAOE,EAAUlgB,iBAAiB4gB,MAChCv7B,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,eACnC,GACD,IAGJw6B,EAAS,cAAc,KACrBA,EAAS,kBAAkB,KACzBG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,eAAe,EACxD,MAEDy6B,EAAG,6CAA6C,KAC9CC,EAAOE,EAAUjgB,UAAU2gB,MAAM,EAAE,IAGrCb,EAAG,qDAAqD,KACtDG,EAAU/yB,MAAMuc,IAAM,GACtBsW,EAAOE,EAAUjgB,UAAU2gB,MAAM,IACjCV,EAAU/yB,MAAMuc,IAAM,EACtBsW,EAAOE,EAAU/yB,MAAMuc,KAAKkX,MAAM,EAAE,GACpC,IAGJd,EAAS,mBAAmB,KAC1BG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,eAAe,EACxD,MAEDy6B,EAAG,4BAA4B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACxCuiC,EAAOE,EAAUjgB,UAAU2gB,MAAM,EAClC,KAAC,IAGJb,EAAG,qBAAqB,KACtBG,EAAUl6B,OAAOC,IAAM,CAAEic,IAAK,IAC9B8d,EAAOE,EAAUjgB,UAAU2gB,MAAM,IACjCV,EAAUl6B,OAAOC,IAAIic,IAAM,EAC3B8d,EAAOE,EAAUl6B,OAAOC,IAAIic,KAAK0e,MAAM,EAAE,IAG3Cb,EAAG,6BAA6B,KAC9BG,EAAU/yB,MAAM+U,IAAM,CAAE1Z,MAAO,GAC/Bw3B,EAAOE,EAAUjgB,UAAU2gB,MAAM,GACjCV,EAAU/yB,MAAM+U,IAAI1Z,MAAQ,EAC5Bw3B,EAAOE,EAAU/yB,MAAM+U,IAAI1Z,OAAOo4B,MAAM,EAAE,GAC1C,IAGJd,EAAS,eAAe,KACtBA,EAAS,kBAAkB,KACzBG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,eAAe,EACxD,MAEDy6B,EAAG,6CAA6C,KAC9CC,EAAOE,EAAUhgB,WAAW0gB,MAAM,EAAE,IAGtCb,EAAG,qDAAqD,KACtDG,EAAU/yB,MAAMuc,IAAM,GACtBsW,EAAOE,EAAUhgB,WAAW0gB,MAAM,IAClCV,EAAU/yB,MAAMuc,IAAM,EACtBsW,EAAOE,EAAU/yB,MAAMuc,KAAKkX,MAAM,EAAE,GACpC,IAGJd,EAAS,mBAAmB,KAC1BG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,eAAe,EACxD,MAEDy6B,EAAG,4BAA4B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACxCuiC,EAAOE,EAAUhgB,WAAW0gB,MAAM,EACnC,KAAC,IAGJb,EAAG,qBAAqB,KACtBG,EAAUl6B,OAAOG,IAAM,CAAE+b,IAAK,IAC9B8d,EAAOE,EAAUhgB,WAAW0gB,MAAM,IAClCV,EAAUl6B,OAAOG,IAAI+b,IAAM,EAC3B8d,EAAOE,EAAUl6B,OAAOG,IAAI+b,KAAK0e,MAAM,EAAE,IAG3Cb,EAAG,+BAA+B,KAChCG,EAAU/yB,MAAM+U,IAAM,CAAEzZ,QAAS,GACjCu3B,EAAOE,EAAUhgB,WAAW0gB,MAAM,GAClCV,EAAU/yB,MAAM+U,IAAIzZ,QAAU,EAC9Bu3B,EAAOE,EAAU/yB,MAAM+U,IAAIzZ,SAASm4B,MAAM,EAAE,GAC5C,IAGJd,EAAS,WAAW,KAClBC,EAAG,wCAAwC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACpD,MAAMojC,QAAkBrC,GACtB,YACA,CACE78B,OAAQ,CACNqE,OAAQ,CACNC,IAAK,CAAE/H,MAAO,GACdgI,IAAK,CAAEhI,MAAO,GACdkI,IAAK,CAAElI,MAAO,GACdiI,IAAK,CAAEjI,MAAO,GACdmI,IAAK,CAAEnI,MAAO,GACdoI,IAAK,CAAEpI,MAAO,MAIpB8b,IAEFgmB,EAAOa,aAAS,EAATA,EAAWl/B,OAAOiU,OAAOkrB,GAAGC,GAAGC,IACvC,MAEDjB,EAAG,6CAA6C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzD,MAAMojC,QAAkBrC,GACtB,YACA,CACE78B,OAAQ,CACNqE,OAAQ,CACNC,IAAK,CAAE/H,MAAO,IACdgI,IAAK,CAAEhI,MAAO,GACdkI,IAAK,CAAElI,MAAO,GACdiI,IAAK,CAAEjI,MAAO,GACdmI,IAAK,CAAEnI,MAAO,GACdoI,IAAK,CAAEpI,MAAO,MAIpB8b,IAEFgmB,EAAOa,aAAS,EAATA,EAAWl/B,OAAOiU,OAAOkrB,GAAGC,GAAGE,KACvC,MAEDlB,EAAG,+BAA+B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC3C,MAAMojC,QAAkBrC,GACtB,UACA,CACE78B,OAAQ,CACNynB,MAAO,CACL/hB,OAAQ,CAAEnJ,MAAO,GACjBgJ,MAAO,CAAEhJ,MAAO,GAChBkJ,UAAW,CAAElJ,MAAO,GACpBoJ,MAAO,CAAEpJ,MAAO,GAChBiJ,KAAM,CAAEjJ,MAAO,MAIrB8b,IAEFgmB,EAAOa,aAAS,EAATA,EAAWl/B,OAAOiU,OAAOkrB,GAAGC,GAAGC,IACvC,MAEDjB,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChD,MAAMojC,QAAkBrC,GACtB,UACA,CACE78B,OAAQ,CACNynB,MAAO,CACL/hB,OAAQ,CAAEnJ,MAAO,IACjBgJ,MAAO,CAAEhJ,MAAO,GAChBkJ,UAAW,CAAElJ,MAAO,GACpBoJ,MAAO,CAAEpJ,MAAO,GAChBiJ,KAAM,CAAEjJ,MAAO,MAIrB8b,IAEFgmB,EAAOa,aAAS,EAATA,EAAWl/B,OAAOiU,OAAOkrB,GAAGC,GAAGE,KACvC,KAAC,IAGJnB,EAAS,gBAAgB,KACvBC,EAAG,0BAA0B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACtC,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO8d,WAAWtR,QAAQyyB,MAAM,SACxCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CAAEvS,KAAM,YAAaiP,KAAM,oBAE7B2vB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,kBAE5C,MAAM3qB,EAAS1I,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG/U,GACxC06B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO8d,WAAWtR,QAAQyyB,MAAM,GAE9CZ,EAAOzyB,eAAAA,EAAO5L,OAAO8d,WAAW,GAAGhU,KAAKm1B,MAAM3qB,GAC9C1I,SAAAA,EAAO6xB,QACR,MAEDlH,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,eAAe,KACtBC,EAAG,8BAA8B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC1C,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO6d,UAAUrR,QAAQyyB,MAAM,SACvCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CAAEvS,KAAM,OAAQiP,KAAM,gBAAiB1O,OAAQ,CAAEC,UAAU,MAE7Do+B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,iBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOC,UAAUs/B,GAAGF,KAEpD,MAAM/qB,EAAS1I,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG/U,GACxC06B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO6d,UAAUrR,QAAQyyB,MAAM,GAE7CZ,EAAOzyB,eAAAA,EAAO5L,OAAO6d,UAAU,GAAG/T,KAAKm1B,MAAM3qB,GAC7C1I,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,sDAAsD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAClE,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO6d,UAAUrR,QAAQyyB,MAAM,SACvCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CAAEvS,KAAM,YAAaiP,KAAM,oBAE7B,MAAM8K,EAAY5N,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,wBACjC1xB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAE3C,CACEvS,KAAM,OACNiP,KAAM,gBACN1O,OAAQ,CAAEC,UAAU,EAAMoV,YAAamE,aAAS,EAATA,EAAW7V,OAGtD06B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,kBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,iBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOC,UAAUs/B,GAAGF,KACpDhB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOqV,aAAa4pB,MAAMzlB,aAAS,EAATA,EAAW7V,IACrE06B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO6d,UAAUrR,QAAQyyB,MAAM,GAC7CrzB,SAAAA,EAAO6xB,QACR,MAEDlH,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,qBAAqB,KAC5BC,EAAG,kCAAkC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC9C,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+d,iBAAiBkhB,MAAM,SACtCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,OACNiP,KAAM,gBACN1O,OAAQ,CAAEC,UAAU,EAAMC,SAAU,CAAE3D,MAAO,GAAKwV,KAAM,OAG5DssB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,iBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOC,UAAUs/B,GAAGF,KACpDhB,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+d,iBAAiBkhB,MAAM,IAC5CrzB,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,2CAA2C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACvD,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+d,iBAAiBkhB,MAAM,SACtCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,OACNiP,KAAM,gBACN1O,OAAQ,CAAEC,UAAU,EAAMC,SAAU,CAAE3D,MAAO,GAAKwV,KAAM,KAE1D,CACEtS,KAAM,OACNiP,KAAM,kBACN1O,OAAQ,CAAEC,UAAU,EAAMC,SAAU,CAAE3D,MAAO,GAAKwV,KAAM,MAG5DssB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,iBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOC,UAAUs/B,GAAGF,KACpDhB,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,mBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOC,UAAUs/B,GAAGF,KACpDhB,EAAOzyB,eAAAA,EAAO5L,OAAO+d,iBAAiBkhB,MAAM,IAC5CrzB,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,2DAA2D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACvE,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+d,iBAAiBkhB,MAAM,SACtCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CAAEvS,KAAM,YAAaiP,KAAM,oBAE7B,MAAM8K,EAAY5N,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,wBACjC1xB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAE3C,CACEvS,KAAM,OACNiP,KAAM,gBACN1O,OAAQ,CACNC,UAAU,EACVoV,YAAamE,aAAA,EAAAA,EAAW7V,GACxBzD,SAAU,CAAE3D,MAAO,GACnBwV,KAAM,OAIZssB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,kBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,iBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOC,UAAUs/B,GAAGF,KAEpDhB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOqV,aAAa4pB,MAAMzlB,aAAS,EAATA,EAAW7V,IACrE06B,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+d,iBAAiBkhB,MAAM,GAC5CrzB,SAAAA,EAAO6xB,QACR,MAEDlH,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,WAAW,KAClBC,EAAG,0CAA0C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACtD,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOhC,MAAMwO,QAAQyyB,MAAM,SACnCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,OACNiP,KAAM,aAER,CACEjP,KAAM,OACNiP,KAAM,gBACN1O,OAAQ,CAAEC,UAAU,EAAMC,SAAU,CAAE3D,MAAO,GAAKwV,KAAM,MAG5DssB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,aAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,iBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOC,UAAUs/B,GAAGF,KACpDhB,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOhC,MAAMwO,QAAQyyB,MAAM,GACzCZ,EAAOzyB,eAAAA,EAAO5L,OAAOhC,MAAM,GAAG0Q,MAAMuwB,MAAM,aAC1CrzB,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,sDAAsD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAClE,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOhC,MAAMwO,QAAQyyB,MAAM,SACnCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,YACNiP,KAAM,oBAGV,MAAM8K,EAAY5N,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,wBACjC1xB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAE3C,CACEvS,KAAM,OACNiP,KAAM,yBACN1O,OAAQ,CAAEqV,YAAamE,aAAA,EAAAA,EAAW7V,KAEpC,CACElE,KAAM,OACNiP,KAAM,eAGV2vB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,kBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,0BAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,aAC5CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOhC,MAAMwO,QAAQyyB,MAAM,GACzCZ,EAAOzyB,eAAAA,EAAO5L,OAAOhC,MAAM,GAAG0Q,MAAMuwB,MAAM,aAC1CrzB,SAAAA,EAAO6xB,QACR,KAAC,IAGc,CAChB,CAAEh+B,KAAM,SAAU+/B,OAAQ,WAC1B,CAAE//B,KAAM,UAAW+/B,OAAQ,aAC3B,CAAE//B,KAAM,QAAS+/B,OAAQ,SACzB,CAAE//B,KAAM,QAAS+/B,OAAQ,eAEjBvsB,SAAQ,EAAGxT,OAAM+/B,aACzBrB,EAAS,GAAGqB,OAAY,KACtBpB,EAAG,eAAeoB,KAAU,IAAW1jC,OAAA,OAAA,OAAA,GAAA,YACrC,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOw/B,GAAQhzB,QAAQyyB,MAAM,SACrCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CAAEvS,OAAMiP,KAAM,QAAQjP,OAExB4+B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,QAAQx/B,KAEpD,MAAM6U,EAAS1I,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG/U,GACxC06B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOw/B,GAAQhzB,QAAQyyB,MAAM,GAE3CZ,EAAOzyB,eAAAA,EAAO5L,OAAOw/B,GAAQ,GAAG11B,KAAKm1B,MAAM3qB,GAC3C1I,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,eAAeoB,8BAAmC,IAAW1jC,OAAA,OAAA,OAAA,GAAA,YAC9D,GAAe,cAAX0jC,EAAwB,OAE5B,MAAM5zB,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOw/B,GAAQhzB,QAAQyyB,MAAM,SACrCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,YACNiP,KAAM,oBAGV,MAAM8K,EAAY5N,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,wBACjC1xB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAE3C,CACEvS,OACAiP,KAAM,QAAQjP,iBACdO,OAAQ,CAAEqV,YAAamE,aAAA,EAAAA,EAAW7V,KAEpC,CACElE,OACAiP,KAAM,QAAQjP,OAGlB4+B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,kBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MACpC,QAAQx/B,kBAEV4+B,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,QAAQx/B,KAEpD,MAAM6U,EAAS1I,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG/U,GACxC06B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOw/B,GAAQhzB,QAAQyyB,MAAM,GAE3CZ,EAAOzyB,eAAAA,EAAO5L,OAAOw/B,GAAQ,GAAG11B,KAAKm1B,MAAM3qB,GAC3C1I,SAAAA,EAAO6xB,QACR,MAEDlH,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,GACF,IAGJ8lB,EAAS,YAAY,KACnBC,EAAG,+BAA+B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC3C,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,eAAAA,EAAO5L,OAAOgoB,QAAQuX,GAAGD,MAChC1zB,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,8DAA8D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC1E,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,SACrCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,SACNiP,KAAM,cACN1O,OAAQ,CAAE+G,MAAM,EAAMzG,UAAU,MAGpC+9B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,eAC5CZ,EAAOzyB,eAAAA,EAAO5L,OAAOgoB,QAAQuX,GAAGD,MAChC1zB,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,uEAAuE,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACnF,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,SACrCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,SACNiP,KAAM,cACN1O,OAAQ,CAAE+G,MAAM,EAAOzG,UAAU,MAGrC+9B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,eAC5CZ,EAAOzyB,eAAAA,EAAO5L,OAAOgoB,QAAQuX,GAAGD,MAChC1zB,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,4DAA4D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACxE,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,SACrCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,SACNiP,KAAM,cACN1O,OAAQ,CAAE+G,MAAM,EAAMzG,UAAU,MAGpC+9B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,eAC5CZ,EAAOzyB,eAAAA,EAAO5L,OAAOgoB,QAAQuX,GAAGF,KAChCzzB,SAAAA,EAAO6xB,QACR,MAEDlH,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,UAAU,KACjBA,EAAS,qBAAqB,KAC5BG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,aAAc,QACvD,MAEDy6B,EAAG,aAAa,KACdC,EAAOE,EAAU/f,MAAMygB,MAAM,EAAE,IAGjCb,EAAG,uCAAuC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACnDyiC,EAAUvqB,WAAWzX,MAAQ,GAC7B8hC,EAAOE,EAAU/f,MAAMygB,MAAM,GAC7BV,EAAUvqB,WAAWzX,MAAQ,EAC7B8hC,EAAOE,EAAUvqB,WAAWzX,OAAO0iC,MAAM,EAC1C,MAEDb,EAAG,qCAAqC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACjDyiC,EAAUvqB,WAAWuM,IAAM,GAC3B8d,EAAOE,EAAU/f,MAAMygB,MAAM,GAC7BV,EAAUvqB,WAAWuM,IAAM,EAC3B8d,EAAOE,EAAUvqB,WAAWuM,KAAK0e,MAAM,EACxC,MAEDb,EAAG,mCAAmC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC/CyiC,EAAU/5B,IAAM,CAAE+b,IAAK,CAAE/B,KAAM,IAC/B6f,EAAOE,EAAU/f,MAAMygB,MAAM,GAC7BV,EAAU/5B,IAAI+b,IAAI/B,KAAO,EACzB6f,EAAOE,EAAU/5B,IAAI+b,IAAI/B,MAAMygB,MAAM,EACtC,KAAC,IAGJd,EAAS,0BAA0B,KACjCG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,aAAc,aAGvD,MAEDy6B,EAAG,wBAAwB,KACzBC,EAAOE,EAAUvqB,WAAWzX,OAAO0iC,MAAM,GACzCZ,EAAOE,EAAUvqB,WAAWuM,KAAK0e,MAAM,GACvCZ,EAAOE,EAAUl6B,OAAOG,IAAIga,MAAMygB,MAAM,GACxCZ,EAAOE,EAAU/f,MAAMygB,MAAM,EAAE,IAGjCb,EAAG,+CAA+C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC3DyiC,EAAUvqB,WAAWzX,MAAQ,GAC7B8hC,EAAOE,EAAU/f,MAAMygB,MAAM,IAC7BV,EAAUvqB,WAAWzX,MAAQ,EAC7B8hC,EAAOE,EAAUvqB,WAAWzX,OAAO0iC,MAAM,EAC1C,MAEDb,EAAG,6CAA6C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzDyiC,EAAUvqB,WAAWuM,IAAM,GAC3B8d,EAAOE,EAAU/f,MAAMygB,MAAM,IAC7BV,EAAUvqB,WAAWuM,IAAM,EAC3B8d,EAAOE,EAAUvqB,WAAWuM,KAAK0e,MAAM,EACxC,MACDb,EAAG,2CAA2C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACvDyiC,EAAUl6B,OAAOG,IAAM,CAAEga,KAAM,GAC/B6f,EAAOE,EAAU/f,MAAMygB,MAAM,GAC7BV,EAAUl6B,OAAOG,IAAIga,KAAO,EAC5B6f,EAAOE,EAAUl6B,OAAOG,IAAIga,MAAMygB,MAAM,EACzC,KAAC,GACF,GACF,ECrvBG,MACM1/B,GAAU,CAAEy+B,YAAa,wCAEtC,IAAeyB,GAAA,EAAGtB,WAAUC,KAAIC,aAC9B,MAGMx4B,EAAQ,IAAImT,KAAKC,eAAe,CACpCvK,KAAM,QACNjP,KAAM,QACNO,OAAQ,CACNyL,GAAI,CAAElP,MAPM,GAQZwP,IAAK,CAAExP,MARK,GASZkD,KAAM,QACNa,UAAU,KAKRwF,EAAS,IAAIkT,KAAKC,eAAe,CACrCvK,KAAM,SACNjP,KAAM,QACNO,OAAQ,CACNyL,GAAI,CAAElP,MAlBO,GAmBbwP,IAAK,CAAExP,MAnBM,GAoBbkD,KAAM,SACNa,UAAU,KAIRo/B,EAAa,CAAC75B,GACd85B,EAAc,CAAC75B,GACf85B,EAAY,CAAC/5B,EAAOC,GAGpB+5B,GAAkB,EAGlBC,GAAwB,EAE9B3B,EAAS,mBAAmB,KAC1BA,EAAS,+BAA+B,KACtCC,EAAG,kBAAkB,KACnB,MAAM3yB,EAAK,IAAI2U,IAAwB,GACvCie,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAM7e,GAAwBY,cAAc,IAElEod,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,GACfie,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAM7e,GAAwBa,eAAe,GACjE,GACF,IAGJkd,EAAS,qBAAqB,KAC5BA,EAAS,+CAA+C,KACtDA,EAAS,cAAc,KACrBC,EAAG,kBAAkB,KACnB,MAAM3yB,EAAK,IAAI2U,IAAwB,EAAMsf,GAG7CrB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAxDZ,EAwD0B,IAEpCb,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IAAwB,EAAOsf,GAG9CrB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MA9DZ,EA8D0B,GAClC,IAGJd,EAAS,eAAe,KACtBC,EAAG,kBAAkB,KACnB,MAAM3yB,EAAK,IAAI2U,IAAwB,EAAMuf,GAC7CtB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAClB7e,GAAwBY,cArEjB,EAsER,IAEHod,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IAAwB,EAAOuf,GAC9CtB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAClB7e,GAAwBa,eA3EjB,EA4ER,GACD,IAGJkd,EAAS,yBAAyB,KAChCC,EAAG,kBAAkB,KACnB,MAAM3yB,EAAK,IAAI2U,IAAwB,EAAMwf,GAG7CvB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAAmB,IAE/C3B,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IAAwB,EAAOwf,GAG9CvB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAAmB,GAC7C,GACF,GACF,IAGJ5B,EAAS,6BAA6B,KACpCA,EAAS,qBAAqB,KAC5BA,EAAS,kBAAkB,KACzB,MAAMpd,EAAOX,GAAwBY,cACrCod,EAAG,wBAAwB,KACzB,MAAM3yB,EAAK,IAAI2U,IAAwB,EAAM,GAzE9B,GA0Efie,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EA1EX,EA0EiC,IAElDqd,EAAG,sBAAsB,KACvB,MAAM3yB,EAAK,IAAI2U,IACb,EACAsf,EA/Ea,GAkFfrB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAAyB,IAErD3B,EAAG,qBAAqB,KACtB,MAAM3yB,EAAK,IAAI2U,IACb,EACAuf,EAvFa,GA0FftB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAvHjB,EA6BM,EA0F4C,IAE7Dqd,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IACb,EACAwf,EA/Fa,GAkGfvB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAAoC,GAC9D,IAEJ5B,EAAS,mBAAmB,KAC1B,MAAMpd,EAAOX,GAAwBa,eACrCmd,EAAG,wBAAwB,KACzB,MAAM3yB,EAAK,IAAI2U,IAAwB,EAAO,GAxG/B,GAyGfie,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAzGX,EAyGiC,IAElDqd,EAAG,sBAAsB,KACvB,MAAM3yB,EAAK,IAAI2U,IACb,EACAsf,EA9Ga,GAiHfrB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAAyB,IAErD3B,EAAG,qBAAqB,KACtB,MAAM3yB,EAAK,IAAI2U,IACb,EACAuf,EAtHa,GAyHftB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAtJjB,EA6BM,EAyH4C,IAE7Dqd,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IACb,EACAwf,EA9Ha,GAiIfvB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,OAAMc,EAAoC,GAC9D,GACF,IAEJ5B,EAAS,qBAAqB,KAC5BA,EAAS,kBAAkB,KACzB,MAAMpd,EAAOX,GAAwBY,cACrCod,EAAG,wBAAwB,KACzB,MAAM3yB,EAAK,IAAI2U,IAAwB,EAAM,GAAIyf,GACjDxB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAAO8e,EAAe,IAElDzB,EAAG,sBAAsB,KACvB,MAAM3yB,EAAK,IAAI2U,IACb,EACAsf,EACAG,GAEFxB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAAyB,IAErD3B,EAAG,qBAAqB,KACtB,MAAM3yB,EAAK,IAAI2U,IACb,EACAuf,EACAE,GAEFxB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAvLjB,EAuLmC8e,EAAe,IAE7DzB,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IACb,EACAwf,EACAC,GAEFxB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAAoC,GAC9D,IAEJ5B,EAAS,mBAAmB,KAC1B,MAAMpd,EAAOX,GAAwBa,eACrCmd,EAAG,wBAAwB,KACzB,MAAM3yB,EAAK,IAAI2U,IAAwB,EAAO,GAAIyf,GAClDxB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAAO8e,EAAe,IAElDzB,EAAG,sBAAsB,KACvB,MAAM3yB,EAAK,IAAI2U,IACb,EACAsf,EACAG,GAEFxB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAAyB,IAErD3B,EAAG,qBAAqB,KACtB,MAAM3yB,EAAK,IAAI2U,IACb,EACAuf,EACAE,GAEFxB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAtNjB,EAsNmC8e,EAAe,IAE7DzB,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IACb,EACAwf,EACAC,GAEFxB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAAoC,GAC9D,GACF,GACF,IAGJ5B,EAAS,8BAA8B,KACrCA,EAAS,qBAAqB,KAC5BA,EAAS,kBAAkB,KACzB,MAAMpd,EAAOX,GAAwBY,cACrCod,EAAG,wBAAwB,KACzB,MAAM3yB,EAAK,IAAI2U,IACb,EACA,GACA,EA5MmB,GA+MrBie,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EA/ML,EA+MiC,IAExDqd,EAAG,sBAAsB,KACvB,MAAM3yB,EAAK,IAAI2U,IACb,EACAsf,EACA,EArNmB,GAwNrBrB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAA+B,IAE3D3B,EAAG,qBAAqB,KACtB,MAAM3yB,EAAK,IAAI2U,IACb,EACAuf,EACA,EA9NmB,GAiOrBtB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAjQjB,EAgCY,EAiO4C,IAEnEqd,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IACb,EACAwf,EACA,EAvOmB,GA0OrBvB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAA0C,GACpE,IAEJ5B,EAAS,mBAAmB,KAC1B,MAAMpd,EAAOX,GAAwBa,eACrCmd,EAAG,wBAAwB,KACzB,MAAM3yB,EAAK,IAAI2U,IACb,EACA,GACA,EAnPmB,GAsPrBie,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAtPL,EAsPiC,IAExDqd,EAAG,sBAAsB,KACvB,MAAM3yB,EAAK,IAAI2U,IACb,EACAsf,EACA,EA5PmB,GA+PrBrB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAA+B,IAE3D3B,EAAG,qBAAqB,KACtB,MAAM3yB,EAAK,IAAI2U,IACb,EACAuf,EACA,EArQmB,GAwQrBtB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAxSjB,EAgCY,EAwQ4C,IAEnEqd,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IACb,EACAwf,EACA,EA9QmB,GAiRrBvB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAA0C,GACpE,GACF,IAEJ5B,EAAS,qBAAqB,KAC5BA,EAAS,kBAAkB,KACzB,MAAMpd,EAAOX,GAAwBY,cACrCod,EAAG,wBAAwB,KACzB,MAAM3yB,EAAK,IAAI2U,IACb,EACA,GACA,EACA0f,GAEFzB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAAO+e,EAAqB,IAExD1B,EAAG,sBAAsB,KACvB,MAAM3yB,EAAK,IAAI2U,IACb,EACAsf,EACA,EACAI,GAEFzB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAA+B,IAE3D3B,EAAG,qBAAqB,KACtB,MAAM3yB,EAAK,IAAI2U,IACb,EACAuf,EACA,EACAG,GAEFzB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAjVjB,EAiVmC+e,EAAqB,IAEnE1B,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IACb,EACAwf,EACA,EACAE,GAEFzB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAA0C,GACpE,IAEJ5B,EAAS,mBAAmB,KAC1B,MAAMpd,EAAOX,GAAwBa,eACrCmd,EAAG,wBAAwB,KACzB,MAAM3yB,EAAK,IAAI2U,IACb,EACA,GACA,EACA0f,GAEFzB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAAO+e,EAAqB,IAExD1B,EAAG,sBAAsB,KACvB,MAAM3yB,EAAK,IAAI2U,IACb,EACAsf,EACA,EACAI,GAEFzB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAA+B,IAE3D3B,EAAG,qBAAqB,KACtB,MAAM3yB,EAAK,IAAI2U,IACb,EACAuf,EACA,EACAG,GAEFzB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMle,EAxXjB,EAwXmC+e,EAAqB,IAEnE1B,EAAG,mBAAmB,KACpB,MAAM3yB,EAAK,IAAI2U,IACb,EACAwf,EACA,EACAE,GAEFzB,EAAO5yB,EAAGlP,OAAO4iC,GAAGF,MAAMc,EAA0C,GACpE,GACF,GACF,GACF,ECrYG,MACMxgC,GAAU,CACrBy+B,YAAa,iDAGTgC,GAAQ,CAACzjC,EAAeuB,IAC5BS,KAAKC,MAAO,IAAMjC,EAASuB,EAAK,EAAG,KAC/BmiC,GAAiB,CACrBxgC,EACAU,EACAD,EACAggC,EAAc,CAAE,IAGhB,IAAIlnB,KAAKC,eAAe,CACtBvK,KAAM,QAAQjP,KAAQmP,QAAQC,MAAMouB,aACpCx9B,OACAO,OAAaZ,OAAAwmB,OAAAxmB,OAAAwmB,OAAA,CAAA,EAAAsa,GAAa,CAAA//B,SAAQD,SAAU,CAAE3D,MAAO2D,OAGzD,IAAeigC,GAAA,EAAGhC,WAAUC,KAAIC,aAC9BF,EAAS,wBAAwB,KAC/BC,EAAG,eAAe,KAChB,IAAIgC,EAAM,IAAIziC,EACd0gC,EAAO+B,EAAI/hC,SAAS8gC,GAAGC,GAAGE,MAE1Bc,EAAM,IAAIC,EACVhC,EAAO+B,EAAI/hC,SAAS8gC,GAAGC,GAAGE,KAAK,GAC/B,IAGJnB,EAAS,qBAAqB,KAC5BC,EAAG,cAAc,KACf,MAAMgC,EAAM,IAAIE,EAChBjC,EAAO+B,EAAI/hC,SAAS8gC,GAAGC,GAAGC,IAAI,IAGhCjB,EAAG,6CAA6C,KAC9C,MAAMgC,EAAM,IAAIE,EAEVC,EAAgB,CAAE,IADX78B,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,uBACGy8B,EAAItiC,KACtDugC,EAAO+B,EAAI1hC,OAAOygC,GAAGqB,KAAKC,QAAQF,EAAc,IAGlDpC,EAAS,kCAAkC,KACzCC,EAAG,iBAAiB,KAClB,MAAMtgC,EAAM,KAKZ,IAAIsiC,EAAM,IAAIE,EAAiBxiC,EAAK,CAClCmiC,GAAe,OALH,IAKkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAPX,IAOwBliC,IAEtCsiC,EAAM,IAAIE,EAAiBxiC,EAAK,CAC9BmiC,GAAe,OATH,IASkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAXX,IAWwBliC,IAEtCsiC,EAAM,IAAIE,EAAiBxiC,EAAK,CAC9BmiC,GAAe,OAbH,KAakB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAfX,KAewBliC,IAEtCsiC,EAAM,IAAIE,EAAiBxiC,EAAK,CAC9BmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAM,KAEzBmB,EAAM,IAAIE,EAAiBxiC,EAAK,CAC9BmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAM,EAAE,IAE7Bb,EAAG,YAAY,KACb,MAAMtgC,EAAM,KAKZ,IAAIsiC,EAAM,IAAIE,EAAiBxiC,EAAK,CAClCmiC,GAAe,OALH,IAKkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAPP,KASdmB,EAAM,IAAIE,EAAiBxiC,EAAK,CAC9BmiC,GAAe,OATH,IASkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAXP,KAadmB,EAAM,IAAIE,EAAiBxiC,EAAK,CAC9BmiC,GAAe,OAbH,KAakB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAfP,MAiBdmB,EAAM,IAAIE,EAAiBxiC,EAAK,CAC9BmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAAMnhC,GAE3BsiC,EAAM,IAAIE,EAAiBxiC,EAAK,CAC9BmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAAM,EAAE,IAE/Bd,EAAS,4BAA4B,KACnCC,EAAG,sCAAsC,KACvC,MAAMgC,EAAM,IAAIE,EAAiB,KAAM,CACrCL,GAAe,OAAQ,OAAQ,EAAG,CAAEhgC,UAAU,MAEhDo+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGC,IAAI,IAEnClB,EAAS,kBAAkB,KACzBC,EAAG,2BAA2B,KAC5B,MAAMgC,EAAM,IAAIE,EAAiB,KAAM,CACrCL,GAAe,SAAU,OAAQ,GACjCA,GAAe,QAAS,OAAQ,GAChCA,GAAe,YAAa,OAAQ,GACpCA,GAAe,OAAQ,OAAQ,KAEjC5B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGE,KAAK,IAEpClB,EAAG,uBAAuB,KACxB,MAAMgC,EAAM,IAAIE,EAAiB,KAAM,CACrCL,GAAe,OAAQ,IAAK,EAAG,CAAEhgC,UAAU,MAE7Co+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGE,KAAK,GAClC,GACF,IAEJlB,EAAG,iDAAiD,KAClD,IAAIgC,EAAM,IAAIE,EAAiB,KAAM,CACnCL,GAAe,OAAQ,IAAK,EAAG,CAAEhgC,UAAU,MAE7Co+B,EAAO+B,EAAIx/B,kCAAkCu+B,GAAGC,GAAGE,MAEnDc,EAAM,IAAIE,EAAiB,KAAM,CAC/BL,GAAe,OAAQ,IAAK,EAAG,CAAEhgC,UAAU,MAE7Co+B,EAAO+B,EAAIx/B,kCAAkCu+B,GAAGC,GAAGC,KAEnDe,EAAM,IAAIE,EAAiB,KAAM,CAACL,GAAe,SAAU,IAAK,KAChE5B,EAAO+B,EAAIx/B,kCAAkCu+B,GAAGC,GAAGE,KAAK,GACxD,IAGJlB,EAAG,4BAA4B,KAG7B,IAAIgC,EAAM,IAAIE,EAFC,KAGfjC,EAAO+B,EAAItiC,KAAKqhC,GAAGF,MAHJ,KAKfmB,EAAM,IAAIE,EACVjC,EAAO+B,EAAItiC,KAAKqhC,GAAGF,MACjBthC,EAAiCI,mBAClC,GACD,IAGJogC,EAAS,wBAAwB,KAC/BC,EAAG,cAAc,KACf,MAAMgC,EAAM,IAAIM,EAChBrC,EAAO+B,EAAI/hC,SAAS8gC,GAAGC,GAAGC,IAAI,IAEhCjB,EAAG,6CAA6C,KAC9C,MAAMgC,EAAM,IAAIM,EAChBrC,EAAO+B,EAAI1hC,OAAOygC,GAAGqB,KAAKC,QACxBrhC,OAAO8B,OAAOvD,EAAiCiB,kBAChD,IAEHu/B,EAAS,kCAAkC,KACzCC,EAAG,iBAAiB,KAClB,MAAMtgC,EAAM,KAKZ,IAAIsiC,EAAM,IAAIM,EAAoB5iC,EAAK,CACrCmiC,GAAe,OALH,IAKkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAPX,IAOwBliC,IAEtCsiC,EAAM,IAAIM,EAAoB5iC,EAAK,CACjCmiC,GAAe,OATH,IASkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAXX,IAWwBliC,IAEtCsiC,EAAM,IAAIM,EAAoB5iC,EAAK,CACjCmiC,GAAe,OAbH,KAakB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAfX,KAewBliC,IAEtCsiC,EAAM,IAAIM,EAAoB5iC,EAAK,CACjCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAM,KAEzBmB,EAAM,IAAIM,EAAoB5iC,EAAK,CACjCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAAMU,EAAoBl/B,WAAY1D,GAAK,IAEtEsgC,EAAG,YAAY,KACb,MAAMtgC,EAAM,KAKZ,IAAIsiC,EAAM,IAAIM,EAAoB5iC,EAAK,CACrCmiC,GAAe,OALH,IAKkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAPP,KASdmB,EAAM,IAAIM,EAAoB5iC,EAAK,CACjCmiC,GAAe,OATH,IASkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAXP,KAadmB,EAAM,IAAIM,EAAoB5iC,EAAK,CACjCmiC,GAAe,OAbH,KAakB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAfP,MAiBdmB,EAAM,IAAIM,EAAoB5iC,EAAK,CACjCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAAMnhC,GAE3BsiC,EAAM,IAAIM,EAAoB5iC,EAAK,CACjCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAAMyB,EAAoBl/B,WAAW,IAE5D28B,EAAS,4BAA4B,KACnCC,EAAG,sCAAsC,KACvC,MAAMgC,EAAM,IAAIM,EAAoB,KAAM,CACxCT,GAAe,OAAQ,OAAQ,EAAG,CAAEhgC,UAAU,MAEhDo+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGC,IAAI,IAEnClB,EAAS,kBAAkB,KACzBC,EAAG,2BAA2B,KAC5B,MAAMgC,EAAM,IAAIM,EAAoB,KAAM,CACxCT,GAAe,OAAQ,OAAQ,KAEjC5B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGE,MAC7BjB,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAAM,GAAG,IAEhCb,EAAG,uBAAuB,KACxB,MAAMgC,EAAM,IAAIM,EAAoB,KAAM,CACxCT,GAAe,OAAQ,IAAK,EAAG,CAAEhgC,UAAU,MAE7Co+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGE,KAAK,GAClC,GACF,GACF,IAGJlB,EAAG,4BAA4B,KAG7B,IAAIgC,EAAM,IAAIM,EAFC,KAGfrC,EAAO+B,EAAItiC,KAAKqhC,GAAGF,MAHJ,KAKfmB,EAAM,IAAIM,EACVrC,EAAO+B,EAAItiC,KAAKqhC,GAAGF,MACjBthC,EAAiCI,mBAClC,GACD,IAGJogC,EAAS,wBAAwB,KAC/BC,EAAG,cAAc,KACf,MAAMgC,EAAM,IAAIO,EAChBtC,EAAO+B,EAAI/hC,SAAS8gC,GAAGC,GAAGC,IAAI,IAEhCjB,EAAG,6CAA6C,KAC9C,MAAMgC,EAAM,IAAIO,EAEhBtC,EAAO+B,EAAI1hC,OAAOygC,GAAGqB,KAAKC,QACxBrhC,OAAO8B,OAAOvD,EAAiCiB,kBAChD,IAEHu/B,EAAS,kCAAkC,KACzCC,EAAG,iBAAiB,KAClB,MAAMtgC,EAAM,KAKZ,IAAIsiC,EAAM,IAAIO,EAAoB7iC,EAAK,CACrCmiC,GAAe,OALH,IAKkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAPX,IAOwBliC,IAEtCsiC,EAAM,IAAIO,EAAoB7iC,EAAK,CACjCmiC,GAAe,OATH,IASkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAXX,IAWwBliC,IAEtCsiC,EAAM,IAAIO,EAAoB7iC,EAAK,CACjCmiC,GAAe,OAbH,KAakB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAfX,KAewBliC,IAEtCsiC,EAAM,IAAIO,EAAoB7iC,EAAK,CACjCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAM,KAEzBmB,EAAM,IAAIO,EAAoB7iC,EAAK,CACjCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAM,IAAI,IAE/Bb,EAAG,YAAY,KACb,MAAMtgC,EAAM,KAKZ,IAAIsiC,EAAM,IAAIO,EAAoB7iC,EAAK,CACrCmiC,GAAe,OALH,IAKkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAPP,KASdmB,EAAM,IAAIO,EAAoB7iC,EAAK,CACjCmiC,GAAe,OATH,IASkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAXP,KAadmB,EAAM,IAAIO,EAAoB7iC,EAAK,CACjCmiC,GAAe,OAbH,KAakB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAfP,MAiBdmB,EAAM,IAAIO,EAAoB7iC,EAAK,CACjCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAAMnhC,GAE3BsiC,EAAM,IAAIO,EAAoB7iC,EAAK,CACjCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAAMnhC,EAAI,IAEjCqgC,EAAS,4BAA4B,KACnCC,EAAG,sCAAsC,KACvC,IAAIgC,EAAM,IAAIO,EAAoB,KAAM,CACtCV,GAAe,OAAQ,OAAQ,EAAG,CAAEhgC,UAAU,MAEhDo+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGC,KAC7Be,EAAM,IAAIO,EAAoB,KAAM,CAClCV,GAAe,OAAQ,OAAQ,EAAG,CAAEhgC,UAAU,MAEhDo+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGC,IAAI,IAEnClB,EAAS,kBAAkB,KACzBC,EAAG,uBAAuB,KACxB,MAAMgC,EAAM,IAAIO,EAAoB,KAAM,CACxCV,GAAe,OAAQ,IAAK,EAAG,CAAEhgC,UAAU,MAE7Co+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGE,KAAK,IAEpClB,EAAG,oBAAoB,KACrB,IAAIgC,EAAM,IAAIO,EAAoB,KAAM,CACtCV,GAAe,OAAQ,KAAM,EAAG,CAAEhgC,UAAU,MAE9Co+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGE,MAC7Bc,EAAM,IAAIO,EAAoB,KAAM,CAClCV,GAAe,OAAQ,KAAM,EAAG,CAAEhgC,UAAU,MAE9C2gC,QAAQC,KAAKT,GACb/B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGE,KAAK,GAClC,GACF,GACF,IAGJlB,EAAG,4BAA4B,KAG7B,IAAIgC,EAAM,IAAIO,EAFC,KAGftC,EAAO+B,EAAItiC,KAAKqhC,GAAGF,MAHJ,KAKfmB,EAAM,IAAIO,EAEVtC,EAAO+B,EAAItiC,KAAKqhC,GAAGF,MACjBthC,EAAiCI,mBAClC,GACD,IAGJogC,EAAS,0BAA0B,KACjCC,EAAG,cAAc,KACf,MAAMgC,EAAM,IAAIU,EAChBzC,EAAO+B,EAAI/hC,SAAS8gC,GAAGC,GAAGC,IAAI,IAEhCjB,EAAG,6CAA6C,KAC9C,MAAMgC,EAAM,IAAIU,EAEhBzC,EAAO+B,EAAI1hC,OAAOygC,GAAGqB,KAAKC,QACxBrhC,OAAO8B,OAAOvD,EAAiCiB,kBAChD,IAEHu/B,EAAS,kCAAkC,KACzCC,EAAG,iBAAiB,KAClB,MAAMtgC,EAAM,KAKZ,IAAIsiC,EAAM,IAAIU,EAAqBhjC,EAAK,CACtCmiC,GAAe,OALH,IAKkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAPX,IAOwBliC,IAEtCsiC,EAAM,IAAIU,EAAqBhjC,EAAK,CAClCmiC,GAAe,OATH,IASkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAXX,IAWwBliC,IAEtCsiC,EAAM,IAAIU,EAAqBhjC,EAAK,CAClCmiC,GAAe,OAbH,KAakB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAMe,GAfX,KAewBliC,IAEtCsiC,EAAM,IAAIU,EAAqBhjC,EAAK,CAClCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAM,KAEzBmB,EAAM,IAAIU,EAAqBhjC,EAAK,CAClCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI9hC,KAAK6gC,GAAGF,MAAM,IAAI,IAE/Bb,EAAG,YAAY,KACb,MAAMtgC,EAAM,KAKZ,IAAIsiC,EAAM,IAAIU,EAAqBhjC,EAAK,CACtCmiC,GAAe,OALH,IAKkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAPP,KASdmB,EAAM,IAAIU,EAAqBhjC,EAAK,CAClCmiC,GAAe,OATH,IASkB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAXP,KAadmB,EAAM,IAAIU,EAAqBhjC,EAAK,CAClCmiC,GAAe,OAbH,KAakB,EAAG,CAAEhgC,UAAU,MAE/Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAfP,MAiBdmB,EAAM,IAAIU,EAAqBhjC,EAAK,CAClCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAAMnhC,GAE3BsiC,EAAM,IAAIU,EAAqBhjC,EAAK,CAClCmiC,GAAe,OAAQniC,EAAK,EAAG,CAAEmC,UAAU,MAE7Co+B,EAAO+B,EAAI7jC,OAAO4iC,GAAGF,MAAMnhC,EAAI,IAEjCqgC,EAAS,4BAA4B,KACnCC,EAAG,sCAAsC,KACvC,IAAIgC,EAAM,IAAIU,EAAqB,KAAM,CACvCb,GAAe,OAAQ,OAAQ,EAAG,CAAEhgC,UAAU,MAEhDo+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGC,KAC7Be,EAAM,IAAIU,EAAqB,KAAM,CACnCb,GAAe,OAAQ,OAAQ,EAAG,CAAEhgC,UAAU,MAEhDo+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGC,IAAI,IAEnClB,EAAS,kBAAkB,KACzBC,EAAG,uBAAuB,KACxB,MAAMgC,EAAM,IAAIU,EAAqB,KAAM,CACzCb,GAAe,OAAQ,IAAK,EAAG,CAAEhgC,UAAU,MAE7Co+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGE,KAAK,IAEpClB,EAAG,oBAAoB,KACrB,IAAIgC,EAAM,IAAIU,EAAqB,KAAM,CACvCb,GAAe,OAAQ,KAAM,EAAG,CAAEhgC,UAAU,MAE9Co+B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGE,MAC7Bc,EAAM,IAAIU,EAAqB,KAAM,CACnCb,GAAe,OAAQ,KAAM,EAAG,CAAEhgC,UAAU,MAE9C2gC,QAAQC,KAAKT,GACb/B,EAAO+B,EAAI3hC,YAAY0gC,GAAGC,GAAGE,KAAK,GAClC,GACF,GACF,IAGJlB,EAAG,4BAA4B,KAG7B,IAAIgC,EAAM,IAAIU,EAFC,KAGfzC,EAAO+B,EAAItiC,KAAKqhC,GAAGF,MAHJ,KAKfmB,EAAM,IAAIU,EAEVzC,EAAO+B,EAAItiC,KAAKqhC,GAAGF,MACjBthC,EAAiCI,mBAClC,GACD,GACF,ECpgBG,MACMwB,GAAU,CACrBy+B,YAAa,8CAGTiC,GAAiB,CACrBxgC,EACAU,EACAD,EACAggC,EAAc,CAAE,IAGhB,IAAIlnB,KAAKC,eAAe,CACtBvK,KAAM,QAAQjP,KAAQmP,QAAQC,MAAMouB,aACpCx9B,OACAO,OAAaZ,OAAAwmB,OAAAxmB,OAAAwmB,OAAA,CAAA,EAAAsa,GAAa,CAAA//B,SAAQD,SAAU,CAAE3D,MAAO2D,OAGzD,IAAe6gC,GAAA,EAAG5C,WAAUC,KAAIC,aAC9BF,EAAS,mCAAmC,KAC1CC,EAAG,0BAA0B,KAC3B,MAAMgC,EAAM,IAAIE,EACVU,EAAO,IAAIxf,GAA0B4e,GAAK,GAChD/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMzd,GAA0BE,aAAa,IAEpE0c,EAAG,2BAA2B,KAC5B,MAAMgC,EAAM,IAAIziC,EAAiC,YAC3CqjC,EAAO,IAAIxf,GAA0B4e,GAC3C/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMzd,GAA0BE,aAAa,IAEpE0c,EAAG,+BAA+B,KAChC,MAAM4C,EAAO,IAAIxf,GACjB6c,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMzd,GAA0BE,aAAa,GAClE,IAGJyc,EAAS,+CAA+C,KACtDC,EAAG,mBAAmB,KACpB,IAAIgC,EAAM,IAAIE,EACVU,EAAO,IAAIxf,GAA0B4e,GACzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMzd,GAA0BE,cAErD0e,EAAM,IAAIE,OAAiBxd,EAAW,CACpCmd,GAAe,QAAS,IAAK,EAAG,CAAExgC,KAAM,YAAaa,UAAU,IAC/D2/B,GAAe,QAAS,IAAK,EAAG,CAAExgC,KAAM,QAASa,UAAU,IAC3D2/B,GAAe,QAAS,IAAK,EAAG,CAAExgC,KAAM,QAASa,UAAU,MAE7D0gC,EAAO,IAAIxf,GAA0B4e,GACrC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMzd,GAA0BE,cAErD2c,EAAO2C,EAAK5e,WAAW+c,GAAGF,MACxBzd,GAA0BE,aAAe,GAG3C2c,EAAO2C,EAAK3e,UAAU8c,GAAGF,MACvBzd,GAA0BE,aAAe,EAC1C,IAEH0c,EAAG,yBAAyB,KAC1B,MAAMgC,EAAM,IAAIE,OAAiBxd,EAAW,CAC1Cmd,GAAe,QAAS,IAAK,EAAG,CAAExgC,KAAM,YAAaa,UAAU,IAC/D2/B,GAAe,QAAS,IAAK,EAAG,CAAExgC,KAAM,QAASa,UAAU,IAC3D2/B,GAAe,QAAS,IAAK,EAAG,CAAExgC,KAAM,QAASa,UAAU,MAEvD0gC,EAAO,IAAIxf,GAA0B4e,GAC3C/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAA+C,IAAzCzd,GAA0BE,cAErD2c,EAAO2C,EAAK5e,WAAW+c,GAAGF,MACkB,IAAzCzd,GAA0BE,aAAuB,GAGpD2c,EAAO2C,EAAK3e,UAAU8c,GAAGF,MACmB,IAAzCzd,GAA0BE,aAAuB,EACnD,IAEH0c,EAAG,yBAAyB,KAC1B,MAAMgC,EAAM,IAAIE,OAAiBxd,EAAW,CAC1Cmd,GAAe,QAAS,IAAK,EAAG,CAAExgC,KAAM,YAAaa,UAAU,IAC/D2/B,GAAe,QAAS,IAAK,EAAG,CAAExgC,KAAM,QAASa,UAAU,IAC3D2/B,GAAe,QAAS,IAAK,EAAG,CAAExgC,KAAM,QAASa,UAAU,MAEvD0gC,EAAO,IAAIxf,GAA0B4e,GAC3C/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAA+C,GAAzCzd,GAA0BE,cAErD2c,EAAO2C,EAAK5e,WAAW+c,GAAGF,MACkB,GAAzCzd,GAA0BE,aAAsB,GAGnD2c,EAAO2C,EAAK3e,UAAU8c,GAAGF,MACmB,GAAzCzd,GAA0BE,aAAsB,EAClD,IAEH0c,EAAG,mDAAmD,KACpD,IAAIgC,EAAM,IAAIE,OAAiBxd,EAAW,CACxCmd,GAAe,OAAQK,EAAiBzgC,oBAAsB,EAAG,EAAG,CAClEI,UAAU,MAGV+gC,EAAO,IAAIxf,GAA0B4e,GACzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMzd,GAA0BE,cAErD2c,EAAO2C,EAAK5e,WAAW+c,GAAGF,MACxBzd,GAA0BE,aAAe,GAG3C2c,EAAO2C,EAAK3e,UAAU8c,GAAGF,MACvBzd,GAA0BE,aAAe,GAG3C0e,EAAM,IAAIE,OAAiBxd,EAAW,CACpCmd,GAAe,OAAQK,EAAiBzgC,oBAAqB,EAAG,CAC9DI,UAAU,MAGd+gC,EAAO,IAAIxf,GAA0B4e,GACrC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMzd,GAA0BE,aAAe,IAEpE2c,EAAO2C,EAAK5e,WAAW+c,GAAGF,OACvBzd,GAA0BE,aAAe,IAAM,GAGlD2c,EAAO2C,EAAK3e,UAAU8c,GAAGF,OACtBzd,GAA0BE,aAAe,IAAM,EACjD,GACD,IAEJyc,EAAS,kDAAkD,KACzDC,EAAG,mBAAmB,KACpB,MAAM6C,EAAezf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIM,EACVM,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,GAE/Bf,EAAM,IAAIM,OAAoB5d,EAAW,CACvCmd,GAAe,OAAQ,IAAK,KAE9Be,EAAO,IAAIxf,GAA0B4e,GAErC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,uCAAuC,KACxC,MAAM6C,EAAezf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAElCb,EAAM,IAAIM,OAAoB5d,EAAW,CAC7Cmd,GACE,OACsD,KAAtDtiC,EAAiCI,mBACjC,EACA,CAAEkC,UAAU,MAGV+gC,EAAO,IAAIxf,GAA0B4e,GAE3C/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,qCAAqC,KACtC,MAAM6C,EAAezf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAElCb,EAAM,IAAIM,OAAoB5d,EAAW,CAC7Cmd,GACE,OACsD,IAAtDtiC,EAAiCI,mBACjC,EACA,CAAEkC,UAAU,MAGV+gC,EAAO,IAAIxf,GAA0B4e,GAE3C/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,sCAAsC,KACvC,MAAM6C,EAAwD,IAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIM,OAAoB5d,EAAW,CAC3Cmd,GAAe,OAA8D,KAAtDtiC,EAAiCI,mBAA2B,EAAG,CAACkC,UAAU,MAE/F+gC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,sCAAsC,KACvC,MAAM6C,EAAwD,IAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIM,OAAoB5d,EAAW,CAC3Cmd,GAAe,OAA8D,KAAtDtiC,EAAiCI,mBAA2B,EAAG,CAACkC,UAAU,MAE/F+gC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,uCAAuC,KACxC,MAAM6C,EAAwD,GAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIM,OAAoB5d,EAAW,CAC3Cmd,GAAe,OAA8D,MAAtDtiC,EAAiCI,mBAA4B,EAAG,CAACkC,UAAU,MAEhG+gC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,oCAAoC,KACrC,MAAM6C,EAAwD,GAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIM,OAAoB5d,EAAW,CAC3Cmd,GAAe,OAA8D,GAAtDtiC,EAAiCI,mBAAyB,EAAG,CAACkC,UAAU,MAE7F+gC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,sCAAsC,KACvC,MAAM6C,EAAwD,IAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIM,OAAoB5d,EAAW,CAC3Cmd,GAAe,OAA8D,KAAtDtiC,EAAiCI,mBAA2B,EAAG,CAACkC,UAAU,MAE/F+gC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,qCAAqC,KACtC,MAAM6C,EAAwD,IAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIM,OAAoB5d,EAAW,CAC3Cmd,GAAe,OAAQtiC,EAAiCI,mBAAoB,EAAG,CAACkC,UAAU,MAE5F,MAAM+gC,EAAO,IAAIxf,GAA0B4e,GAE3C/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,sCAAsC,KAKvC,IAAIgC,EAAM,IAAIM,OAAoB5d,EAAW,CAC3Cmd,GAAe,OAAQtiC,EAAiCI,mBAAoB,MAAO,CAACkC,UAAU,MAE5F+gC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MATA,GAUrBZ,EAAO2C,EAAK5e,WAAW+c,GAAGF,MATA,GAU1BZ,EAAO2C,EAAK3e,UAAU8c,GAAGF,MATA,EASuB,GAChD,IAEJd,EAAS,kDAAkD,KACzDC,EAAG,oCAAoC,KACrC,MAAM6C,EAAezf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAElCb,EAAM,IAAIO,EACVK,EAAO,IAAIxf,GAA0B4e,GAE3C/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,uCAAuC,KACxC,MAAM6C,EAAezf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIO,OAAoB7d,EAAW,CAC3Cmd,GAAe,OAA8D,KAAtDtiC,EAAiCI,mBAA2B,KAEjFijC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,qCAAqC,KACtC,MAAM6C,EAAezf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIO,OAAoB7d,EAAW,CAC3Cmd,GAAe,OAA8D,IAAtDtiC,EAAiCI,mBAA0B,KAEhFijC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,sCAAsC,KACvC,MAAM6C,EAAwD,IAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIO,OAAoB7d,EAAW,CAC3Cmd,GAAe,OAA8D,KAAtDtiC,EAAiCI,mBAA2B,KAErF,MAAMijC,EAAO,IAAIxf,GAA0B4e,GAE3C/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,sCAAsC,KACvC,MAAM6C,EAAwD,IAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIO,OAAoB7d,EAAW,CAC3Cmd,GAAe,OAA8D,KAAtDtiC,EAAiCI,mBAA2B,KAErF,MAAMijC,EAAO,IAAIxf,GAA0B4e,GAE3C/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,uCAAuC,KACxC,MAAM6C,EAAwD,GAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIO,OAAoB7d,EAAW,CAC3Cmd,GAAe,OAA8D,MAAtDtiC,EAAiCI,mBAA4B,KAElFijC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,oCAAoC,KACrC,MAAM6C,EAAwD,GAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIO,OAAoB7d,EAAW,CAC3Cmd,GAAe,OAA8D,GAAtDtiC,EAAiCI,mBAAyB,KAE/EijC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,sCAAsC,KACvC,MAAM6C,EAAwD,IAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIO,OAAoB7d,EAAW,CAC3Cmd,GAAe,OAA8D,KAAtDtiC,EAAiCI,mBAA2B,KAEjFijC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,qCAAqC,KACtC,MAAM6C,EAAwD,IAAzCzf,GAA0BE,aACzCwf,EAAoBD,EAAe,EACnCE,EAAmBF,EAAe,EAExC,IAAIb,EAAM,IAAIO,OAAoB7d,EAAW,CAC3Cmd,GAAe,OAAQtiC,EAAiCI,mBAAoB,KAE1EijC,EAAO,IAAIxf,GAA0B4e,GAEzC/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MAAMgC,GAC3B5C,EAAO2C,EAAK5e,WAAW+c,GAAGF,MAAMiC,GAChC7C,EAAO2C,EAAK3e,UAAU8c,GAAGF,MAAMkC,EAAiB,IAElD/C,EAAG,sCAAsC,KAKvC,IAAIgC,EAAM,IAAIO,OAAoB7d,EAAW,CAC3Cmd,GAAe,OAAQtiC,EAAiCI,mBAAoB,SAE9E,MAAMijC,EAAO,IAAIxf,GAA0B4e,GAE3C/B,EAAO2C,EAAKjgB,MAAMoe,GAAGF,MATA,GAUrBZ,EAAO2C,EAAK5e,WAAW+c,GAAGF,MATA,GAU1BZ,EAAO2C,EAAK3e,UAAU8c,GAAGF,MATA,EASuB,GAChD,GACF,EC5aG,MACM1/B,GAAU,CACrBy+B,YAAa,oDAGf,IAAeoD,GAAA,EAAGjD,WAAUC,KAAIC,aAE9B,MAAMgD,EAAcnnB,MAAMonB,KAAK,CAAE90B,OAAQ,KAAM,CAAC+0B,EAAK9b,IAAQA,IACvD+b,EAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAChD/I,EAAS,CACbnW,GAA4B6B,sBAC5B7B,GAA4BiC,oBAC5BjC,GAA4B8B,aAC5B9B,GAA4B+B,aAC5B/B,GAA4BgC,YAExBmd,EAAY,CAACC,EAAkBpxB,IACnCgS,GAA4B4B,eAAeuU,EAAOiJ,GAAWpxB,GACzDqxB,EAAkBC,GACtBxiC,OAAOyiC,YACLL,EAAUzxB,KAAK+xB,GAAa,CAACA,EAAU,CAAEvlC,MAAOqlC,EAAQ34B,MAAO,OAG7D84B,EAAiB,CACrBzxB,EACAwxB,EACAvhB,EACAnV,KAEA,MAAM42B,EAAcL,EAAerxB,GAC7B2xB,EAAY,IAAI3f,GAA4B0f,GAClD,OAAO5D,EAAG,GAAG9tB,KAAS,KACpB+tB,EAAO4D,EAAUH,GAAUvhB,IAAM4e,GAAGF,MAAMwC,EAAUr2B,EAAOkF,GAAO,GAClE,EAEE4xB,EAA8B,CAClC5xB,EACAwxB,EACAvhB,EACAnV,EACA+2B,KAEA,MAAMH,EAAcL,EAAerxB,GAC7B2xB,EAAY,IAAI3f,GAA4B0f,GAClD,OAAO5D,EAAG,GAAG9tB,KAAS,KAEpB+tB,EAAO4D,EAAUH,GAAUvhB,IAAM4e,GAAGF,MAClCwC,EAAUr2B,EAAOkF,GAAS6xB,EAC3B,GACD,EASJhE,EAAS,gCAAgC,KAAMiE,OANrB1zB,EAMsC,YAL9D8yB,EAAUzxB,KAAK+xB,GACb3D,EAAS,GAAGzvB,MAASozB,KAAY,IAC/BT,EAAYtxB,KAAKO,GAAUyxB,EAAezxB,EAAOwxB,EAAU,MAAO,SAH/C,IAACpzB,CAMkD,IAE5EyvB,EAAS,sBAAsB,KAC7BA,EAAS,cAAc,IACrBkD,EAAYtxB,KAAKO,GAAUyxB,EAAezxB,EAAO,MAAO,KAAM,MAAI,IAGtE6tB,EAAS,0BAA0B,KACjCA,EAAS,YAAY,IACnBkD,EAAYtxB,KAAKO,GAAUyxB,EAAezxB,EAAO,MAAO,WAAY,OACtE6tB,EAAS,oBAAoB,IAC3BkD,EAAYtxB,KAAKO,GAAUyxB,EAAezxB,EAAO,MAAO,SAAU,MAAI,IAG1E6tB,EAAS,uBAAuB,KAC9BA,EAAS,cAAc,IACrBkD,EAAYtxB,KAAKO,GAAUyxB,EAAezxB,EAAO,MAAO,OAAQ,MAAI,IAGxE6tB,EAAS,sBAAsB,KAC7BA,EAAS,gBAAgB,IACvBkD,EAAYtxB,KAAKO,GAAUyxB,EAAezxB,EAAO,MAAO,MAAO,OACjE6tB,EAAS,WAAW,IAClBkD,EAAYtxB,KAAKO,GACf4xB,EAA4B5xB,EAAO,MAAO,SAAU,EAAG,OAE3D6tB,EAAS,uBAAuB,IAC9BkD,EAAYtxB,KAAKO,GACf4xB,EAA4B5xB,EAAO,MAAO,UAAW,EAAG,MACxD,GACJ,ECxFG,MACM/Q,GAAU,CACrBy+B,YAAa,4CAGTqE,GAAkB,CAACznB,EAAa0nB,IAEpC,IAAItpB,KAAKC,eAAe,CACtBvK,KAAM,cAAcE,QAAQC,MAAMouB,aAClCx9B,KAAM,QACNO,OAAaZ,OAAAwmB,OAAAxmB,OAAAwmB,OAAA,CAAA,EAAA0c,GAAc,CAAA1nB,UAgBzB2nB,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhD,IAAeC,GAAA,EAAGrE,WAAUC,KAAIC,aAE9BF,EAAS,gBAAgB,KACvBC,EAAG,sEAAsE,KACvE,MAAMngB,EAnBgB,EAACqkB,KAAsBG,IACjDA,EAAO3iC,QACL,CAACotB,EAAawV,EAAiBjd,IAAgB,IAC1CyH,KACAhT,MAAMonB,KAAK,CAAE90B,OAAQk2B,IAAW,IACjCL,GAAgB5c,EAAM,EAAG6c,OAG7B,IAWiBK,CAAoB,MAAOJ,IACpCK,EAAY,IAAIpe,GAA4B,CAAE,EAAEvG,GACtDskB,GAAetvB,SAASoT,IACtBgY,EAAOuE,EAAU1kB,UAAUmI,GAAI7Z,QAAQ2yB,GAAGF,MAAM5Y,EAAG,GACnD,GACF,IAGJ8X,EAAS,eAAe,KACtBA,EAAS,iDAAiD,KACxDC,EAAG,2BAA2B,KAC5B,MAAMngB,EAAS,CAACokB,GAAgB,IAC1BO,EAAY,IAAIpe,GACpB,CAAE,EAAG,CAAE1mB,IAAK,IACZmgB,GAEFogB,EAAOuE,EAAUzkB,MAAM,GAAGmI,MAAM6Y,GAAGF,MAAM,GACzCZ,EAAOuE,EAAUzkB,MAAM,GAAGrgB,KAAKqhC,GAAGF,MAAM,EAAE,IAG5Cb,EAAG,kCAAkC,KACnC,MAAMngB,EAAS,CAACokB,GAAgB,EAAG,CAAEtsB,UAAW,EAAGkQ,KAAM,KACnD2c,EAAY,IAAIpe,GACpB,CAAE,EAAG,CAAE1mB,IAAK,IACZmgB,GAEFogB,EAAOuE,EAAUzkB,MAAM,GAAGmI,MAAM6Y,GAAGF,MAAM,GACzCZ,EAAOuE,EAAUzkB,MAAM,GAAGrgB,KAAKqhC,GAAGF,MAAM,EAAE,IAG5Cb,EAAG,iCAAiC,KAClC,MAAMngB,EAAS,CAACokB,GAAgB,EAAG,CAAEtsB,UAAW,EAAGkQ,KAAM,KACnD2c,EAAY,IAAIpe,GACpB,CAAE,EAAG,CAAE1mB,IAAK,IACZmgB,GAEFogB,EAAOuE,EAAUzkB,MAAM,GAAGmI,MAAM6Y,GAAGF,MAAM,GACzCZ,EAAOuE,EAAUzkB,MAAM,GAAGrgB,KAAKqhC,GAAGF,MAAM,EAAE,GAC1C,GACF,IAGJd,EAAS,6BAA6B,KACpCC,EAAG,gDAAgD,KACjD,MAAMwE,EAAY,IAAIpe,GAA4B,CAAEnmB,SAAS,GAAQ,IACrEggC,EAAOuE,EAAUvkC,SAAS8gC,GAAGC,GAAGC,IAAI,IAEtCjB,EAAG,oDAAoD,KACrD,MAAMwE,EAAY,IAAIpe,GAA4B,CAAEnmB,SAAS,GAAS,IACtEggC,EAAOuE,EAAUvkC,SAAS8gC,GAAGC,GAAGE,KAAK,IAEvClB,EAAG,2DAA2D,KAC5D,MAAMwE,EAAY,IAAIpe,GAA4B,CAAEnmB,SAAS,GAAQ,IACrEggC,EAAOuE,EAAUvkC,SAAS8gC,GAAGC,GAAGC,KAChCuD,EAAUvkC,SAAU,EACpBggC,EAAOuE,EAAUvkC,SAAS8gC,GAAGC,GAAGE,KAAK,GACrC,GACF,ECnFG,MAAMjnB,GAAM,8BACN9Y,GAAU,CAAEy+B,YAAa,mCAEhCC,GAAkB,IAAMpB,GAAmB,UAAW,CAAE,EAAExkB,IAEhE,IAAAwqB,GAAe,EACb1E,WACAC,KACAC,SACA9H,QACAuM,YACAxE,aAEA,MAAMC,EAAY,IAAIrW,GAChBsW,EAAqB96B,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,eACvD86B,EAAoB/6B,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,cAE5D4yB,GAAM,KACJ7yB,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,cAAe66B,GACjD96B,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,aAAc86B,GAChDf,GAAmBrlB,GAAI,IAIzB8lB,EAAS,wBAAwB,KAC/B2E,GAAU,KACRpF,GAAmBrlB,GAAI,IAGzB+lB,EAAG,sBAAsB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAClC,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,eAAAA,EAAO5L,OAAOqE,QAAQk7B,GAAGzc,SACjC,MAEDsb,EAAG,mBAAmB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC/B,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,eAAAA,EAAO5L,OAAO6D,aAAa86B,IAAI7b,UACtCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYhG,SAAS8gC,IAAI7b,UAC9Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYxF,SAASsgC,IAAI7b,UAC9Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYvF,KAAKqgC,IAAI7b,UAC1Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYpF,YAAYkgC,IAAI7b,UACjDub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYnF,OAAOigC,IAAI7b,UAC5Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYtH,OAAOoiC,IAAI7b,UAC5Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAY/F,KAAK6gC,IAAI7b,UAC1Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYk/B,kBAAkBpE,IAAI7b,UACvDub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYm/B,qBAAqBrE,IAAI7b,UAC1Dub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO6D,YAAYo/B,oBAAoBtE,IAAI7b,SAC1D,MAEDsb,EAAG,iBAAiB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC7B,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,eAAAA,EAAO5L,OAAO8mB,UAAU6X,IAAI7b,UACnCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO8mB,SAAS/F,MAAM4d,IAAI7b,SACzC,MAEDsb,EAAG,WAAW,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACvB,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,eAAAA,EAAO5L,OAAOyL,IAAIkzB,IAAI7b,UAC7Bub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOyL,GAAGlP,OAAOoiC,IAAI7b,UACnCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOyL,GAAG8U,KAAKoe,IAAI7b,SAClC,MAEDsb,EAAG,YAAY,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACxB,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,eAAAA,EAAO5L,OAAO+L,KAAK4yB,IAAI7b,UAC9Bub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+L,IAAIxP,OAAOoiC,IAAI7b,UACpCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO+L,IAAIwU,KAAKoe,IAAI7b,SACnC,MAEDqb,EAAS,cAAc,KAErB,MAAMS,EAAc,IAAI5rB,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAEtDorB,EAAG,cAAc,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC1B,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,eAAAA,EAAO5L,OAAOie,QAAQ0gB,IAAI7b,UACjCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOie,OAAO5f,SAASsgC,IAAI7b,UACzCub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOie,OAAOC,WAAWygB,IAAI7b,UAC3Cub,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOie,OAAOE,OAAOwgB,IAAI7b,SACxC,MAED8b,EAAY3rB,SAAS2H,IACnBwjB,EAAG,mBAAmBxjB,KAAO,IAAW9e,OAAA,OAAA,OAAA,GAAA,YACtC,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,eAAAA,EAAO5L,OAAOie,OAAOE,MAAMvD,IAAM+jB,IAAI7b,UAC5Cub,EAAOj/B,OAAOomB,KAAK5Z,aAAK,EAALA,EAAO5L,OAAOie,OAAOE,MAAMvD,KAAOikB,QAAQ,QAC7DR,EAAOj/B,OAAOomB,KAAK5Z,aAAK,EAALA,EAAO5L,OAAOie,OAAOE,MAAMvD,KAAOikB,QAAQ,MAC9D,KAAC,GACF,GACF,IAGJV,EAAS,kBAAkB,KACzBG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACVmiC,IACP,MAEkB,CAAC,SAAU,aAAc,QAAS,aAC1ChrB,SAAS0C,IAClByoB,EAAG,OAAOzoB,KAAS,IAAW7Z,OAAA,OAAA,OAAA,GAAA,YAC5B,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO2V,IAAQgpB,IAAI7b,SAClC,KAAC,IAGoB,CACtB,CAAEnN,MAAO,KAAMmpB,UAAW,CAAC,KAAM,QAAS,QAC1C,CAAEnpB,MAAO,WAAYmpB,UAAW,CAAC,UAAW,UAAW,UAEzC7rB,SAAQ,EAAG0C,QAAOmpB,gBAChCA,EAAU7rB,SAAS8rB,IACjBX,EAAG,GAAGzoB,eAAmBopB,cAAqB,IAAWjjC,OAAA,OAAA,OAAA,GAAA,YACvD,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO2V,IAAQgpB,IAAI7b,UACjCub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO2V,GAAOopB,IAAWJ,IAAI7b,SAC5C,KAAC,GACF,IAG0B,CAC5B,CACEnN,MAAO,QACPmpB,UAAW,CACT,CAAEC,SAAU,SAAUC,YAAa,CAAC,UACpC,CAAED,SAAU,QAASC,YAAa,CAAC,UACnC,CAAED,SAAU,YAAaC,YAAa,CAAC,UACvC,CAAED,SAAU,QAASC,YAAa,CAAC,UACnC,CAAED,SAAU,OAAQC,YAAa,CAAC,aAIlB/rB,SAAQ,EAAG0C,QAAOmpB,gBACtCA,EAAU7rB,SAAQ,EAAG8rB,WAAUC,kBAC7BZ,EAAG,GAAGzoB,eAAmBopB,yBAAgCC,WAAqB,IAAWljC,OAAA,OAAA,OAAA,GAAA,YACvF,MAAM8P,QAAcyxB,GAAgBhlB,IACpCgmB,EAAOzyB,aAAK,EAALA,EAAO5L,OAAO2V,IAAQgpB,IAAI7b,UACjCub,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO2V,GAAOopB,IAAWJ,IAAI7b,UAC3Cub,EAAOzyB,eAAAA,EAAO5L,OAAO2V,GAAOopB,GAAUC,IAAcL,IAAI7b,SACzD,KAAC,GACF,IAGJyT,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,WAAW,KAClBC,EAAG,+BAA+B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC3C,MAAMojC,QAAkBrC,GACtB,UACA,CACE78B,OAAQ,CACNynB,MAAO,CACL/hB,OAAQ,CAAEnJ,MAAO,GACjBgJ,MAAO,CAAEhJ,MAAO,GAChBkJ,UAAW,CAAElJ,MAAO,GACpBoJ,MAAO,CAAEpJ,MAAO,GAChBiJ,KAAM,CAAEjJ,MAAO,MAIrB8b,IAEFgmB,EAAOa,aAAS,EAATA,EAAWl/B,OAAOiU,OAAOkrB,GAAGC,GAAGC,IACvC,MAEDjB,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChD,MAAMojC,QAAkBrC,GACtB,UACA,CACE78B,OAAQ,CACNynB,MAAO,CACL/hB,OAAQ,CAAEnJ,MAAO,IACjBgJ,MAAO,CAAEhJ,MAAO,GAChBkJ,UAAW,CAAElJ,MAAO,GACpBoJ,MAAO,CAAEpJ,MAAO,GAChBiJ,KAAM,CAAEjJ,MAAO,MAIrB8b,IAEFgmB,EAAOa,aAAS,EAATA,EAAWl/B,OAAOiU,OAAOkrB,GAAGC,GAAGE,KACvC,KAAC,IAGJnB,EAAS,gBAAgB,KACvBC,EAAG,0BAA0B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACtC,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO8d,WAAWtR,QAAQyyB,MAAM,SACxCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CAAEvS,KAAM,YAAaiP,KAAM,oBAE7B2vB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,kBAE5C,MAAM3qB,EAAS1I,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG/U,GACxC06B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO8d,WAAWtR,QAAQyyB,MAAM,GAE9CZ,EAAOzyB,eAAAA,EAAO5L,OAAO8d,WAAW,GAAGhU,KAAKm1B,MAAM3qB,GAC9C1I,SAAAA,EAAO6xB,QACR,MAEDlH,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,eAAe,KACtBC,EAAG,8BAA8B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC1C,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO6d,UAAUrR,QAAQyyB,MAAM,SACvCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CAAEvS,KAAM,OAAQiP,KAAM,gBAAiB1O,OAAQ,CAAEC,UAAU,MAE7Do+B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,iBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOC,UAAUs/B,GAAGF,KAEpD,MAAM/qB,EAAS1I,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG/U,GACxC06B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO6d,UAAUrR,QAAQyyB,MAAM,GAE7CZ,EAAOzyB,eAAAA,EAAO5L,OAAO6d,UAAU,GAAG/T,KAAKm1B,MAAM3qB,GAC7C1I,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,sDAAsD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAClE,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO6d,UAAUrR,QAAQyyB,MAAM,SACvCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CAAEvS,KAAM,YAAaiP,KAAM,oBAE7B,MAAM8K,EAAY5N,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,wBACjC1xB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAE3C,CACEvS,KAAM,OACNiP,KAAM,gBACN1O,OAAQ,CAAEC,UAAU,EAAMoV,YAAamE,aAAS,EAATA,EAAW7V,OAGtD06B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,kBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,iBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOC,UAAUs/B,GAAGF,KAEpDhB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOqV,aAAa4pB,MAAMzlB,aAAS,EAATA,EAAW7V,IACrE06B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO6d,UAAUrR,QAAQyyB,MAAM,GAC7CrzB,SAAAA,EAAO6xB,QACR,MAEDlH,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,WAAW,KAClBC,EAAG,0CAA0C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACtD,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOhC,MAAMwO,QAAQyyB,MAAM,SACnCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,OACNiP,KAAM,aAER,CACEjP,KAAM,OACNiP,KAAM,gBACN1O,OAAQ,CAAEC,UAAU,EAAMC,SAAU,CAAE3D,MAAO,GAAKwV,KAAM,MAG5DssB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,aAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,iBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOC,UAAUs/B,GAAGF,KACpDhB,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOhC,MAAMwO,QAAQyyB,MAAM,GACzCZ,EAAOzyB,eAAAA,EAAO5L,OAAOhC,MAAM,GAAG0Q,MAAMuwB,MAAM,aAC1CrzB,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,sDAAsD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAClE,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOhC,MAAMwO,QAAQyyB,MAAM,SACnCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,YACNiP,KAAM,oBAGV,MAAM8K,EAAY5N,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,wBACjC1xB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAE3C,CACEvS,KAAM,OACNiP,KAAM,yBACN1O,OAAQ,CAAEqV,YAAamE,aAAA,EAAAA,EAAW7V,KAEpC,CACElE,KAAM,OACNiP,KAAM,eAGV2vB,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,kBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,0BAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,aAC5CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOhC,MAAMwO,QAAQyyB,MAAM,GACzCZ,EAAOzyB,eAAAA,EAAO5L,OAAOhC,MAAM,GAAG0Q,MAAMuwB,MAAM,aAC1CrzB,SAAAA,EAAO6xB,QACR,KAAC,IAGc,CAChB,CAAEh+B,KAAM,SAAU+/B,OAAQ,WAC1B,CAAE//B,KAAM,UAAW+/B,OAAQ,aAC3B,CAAE//B,KAAM,QAAS+/B,OAAQ,UAGjBvsB,SAAQ,EAAGxT,OAAM+/B,aACzBrB,EAAS,GAAGqB,OAAY,KACtBpB,EAAG,eAAeoB,KAAU,IAAW1jC,OAAA,OAAA,OAAA,GAAA,YACrC,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOw/B,GAAQhzB,QAAQyyB,MAAM,SACrCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CAAEvS,OAAMiP,KAAM,QAAQjP,OAExB4+B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,QAAQx/B,KAEpD,MAAM6U,EAAS1I,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG/U,GACxC06B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOw/B,GAAQhzB,QAAQyyB,MAAM,GAE3CZ,EAAOzyB,eAAAA,EAAO5L,OAAOw/B,GAAQ,GAAG11B,KAAKm1B,MAAM3qB,GAC3C1I,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,eAAeoB,8BAAmC,IAAW1jC,OAAA,OAAA,OAAA,GAAA,YAC9D,GAAe,cAAX0jC,EAAwB,OAC5B,MAAM5zB,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOw/B,GAAQhzB,QAAQyyB,MAAM,SACrCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,YACNiP,KAAM,oBAGV,MAAM8K,EAAY5N,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,wBACjC1xB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAE3C,CACEvS,OACAiP,KAAM,QAAQjP,iBACdO,OAAQ,CAAEqV,YAAamE,aAAA,EAAAA,EAAW7V,KAEpC,CACElE,OACAiP,KAAM,QAAQjP,OAGlB4+B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,kBAC5CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MACpC,QAAQx/B,kBAEV4+B,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,QAAQx/B,KAEpD,MAAM6U,EAAS1I,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG/U,GACxC06B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOw/B,GAAQhzB,QAAQyyB,MAAM,GAE3CZ,EAAOzyB,eAAAA,EAAO5L,OAAOw/B,GAAQ,GAAG11B,KAAKm1B,MAAM3qB,GAC3C1I,SAAAA,EAAO6xB,QACR,KAAC,IAGJlH,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,oBAAoB,KAC3BC,EAAG,wEAAwE,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACpF,MAAM8P,QAAcqyB,WACdryB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAE3C,CACEvS,KAAM,UACNiP,KAAM,gBAER,CACEjP,KAAM,SACNiP,KAAM,iBAGV2vB,EAAOj/B,OAAOomB,KAAK5Z,aAAK,EAALA,EAAO5L,OAAOqoB,gBAAgB7b,QAAQyyB,MAAM,GAC/DZ,EAAOj/B,OAAOomB,KAAK5Z,aAAA,EAAAA,EAAO5L,OAAOqoB,iBAAiBwW,QAAQ,eAC1DR,EAAOzyB,eAAAA,EAAO5L,OAAOqoB,eAAe6a,YAAY12B,QAAQyyB,MAAM,GAC9DZ,EAAOzyB,eAAAA,EAAO5L,OAAOqoB,eAAe6a,YAAY,GAAGx0B,MAAMuwB,MACvD,eAEFZ,EAAOzyB,eAAAA,EAAO5L,OAAOqoB,eAAe6a,YAAY,GAAGx0B,MAAMuwB,MACvD,eAEH,MAEDb,EAAG,mEAAmE,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC/E,MAAM8P,QAAcqyB,WACdryB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAE3C,CACEvS,KAAM,UACNiP,KAAM,qBACN1O,OAAQ,CAAEsoB,QAAS,UAErB,CACE7oB,KAAM,SACNiP,KAAM,oBACN1O,OAAQ,CAAEsoB,QAAS,UAErB,CACE7oB,KAAM,UACNiP,KAAM,gBAER,CACEjP,KAAM,SACNiP,KAAM,iBAGV2vB,EAAOj/B,OAAOomB,KAAK5Z,aAAK,EAALA,EAAO5L,OAAOqoB,gBAAgB7b,QAAQyyB,MAAM,GAC/DZ,EAAOj/B,OAAOomB,KAAK5Z,aAAA,EAAAA,EAAO5L,OAAOqoB,iBAAiBwW,QAAQ,eAC1DR,EAAOj/B,OAAOomB,KAAK5Z,aAAA,EAAAA,EAAO5L,OAAOqoB,iBAAiBwW,QAAQ,SAC1DR,EAAOzyB,eAAAA,EAAO5L,OAAOqoB,eAAe6a,YAAY12B,QAAQyyB,MAAM,GAC9DZ,EAAOzyB,eAAAA,EAAO5L,OAAOqoB,eAAe6a,YAAY,GAAGx0B,MAAMuwB,MACvD,gBAEFZ,EAAOzyB,eAAAA,EAAO5L,OAAOqoB,eAAe6a,YAAY,GAAGx0B,MAAMuwB,MACvD,eAEFZ,EAAOzyB,eAAAA,EAAO5L,OAAOqoB,eAAejiB,MAAMoG,QAAQyyB,MAAM,GACxDZ,EAAOzyB,eAAAA,EAAO5L,OAAOqoB,eAAejiB,MAAM,GAAGsI,MAAMuwB,MACjD,qBAEFZ,EAAOzyB,eAAAA,EAAO5L,OAAOqoB,eAAejiB,MAAM,GAAGsI,MAAMuwB,MACjD,qBAEH,KAAC,IAGJd,EAAS,YAAY,KACnBC,EAAG,+BAA+B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC3C,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,eAAAA,EAAO5L,OAAOgoB,QAAQuX,GAAGD,MAChC1zB,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,sDAAsD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAClE,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,SACrCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,SACNiP,KAAM,cACN1O,OAAQ,CAAE+G,MAAM,MAGpBs3B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,eAC5CZ,EAAOzyB,eAAAA,EAAO5L,OAAOgoB,QAAQuX,GAAGD,MAChC1zB,SAAAA,EAAO6xB,QACR,MAEDW,EAAG,4CAA4C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACxD,MAAM8P,QAAcqyB,KACpBI,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,SACrCrzB,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAC3C,CACEvS,KAAM,SACNiP,KAAM,cACN1O,OAAQ,CAAE+G,MAAM,MAGpBs3B,EAAOzyB,aAAA,EAAAA,EAAO5N,MAAM0a,SAASlM,QAAQyyB,MAAM,GAC3CZ,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGhK,MAAMuwB,MAAM,eAC5CZ,EAAOzyB,eAAAA,EAAO5L,OAAOgoB,QAAQuX,GAAGF,KAChCzzB,SAAAA,EAAO6xB,QACR,MAEDlH,GAAM,KACJmH,GAAmBrlB,GAAI,GACvB,IAGJ8lB,EAAS,UAAU,KACjBG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,aAAc,aAGvD,MAEDy6B,EAAG,wBAAwB,KACzBC,EAAOE,EAAUvqB,WAAWzX,OAAO0iC,MAAM,GACzCZ,EAAOE,EAAUvqB,WAAWuM,KAAK0e,MAAM,GACvCZ,EAAOE,EAAUl6B,OAAOG,IAAIga,MAAMygB,MAAM,GACxCZ,EAAOE,EAAU/f,MAAMygB,MAAM,EAAE,IAGjCb,EAAG,+CAA+C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC3DyiC,EAAUvqB,WAAWzX,MAAQ,GAC7B8hC,EAAOE,EAAU/f,MAAMygB,MAAM,IAC7BV,EAAUvqB,WAAWzX,MAAQ,EAC7B8hC,EAAOE,EAAUvqB,WAAWzX,OAAO0iC,MAAM,EAC1C,MAEDb,EAAG,6CAA6C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzDyiC,EAAUvqB,WAAWuM,IAAM,GAC3B8d,EAAOE,EAAU/f,MAAMygB,MAAM,IAC7BV,EAAUvqB,WAAWuM,IAAM,EAC3B8d,EAAOE,EAAUvqB,WAAWuM,KAAK0e,MAAM,EACxC,MAEDb,EAAG,2CAA2C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACvDyiC,EAAUl6B,OAAOG,IAAM,CAAEga,KAAM,GAC/B6f,EAAOE,EAAU/f,MAAMygB,MAAM,GAC7BV,EAAUl6B,OAAOG,IAAIga,KAAO,EAC5B6f,EAAOE,EAAUl6B,OAAOG,IAAIga,MAAMygB,MAAM,EACzC,KAAC,GACF,EC1gBG,MAAM5mB,GAAM,mBACN9Y,GAAU,CACrBy+B,YAAa,qBACbmF,aAAa,GAGTlF,GAAyBx+B,GAAgB3D,OAAA,OAAA,OAAA,GAAA,YAC7C,OAAAsxB,GAAS3iB,OAAO,CACdiE,KAAM,cAAc2J,KACpB5Y,YAGJ,IAAA2jC,GAAe,EACbjF,WACAC,KACAC,SACA9H,QACAuM,YACAxE,SACA+E,aAEAP,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,KACNwB,GAAmBrlB,IACnBslB,IACD,MAEDQ,EAAS,yBAAyB,KAEhCC,EAAG,aAAa,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzB,MAAM8P,QAAcqyB,GAAgB,aACpCI,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOyL,GAAGlP,OAAO0iC,MAAM,IACrCZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO+L,IAAIxP,OAAO0iC,MAAM,SAChCrzB,eAAAA,EAAO5L,OAAOmS,OAAO,CAAE1G,GAAI,CAAElP,MAAO,YACpC+/B,KACN+B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOyL,GAAGlP,OAAO0iC,MAAM,IACrCZ,EAAOzyB,eAAAA,EAAO5L,OAAO+L,IAAIxP,OAAO0iC,MAAM,EACvC,MAEDb,EAAG,aAAa,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzB,MAAM8P,QAAcqyB,GAAgB,aACpCI,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOyL,GAAGlP,OAAO0iC,MAAM,IACrCZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO+L,IAAIxP,OAAO0iC,MAAM,SAChCrzB,eAAAA,EAAO5L,OAAOmS,OAAO,CAAEpG,IAAK,CAAExP,MAAO,YACrC+/B,KACN+B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAO+L,IAAIxP,OAAO0iC,MAAM,IACtCZ,EAAOzyB,eAAAA,EAAO5L,OAAOyL,GAAGlP,OAAO0iC,MAAM,EACtC,MAEDb,EAAG,gBAAgB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC5B,MAAM8P,QAAcqyB,GAAgB,aACpCI,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOwL,MAAMjP,OAAO0iC,MAAM,IACxCZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOwL,MAAMjP,OAAO0iC,MAAM,SAClCrzB,eAAAA,EAAO5L,OAAOmS,OAAO,CAAE3G,MAAO,CAAEjP,MAAO,YACvC+/B,KACN+B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOwL,MAAMjP,OAAO0iC,MAAM,IACxCZ,EAAOzyB,eAAAA,EAAO5L,OAAOwL,MAAMjP,OAAO0iC,MAAM,EACzC,MAEDb,EAAG,gBAAgB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC5B,MAAM8P,QAAcqyB,GAAgB,aACpCI,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOwL,MAAMjP,OAAO0iC,MAAM,IACxCZ,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOwL,MAAMjP,OAAO0iC,MAAM,SAClCrzB,eAAAA,EAAO5L,OAAOmS,OAAO,CAAE3G,MAAO,CAAEuc,IAAK,YACrCuU,KACN+B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOwL,MAAMjP,OAAO0iC,MAAM,IACxCZ,EAAOzyB,eAAAA,EAAO5L,OAAOwL,MAAMjP,OAAO0iC,MAAM,EACzC,KAAC,IAGJd,EAAS,wDAAwD,KAC/D5H,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACL,QAAVylB,EAAA7d,KAAK1F,aAAK,IAAAujB,GAAAA,EACNjV,QAAQ/K,UAAM,OAAO,UAAPA,aAAA,EAAAA,EAAGmN,YAAI,IAAA6S,OAAA,EAAAA,EAAEsD,QAAQ,QAAQxM,QAAU,CAAC,IACnDpF,SAAS1R,GAAMA,EAAEk8B,UACrB,MACDM,GAAU9qB,SAASoW,IACjB+U,EAAG,WAAW/U,EAASvO,0CAA0C,IAAWhf,OAAA,OAAA,OAAA,GAAA,YAC1E,MAAM8P,QAAcqyB,GAAgB,aAC9BrrB,QAAc4V,GAAQ/d,OAAO,CACjCiE,KAAM,QAAQ2J,MAAOgR,EAASvO,eAC9Brb,KAAM4pB,UAEFzd,aAAK,EAALA,EAAOoG,wBAAwB,OAAQ,CAACY,IAC9C,MAAM0wB,EAAY13B,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ1qB,aAAI,EAAJA,EAAMlE,MAC7C2vB,EAAOiF,aAAA,EAAAA,EAAWxxB,KAAKmtB,MAAMzW,GAAQC,aAAaY,IAClDzW,SAAAA,EAAM6qB,QACP,KAAC,GACF,IAGJU,EAAS,iCAAiC,KACxC2E,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAEDkC,EAAG,yCAAyC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBACrD,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAOzyB,eAAAA,EAAO5L,OAAOsL,QAAQ6iB,GAAG5xB,OAAO0iC,MAAM,GAC7CZ,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,aAAA,EAAAA,EAAOmiB,cAAc,IAC3BsQ,EAAOzyB,eAAAA,EAAO5L,OAAOsL,QAAQ6iB,GAAG5xB,OAAO0iC,MAAM,UACvC3C,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,SAC5BrzB,aAAK,EAALA,EAAO6xB,QACd,MAEDW,EAAG,gDAAgD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC5D,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAOzyB,eAAAA,EAAO5L,OAAOsL,QAAQ6iB,GAAG5xB,OAAO0iC,MAAM,GAC7CZ,EAAoB,QAAb3L,EAAAhvB,KAAKuoB,gBAAQ,IAAAyG,OAAA,EAAAA,EAAEtD,MAAM6P,MAAM,SAC5BrzB,aAAA,EAAAA,EAAOmiB,eAAe,IAC5BsQ,EAAOzyB,eAAAA,EAAO5L,OAAOsL,QAAQ6iB,GAAG5xB,OAAO0iC,OAAO,UACxC3C,KACN+B,EAAoB,QAAbpL,EAAAvvB,KAAKuoB,gBAAQ,IAAAgH,OAAA,EAAAA,EAAE7D,MAAM6P,MAAM,SAC5BrzB,aAAK,EAALA,EAAO6xB,QACd,MAEDW,EAAG,2DAA2D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBACvE,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,aAAA,EAAAA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEsL,QAAS,CAAE6iB,GAAI,CAAEllB,MAAO,QACxDo1B,EAAOzyB,eAAAA,EAAO5L,OAAOsL,QAAQ6iB,GAAG5xB,OAAO0iC,MAAM,GAC7CZ,EAAoB,QAAbT,EAAAl6B,KAAKuoB,gBAAQ,IAAA2R,OAAA,EAAAA,EAAExO,MAAM6P,MAAM,SAC5BrzB,aAAA,EAAAA,EAAOmiB,cAAc,IAC3BsQ,EAAOzyB,eAAAA,EAAO5L,OAAOsL,QAAQ6iB,GAAG5xB,OAAO0iC,MAAM,UACvC3C,KACN+B,EAAoB,QAAbP,EAAAp6B,KAAKuoB,gBAAQ,IAAA6R,OAAA,EAAAA,EAAE1O,MAAM6P,MAAM,SAC5BrzB,aAAK,EAALA,EAAO6xB,QACd,KAAC,IAGJU,EAAS,WAAW,KAClBC,EAAG,aAAa,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzB,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAOzyB,eAAAA,EAAOqI,SAASgrB,OAAM,SACvBrzB,aAAK,EAALA,EAAO6xB,QACd,MAEDW,EAAG,WAAW,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACvB,MAAM8P,QAAeqyB,GAAgB,WACrCI,EAAOzyB,eAAAA,EAAOqI,SAASgrB,OAAM,SACvBrzB,aAAK,EAALA,EAAO6xB,QACd,KAAC,IAGJU,EAAS,oBAAoB,IAAWriC,OAAA,OAAA,OAAA,GAAA,YACtC,MAAM2rB,EAAQ,CACZ,CACE8b,KAAM,GACNC,KAAM,EACNj+B,MAAO,GACPk+B,MAAO,GACPh+B,UAAW,GACXC,OAAQ,GACRC,MAAO,IAET,CACE49B,IAAK,EACLC,KAAM,EACNj+B,MAAO,GACPk+B,MAAO,GACPh+B,UAAW,GACXC,OAAQ,GACRC,MAAO,IAET,CACE49B,IAAK,EACLC,KAAM,EACNj+B,MAAO,GACPk+B,MAAO,GACPh+B,UAAW,GACXC,OAAQ,GACRC,MAAO,IAET,CACE49B,IAAK,EACLC,KAAM,EACNj+B,MAAO,EACPk+B,MAAO,EACPh+B,UAAW,GACXC,OAAQ,GACRC,MAAO,IAET,CACE49B,IAAK,GACLC,KAAM,GACNj+B,MAAO,EACPk+B,MAAO,EACPh+B,UAAW,EACXC,OAAQ,EACRC,MAAO,IAET,CACE49B,IAAK,GACLC,KAAM,GACNj+B,MAAO,EACPk+B,MAAO,EACPh+B,UAAW,EACXC,OAAQ,EACRC,MAAO,IAET,CACE49B,IAAK,GACLC,KAAM,GACNj+B,MAAO,EACPk+B,MAAO,EACPh+B,UAAW,EACXC,OAAQ,EACRC,MAAO,GAET,CACE49B,IAAK,GACLC,KAAM,GACNj+B,MAAO,EACPk+B,MAAO,EACPh+B,UAAW,EACXC,OAAQ,EACRC,MAAO,GAET,CACE49B,IAAK,GACLC,KAAM,GACNj+B,MAAO,EACPk+B,MAAO,EACPh+B,UAAW,EACXC,OAAQ,EACRC,MAAO,GAET,CACE49B,IAAK,GACLC,KAAM,GACNj+B,MAAO,EACPk+B,MAAO,EACPh+B,UAAW,EACXC,OAAQ,EACRC,MAAO,IAIL6F,EAAQ,CACZ,CAAE+3B,KAAM,IAAKC,KAAM,EAAGjnC,MAAO,IAC7B,CAAEgnC,IAAK,EAAGC,KAAM,EAAGjnC,MAAO,IAC1B,CAAEgnC,IAAK,EAAGC,KAAM,EAAGjnC,MAAO,IAC1B,CAAEgnC,IAAK,EAAGC,KAAM,EAAGjnC,MAAO,IAC1B,CAAEgnC,IAAK,EAAGC,KAAM,EAAGjnC,MAAO,IAC1B,CAAEgnC,IAAK,EAAGC,KAAM,EAAGjnC,MAAO,IAC1B,CAAEgnC,IAAK,EAAGC,KAAM,EAAGjnC,MAAO,IAC1B,CAAEgnC,IAAK,EAAGC,KAAM,EAAGjnC,MAAO,IAC1B,CAAEgnC,IAAK,EAAGC,KAAM,EAAGjnC,MAAO,IAC1B,CAAEgnC,IAAK,EAAGC,KAAM,GAAIjnC,MAAO,IAC3B,CAAEgnC,IAAK,GAAIC,KAAM,GAAIjnC,MAAO,GAC5B,CAAEgnC,IAAK,GAAIC,KAAM,GAAIjnC,MAAO,GAC5B,CAAEgnC,IAAK,GAAIC,KAAM,GAAIjnC,MAAO,GAC5B,CAAEgnC,IAAK,GAAIC,KAAM,GAAIjnC,MAAO,GAC5B,CAAEgnC,IAAK,GAAIC,KAAM,GAAIjnC,MAAO,GAC5B,CAAEgnC,IAAK,GAAIC,KAAM,IAAKjnC,MAAO,IAGzB8kC,EAAcnnB,MAAMonB,KAAK,CAAE90B,OAAQ,KAAM,CAAC+0B,EAAK9b,IAAQA,EAAM,IAE7D7Z,QAAeqyB,GAAgB,WAErCoD,EAAYpuB,SAASsU,IACnB,MAAMmc,EAAYjc,EAAMvX,MAAMjI,GAAMsf,GAAMtf,EAAEs7B,KAAOhc,GAAMtf,EAAEu7B,OACrDG,EAAYn4B,EAAM0E,MAAMjI,GAAMsf,GAAMtf,EAAEs7B,KAAOhc,GAAMtf,EAAEu7B,OACrDI,EAAgBp4B,EAAM0E,MACzBjI,GAAMsf,EAAK,GAAKtf,EAAEs7B,KAAOhc,EAAK,GAAKtf,EAAEu7B,OAExC53B,SAAAA,EAAOwiB,aAAa,GAAG7G,KAEvB6W,EAAG,MAAM7W,6BAA8B,KACrC8W,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOynB,MAAMliB,MAAMhJ,OAAO0iC,MAAMyE,aAAS,EAATA,EAAWn+B,OACzD84B,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOynB,MAAMjiB,KAAKjJ,OAAO0iC,MAAMyE,aAAS,EAATA,EAAWD,OACxDpF,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOynB,MAAMhiB,UAAUlJ,OAAO0iC,MAAMyE,aAAS,EAATA,EAAWj+B,WAC7D44B,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOynB,MAAM/hB,OAAOnJ,OAAO0iC,MAAMyE,aAAS,EAATA,EAAWh+B,QAC1D24B,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOynB,MAAM9hB,MAAMpJ,OAAO0iC,MAAMyE,aAAS,EAATA,EAAW/9B,MAAM,IAGjEy4B,EAAG,MAAM7W,6BAA8B,KACrC8W,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOwL,MAAMjP,OAAO0iC,MAAM0E,eAAAA,EAAWpnC,OACnD8hC,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOwL,MAAMuc,KAAKkX,MAAM,IAAK0E,aAAA,EAAAA,EAAWpnC,OAAM,IAG9DqP,SAAAA,EAAOwiB,aAAa,GAAG7G,MACvB6W,EAAG,MAAM7W,8BAA+B,KACtC8W,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOwL,MAAMjP,OAAO0iC,MAAM2E,eAAAA,EAAernC,OACvD8hC,EAAOzyB,aAAK,EAALA,EAAO5L,OAAOwL,MAAMuc,KAAKkX,MAAM,IAAK2E,aAAA,EAAAA,EAAernC,OAAM,GAChE,UAGEqP,aAAK,EAALA,EAAO6xB,QACd,MAEDU,EAAS,mBAAmB,IAAWriC,OAAA,OAAA,OAAA,GAAA,YACrC,MAAM8P,QAAeqyB,GAAgB,WAC/B4F,EAAiB3pB,MAAMonB,KAAK,CAAE90B,OAAQ,KAAM,CAAC+0B,EAAK9b,IAAQA,EAAM,IAChEqe,EAAiB,EACpB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE7DC,EAAW,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IACnCF,EAAe5wB,SAAQ,CAACvO,EAAK+gB,KAC3Bse,EAAS9wB,SAASsU,IAChB6W,EAAG,GAAG7W,aAAc7iB,4BAA8B,IAAW5I,OAAA,OAAA,OAAA,GAAA,kBACrD8P,eAAAA,EAAOuG,OAAO,CAClBnS,OAAQ,CAAEsnB,GAAI,CAAEC,GAAI,KAAKA,KAAQljB,OAAQ,CAAEK,IAAK,CAAEnI,MAAOmI,aAErDkH,aAAK,EAALA,EAAO4kB,SACb6S,GAAOz3B,aAAA,EAAAA,EAAO5L,OAAOsnB,GAAGxpB,KAAMgmC,EAAere,IAAQ,GACrD4d,GAAOz3B,aAAA,EAAAA,EAAO5L,OAAOsnB,GAAG/qB,OAAQunC,EAAere,IAAQ,GACvD4d,GAAOz3B,aAAA,EAAAA,EAAO5L,OAAOsnB,GAAGxpB,KAAMgmC,EAAere,IAAQ8B,GACrD8b,GAAOz3B,aAAA,EAAAA,EAAO5L,OAAOsnB,GAAG/qB,OAAQunC,EAAere,IAAQ8B,EACxD,KAAC,GACF,UAEE3b,aAAK,EAALA,EAAO6xB,QACd,MAEDU,EAAS,2BAA2B,KAClC2E,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAEa,CAAC,QAAS,OAAQ,YAAa,SAAU,SACjDjpB,SAASqD,IACb8nB,EAAG,qBAAqB9nB,wBAA2B,IAAWxa,OAAA,OAAA,OAAA,GAAA,oBAC5D,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,aAAA,EAAAA,EAAO2K,SAASD,EAAM,CAAEmY,aAAa,UACrC6N,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,SAC5BrzB,aAAK,EAALA,EAAO6xB,QACd,MAEDW,EAAG,qBAAqB9nB,sBAAyB,IAAWxa,OAAA,OAAA,OAAA,GAAA,oBAC1D,MAAM8P,QAAeqyB,GAAgB,WACrCI,EAAoB,QAAb3L,EAAAhvB,KAAKuoB,gBAAQ,IAAAyG,OAAA,EAAAA,EAAEtD,MAAM6P,MAAM,SAC5BrzB,EAAM2K,SAASD,EAAM,CAAEmY,aAAa,UACpC6N,KACN+B,EAAoB,QAAbpL,EAAAvvB,KAAKuoB,gBAAQ,IAAAgH,OAAA,EAAAA,EAAE7D,MAAM6P,MAAM,SAC5BrzB,aAAK,EAALA,EAAO6xB,QACd,KAAC,GACF,IAGJU,EAAS,uBAAuB,KAC9B2E,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAEDkC,EAAG,iBAAiB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC7B,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,EAAM8iB,mBACN4N,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,SAC5BrzB,aAAK,EAALA,EAAO6xB,QACd,MAEDW,EAAG,eAAe,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC3B,MAAM8P,QAAeqyB,GAAgB,WACrCI,EAAoB,QAAb3L,EAAAhvB,KAAKuoB,gBAAQ,IAAAyG,OAAA,EAAAA,EAAEtD,MAAM6P,MAAM,SAC5BrzB,EAAM8iB,mBACN4N,KACN+B,EAAoB,QAAbpL,EAAAvvB,KAAKuoB,gBAAQ,IAAAgH,OAAA,EAAAA,EAAE7D,MAAM6P,MAAM,SAC5BrzB,aAAK,EAALA,EAAO6xB,QACd,KAAC,IAGJU,EAAS,wBAAwB,KAC/B2E,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAEDkC,EAAG,iBAAiB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC7B,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,EAAMiU,oBACNyc,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,SAC5BrzB,aAAK,EAALA,EAAO6xB,QACd,MAEDW,EAAG,eAAe,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC3B,MAAM8P,QAAeqyB,GAAgB,WACrCI,EAAoB,QAAb3L,EAAAhvB,KAAKuoB,gBAAQ,IAAAyG,OAAA,EAAAA,EAAEtD,MAAM6P,MAAM,SAC5BrzB,EAAMiU,oBACNyc,KACN+B,EAAoB,QAAbpL,EAAAvvB,KAAKuoB,gBAAQ,IAAAgH,OAAA,EAAAA,EAAE7D,MAAM6P,MAAM,SAC5BrzB,aAAK,EAALA,EAAO6xB,QACd,KAAC,IAGJU,EAAS,yBAAyB,KAChC2E,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAEDkC,EAAG,iBAAiB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC7B,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,EAAMgjB,aAAa,CAAEH,aAAa,UAClC6N,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,MAEDW,EAAG,eAAe,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC3B,MAAM8P,QAAeqyB,GAAgB,WACrCI,EAAoB,QAAb3L,EAAAhvB,KAAKuoB,gBAAQ,IAAAyG,OAAA,EAAAA,EAAEtD,MAAM6P,MAAM,SAC5BrzB,EAAMgjB,aAAa,CAAEH,aAAa,UAClC6N,KACN+B,EAAoB,QAAbpL,EAAAvvB,KAAKuoB,gBAAQ,IAAAgH,OAAA,EAAAA,EAAE7D,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,KAAC,IAGJU,EAAS,6BAA6B,KAGpC2E,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAJc,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAM5CjpB,SAAS3C,IACd8tB,EAAG,GAAG9tB,mBAAuB,IAAWxU,OAAA,OAAA,OAAA,GAAA,oBACtC,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,EAAMgU,UAAUtP,EAAO,CAAEme,aAAa,UACtC6N,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,MAEDW,EAAG,GAAG9tB,mBAAuB,IAAWxU,OAAA,OAAA,OAAA,GAAA,oBACtC,MAAM8P,QAAeqyB,GAAgB,WACrCI,EAAoB,QAAb3L,EAAAhvB,KAAKuoB,gBAAQ,IAAAyG,OAAA,EAAAA,EAAEtD,MAAM6P,MAAM,SAC5BrzB,EAAMgU,UAAUtP,EAAO,CAAEme,aAAa,UACtC6N,KACN+B,EAAoB,QAAbpL,EAAAvvB,KAAKuoB,gBAAQ,IAAAgH,OAAA,EAAAA,EAAE7D,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,KAAC,GACF,IAGJU,EAAS,wBAAwB,KAC/B,MAAM0F,EAAiB3pB,MAAMonB,KAAK,CAAE90B,OAAQ,KAAM,CAAC+0B,EAAK9b,IAAQA,EAAM,IAChEqe,EAAiB,EACpB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE7DE,EAAc9pB,MAAMonB,KAAK,CAAE90B,OAAQ,IAAK,CAAC+0B,EAAK9b,IAAQA,EAAM,IAElEoe,EAAe5wB,SAAQ,CAACvO,EAAK+gB,KAC3B,MAAMwe,EAASH,EAAere,GACxBye,EAAgBD,GAAU,EAAI,EAAI,EAClCE,EAAUF,EAAS,EAAI,IAAM,IAC7BG,EAA0B,MAAZD,GAA4B,EAAVF,EAAcA,EACpDD,EAAY/wB,SAAS6b,IACnBsP,EAAG,kDAAkDtP,aAAiBpqB,KAAO,IAAW5I,OAAA,OAAA,OAAA,GAAA,YACtF,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,eAAAA,EAAOuG,OAAO,CAClBnS,OAAQ,CAAEsL,QAAS,CAAEwjB,SAASzqB,OAAQ,CAAEK,IAAK,CAAEnI,MAAOmI,OAExD,MAAMyE,QAAayC,EAAMyQ,cAEzBgiB,EAAOl1B,EAAK+B,MAAMsB,QAAQyyB,MAAMiF,GAChC7F,EAAOl1B,EAAK+B,MAAM,GAAGm5B,YAAYpF,MAAMrzB,aAAK,EAALA,EAAO5L,OAAOsnB,GAAGC,IACpD0c,EAAS,GACX5F,EAAOl1B,EAAK+B,MAAMg5B,EAAgB,GAAGI,UAAUrF,MAAM,KAEvDZ,EAAOl1B,EAAK+B,MAAMg5B,EAAgB,GAAGI,UAAUrF,MAAMkF,GACrD9F,EAAOl1B,EAAK+B,MAAMg5B,EAAgB,GAAGG,YAAYpF,MAC/CmF,EAAYG,YAEdlG,EAAOl1B,EAAK+B,MAAMg5B,EAAgB,GAAGI,UAAUrF,MAAM,KACrDZ,EAAOl1B,EAAK+B,MAAMg5B,EAAgB,GAAGG,YAAYpF,MAC/CnQ,EAAMyV,YAERlG,EAAOzyB,eAAAA,EAAO5L,OAAOqE,OAAOK,IAAI6b,KAAK0e,MAAMgF,SACrCr4B,aAAK,EAALA,EAAO6xB,QACd,KAAC,GACF,GACF,IAGJU,EAAS,0BAA0B,KACjC2E,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAEDkC,EAAG,iBAAiB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC7B,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,EAAMmjB,sBACNuN,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,MAEDU,EAAS,eAAe,KACtBC,EAAG,iBAAiB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,sBAC7B,MAAM8P,QAAeqyB,GAAgB,WACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,EAAMmjB,cAAc,CAAEC,MAAO,qBAC7BsN,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,GAClCZ,EAAoB,QAAb3L,EAAAhvB,KAAKuoB,gBAAQ,IAAAyG,OAAA,EAAAA,EAAEha,SAAS,GAAGrO,SAASw0B,QACzCn7B,KAAKwI,KAAKC,OAAO,qBAAsB,CAAE1M,KAAM,eAE3CmM,EAAM6xB,QACb,MAEDW,EAAG,YAAY,IAAWtiC,OAAA,OAAA,OAAA,GAAA,sBACxB,MAAM8P,QAAeqyB,GAAgB,WACrCI,EAAoB,QAAbpL,EAAAvvB,KAAKuoB,gBAAQ,IAAAgH,OAAA,EAAAA,EAAE7D,MAAM6P,MAAM,SAC5BrzB,EAAMmjB,cAAc,CAAEC,MAAO,gBAC7BsN,KACN+B,EAAoB,QAAbT,EAAAl6B,KAAKuoB,gBAAQ,IAAA2R,OAAA,EAAAA,EAAExO,MAAM6P,MAAM,GAClCZ,EAAoB,QAAbP,EAAAp6B,KAAKuoB,gBAAQ,IAAA6R,OAAA,EAAAA,EAAEplB,SAAS,GAAGrO,SAASw0B,QACzCn7B,KAAKwI,KAAKC,OAAO,qBAAsB,CAAE1M,KAAM,eAE3CmM,EAAM6xB,QACb,KAAC,GACF,IAGJU,EAAS,kCAAkC,KACzC2E,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAE0B,CAAC,KAAM,KAAM,KAAM,MAC3BjpB,SAAS6M,IAC1Bse,EAAG,iBAAiB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC7B,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,EAAMoU,gBAAgBF,EAAM,CAAE2O,aAAa,UAC3C6N,KACN+B,EAAsB,UAAf36B,KAAKuoB,gBAAU,IAAA5G,OAAA,EAAAA,EAAA3M,SAAS,GAAGrO,SAASw0B,QACzCn7B,KAAKwI,KAAKC,OAAO,uBAAwB,CACvC4T,YAAarc,KAAKwI,KAAKuB,SAAS,mBAAmBqS,mBAGjDlU,EAAM6xB,QACb,KAAC,IAGJW,EAAG,eAAe,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC3B,MAAM8P,QAAeqyB,GAAgB,WACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,EAAMoU,gBAAgB,KAAM,CAAEyO,aAAa,UAC3C6N,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,KAAC,IAGJU,EAAS,gCAAgC,KACvC2E,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAEDkC,EAAG,iBAAiB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,sBAC7B,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BrzB,EAAMkB,WAAW,CAAEvF,MAAO,eAC1B+0B,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,GAClCZ,EAAsB,QAAf3L,EAAAhvB,KAAKuoB,gBAAU,IAAAyG,OAAA,EAAAA,EAAAha,SAAS,GAAGrO,SAASw0B,QACzC,UAAUn7B,KAAKwI,KAAKuB,SAAS,uBAEzB7B,EAAM6xB,QACb,MAEDW,EAAG,eAAe,IAAWtiC,OAAA,OAAA,OAAA,GAAA,sBAC3B,MAAM8P,QAAeqyB,GAAgB,WACrCI,EAAoB,QAAbpL,EAAAvvB,KAAKuoB,gBAAQ,IAAAgH,OAAA,EAAAA,EAAE7D,MAAM6P,MAAM,SAC5BrzB,EAAMkB,WAAW,CAAEvF,MAAO,eAC1B+0B,KACN+B,EAAoB,QAAbT,EAAAl6B,KAAKuoB,gBAAQ,IAAA2R,OAAA,EAAAA,EAAExO,MAAM6P,MAAM,GAClCZ,EAAsB,QAAfP,EAAAp6B,KAAKuoB,gBAAU,IAAA6R,OAAA,EAAAA,EAAAplB,SAAS,GAAGrO,SAASw0B,QACzC,UAAUn7B,KAAKwI,KAAKuB,SAAS,uBAEzB7B,EAAM6xB,QACb,MAEDW,EAAG,6CAA6C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,wBACzD,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAbmG,EAAA9gC,KAAKuoB,gBAAQ,IAAAuY,OAAA,EAAAA,EAAEpV,MAAM6P,MAAM,SAC5BrzB,EAAMkB,WAAW,CACrBvF,MAAO,OACP4B,KAAM,CAAEkD,IAAK,cAETiwB,KACN+B,EAAoB,QAAboG,EAAA/gC,KAAKuoB,gBAAQ,IAAAwY,OAAA,EAAAA,EAAErV,MAAM6P,MAAM,GAClCZ,EAAsB,QAAfqG,EAAAhhC,KAAKuoB,gBAAU,IAAAyY,OAAA,EAAAA,EAAAhsB,SAAS,GAAGrO,SAASw0B,QACzC,UAAUn7B,KAAKwI,KAAKuB,SAAS,iBAE/B4wB,UAAOsG,EAAAjhC,KAAKuoB,+BAAUvT,SAAS,GAAGrO,SAASw0B,QAAQ,YAC7CjzB,EAAM6xB,QACb,MAEDW,EAAG,4CAA4C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,wBACxD,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,aAAA,EAAAA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEqE,OAAQ,CAAEC,IAAK,CAAE/H,MAAO,OACxD8hC,EAAOzyB,EAAM5L,OAAOqE,OAAOC,IAAI/H,OAAO0iC,MAAM,GAC5CZ,EAAoB,QAAbuG,EAAAlhC,KAAKuoB,gBAAQ,IAAA2Y,OAAA,EAAAA,EAAExV,MAAM6P,MAAM,SAC5BrzB,EAAMkB,WAAW,CACrBvF,MAAO,OACP4B,KAAM,CAAEkD,IAAK,KAAM5M,KAAM,iBAErB68B,KACN+B,EAAoB,QAAbwG,EAAAnhC,KAAKuoB,gBAAQ,IAAA4Y,OAAA,EAAAA,EAAEzV,MAAM6P,MAAM,GAClCZ,EAAsB,QAAfyG,EAAAphC,KAAKuoB,gBAAU,IAAA6Y,OAAA,EAAAA,EAAApsB,SAAS,GAAGrO,SAASw0B,QACzC,UAAUn7B,KAAKwI,KAAKuB,SAAS,iBAE/B4wB,UAAO0G,EAAArhC,KAAKuoB,+BAAUvT,SAAS,GAAGrO,SAASw0B,QAAQ,mBAC7CjzB,EAAM6xB,QACb,KAAC,IAGJU,EAAS,qCAAqC,KAC5CG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,YAChB,MAAM4b,QAAcwlB,WACdxlB,aAAK,EAALA,EAAOstB,UACd,MAEDlC,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAEDkC,EAAG,qCAAqC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,sCACjD,MAAM8P,QAAeqyB,GAAgB,aAC/BrmB,QAAchM,EAAMq5B,yBACN,QAAd1jB,EAAA9J,OAAOC,aAAO,IAAA6J,OAAA,EAAAA,EAAAvP,wBAAwB,QAAS,CAAC4F,UAChD0kB,KACN+B,EAAkB,QAAXhZ,EAAA3hB,KAAKoF,YAAM,IAAAuc,OAAA,EAAAA,EAAAkH,QAAQ6C,MAAM6P,MAAM,GACzB,QAAbvM,EAAAjb,OAAOwV,cAAM,IAAAyF,GAAAA,EAAEwS,WAAWjyB,SAASyR,GACjCA,EAAEygB,WAAU,EAAM,CAAEC,eAAe,EAAOC,gBAAgB,MAE5DhH,UAAOpL,EAAAxb,OAAOwV,6BAAQiY,WAAW,GAAGt5B,OAAO+yB,IAAI2G,KAC/CjH,EAA2C,UAAvB,QAAbT,EAAAnmB,OAAOwV,cAAM,IAAA2Q,OAAA,EAAAA,EAAEsH,WAAW,GAAGt5B,aAAO,IAAAkyB,OAAA,EAAAA,EAAA99B,OAAOyL,GAAGlP,OAAOoiC,IAAI2G,KAChEjH,EAAkB,QAAXmG,EAAA9gC,KAAKoF,YAAM,IAAA07B,OAAA,EAAAA,EAAAjY,QAAQ6C,MAAM6P,MAAM,GACtCZ,EAAoB,QAAboG,EAAA/gC,KAAKuoB,gBAAQ,IAAAwY,OAAA,EAAAA,EAAErV,MAAM6P,MAAM,SAC5BrzB,EAAM6K,aAAa,CAAEtN,KAAM,CAAE4B,OAAQ,CAAE,IAAM,QAAS,CAC1DgC,YAAY,UAERuvB,KACN+B,EAAoB,QAAbqG,EAAAhhC,KAAKuoB,gBAAQ,IAAAyY,OAAA,EAAAA,EAAEtV,MAAM6P,MAAM,WAClC0F,EAAAltB,OAAOwV,uBAAQiY,WAAW,GAAGC,WAAU,EAAO,CAAEC,eAAe,IAC/D/G,EAAkB,QAAXuG,EAAAlhC,KAAKoF,YAAM,IAAA87B,OAAA,EAAAA,EAAArY,QAAQ6C,MAAM6P,MAAM,SAChCrzB,EAAM6xB,QACb,MAEDW,EAAG,gDAAgD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,gCAC5D,MAAM8P,QAAeqyB,GAAgB,aAC/BrmB,QAAchM,EAAMq5B,yBACN,QAAdJ,EAAAptB,OAAOC,aAAO,IAAAmtB,OAAA,EAAAA,EAAA7yB,wBAAwB,QAAS,CAAC4F,UAChD0kB,KACN+B,EAAkB,QAAXyG,EAAAphC,KAAKoF,YAAM,IAAAg8B,OAAA,EAAAA,EAAAvY,QAAQ6C,MAAM6P,MAAM,GACzB,QAAb8F,EAAAttB,OAAOwV,cAAM,IAAA8X,GAAAA,EAAEG,WAAWjyB,SAASyR,GACjCA,EAAEygB,WAAU,EAAM,CAAEC,eAAe,EAAOC,gBAAgB,MAE5DhH,EAAkB,QAAXkH,EAAA7hC,KAAKoF,YAAM,IAAAy8B,OAAA,EAAAA,EAAAhZ,QAAQ6C,MAAM6P,MAAM,GACtCZ,EAAoB,QAAbmH,EAAA9hC,KAAKuoB,gBAAQ,IAAAuZ,OAAA,EAAAA,EAAEpW,MAAM6P,MAAM,SAC5BrzB,EAAM6K,aAAa,CAAEtN,KAAM,CAAE4B,OAAQ,CAAE,IAAM,QAAS,CAC1DgC,YAAY,UAERuvB,KACN+B,EAAoB,QAAboH,EAAA/hC,KAAKuoB,gBAAQ,IAAAwZ,OAAA,EAAAA,EAAErW,MAAM6P,MAAM,WAClCyG,EAAAjuB,OAAOwV,uBAAQiY,WAAW,GAAGC,WAAU,EAAO,CAAEC,eAAe,IAC/D/G,EAAkB,QAAXsH,EAAAjiC,KAAKoF,YAAM,IAAA68B,OAAA,EAAAA,EAAApZ,QAAQ6C,MAAM6P,MAAM,SAChCrzB,EAAM6xB,QACb,MAEDW,EAAG,2CAA2C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,sBACvD,MAUM8P,QAAeqyB,GAAgB,aACrCI,EAAkB,QAAXuH,EAAAliC,KAAKoF,YAAM,IAAA88B,OAAA,EAAAA,EAAArZ,QAAQ6C,MAAM6P,MAAM,GACtCZ,EAAoB,QAAbwH,EAAAniC,KAAKuoB,gBAAQ,IAAA4Z,OAAA,EAAAA,EAAEzW,MAAM6P,MAAM,SAC5BrzB,EAAM6K,aAbC,CACXtN,KAAM,CACJM,WAAW,EACX4C,IAAK,CAAC,OACNb,MAAO,GACPT,OAAQ,CACNa,MAAO,CAAE5L,OAAQ,CAAEyL,GAAI,CAAElP,MAAO,GAAKwP,IAAK,CAAExP,MAAO,QAO1B,QAAS,CAAEwQ,YAAY,UAChDuvB,KACN+B,EAAoB,QAAbyH,EAAApiC,KAAKuoB,gBAAQ,IAAA6Z,OAAA,EAAAA,EAAE1W,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,MAEDlH,GAAM,KACJsH,IAAe,GACf,IAGJM,EAAS,gCAAgC,KACvCG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACVogC,IACP,MAED4G,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,MAEDkC,EAAG,mCAAmC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC/C,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,GAClC,MAAM8G,QAAiBn6B,EAAMyjB,WAC3B,CAAElmB,KAAM,CAAE,GACV,CAAE4D,YAAY,IAEhBsxB,EAAO0H,EAAS74B,SAAS+xB,MAAM,cACzB3C,KACN+B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,MAEDW,EAAG,kDAAkD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAY/D,MAEDsiC,EAAG,iDAAiD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC7D,MAAM8P,QAAeqyB,GAAgB,aACrCI,EAAoB,QAAb3L,EAAAhvB,KAAKuoB,gBAAQ,IAAAyG,OAAA,EAAAA,EAAEtD,MAAM6P,MAAM,GAClC,MAAM8G,QAAiBn6B,EAAMyjB,WAC3B,CAAElmB,KAAM,CAAA,GACR,CAAE1J,KAAM,UAAWsN,YAAY,IAEjCsxB,EAAO0H,EAAS74B,SAAS+xB,MAAM,yBACzB3C,KACN+B,EAAoB,QAAbpL,EAAAvvB,KAAKuoB,gBAAQ,IAAAgH,OAAA,EAAAA,EAAE7D,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,MAEDW,EAAG,+CAA+C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC3D,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEqE,OAAQ,CAAEC,IAAK,CAAE/H,MAAO,QACvD8hC,EAAoB,QAAbT,EAAAl6B,KAAKuoB,gBAAQ,IAAA2R,OAAA,EAAAA,EAAExO,MAAM6P,MAAM,GAClC,MAAM8G,QAAiBn6B,EAAMyjB,WAC3B,CAAElmB,KAAM,CAAA,GACR,CAAE1J,KAAM,QAASsN,YAAY,IAE/BsxB,EAAO0H,EAAS74B,SAAS+xB,MAAM,sBACzB3C,KACN+B,EAAoB,QAAbP,EAAAp6B,KAAKuoB,gBAAQ,IAAA6R,OAAA,EAAAA,EAAE1O,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,MAGDW,EAAG,+CAA+C,IAAatiC,OAAA,OAAA,OAAA,GAAA,YAAC,MAEhEsiC,EAAG,sEAAsE,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAClF,MAAM8P,QAAeqyB,GAAgB,aAC/BrrB,QAAakqB,GAAoB,gBACjClqB,eAAAA,EAAMT,OAAO,CAAEnS,OAAQ,CAAEiJ,MAAO,MACtCo1B,EAAoB,QAAbmG,EAAA9gC,KAAKuoB,gBAAQ,IAAAuY,OAAA,EAAAA,EAAEpV,MAAM6P,MAAM,GAClC,MAAM8G,QAAiBn6B,EAAMyjB,WAC3B,CAAElmB,KAAM,GAAIyJ,QACZ,CAAE7F,YAAY,IAEhBsxB,EAAO0H,EAAS74B,SAAS+xB,MAAM,mBACzB3C,KACN+B,EAAoB,QAAboG,EAAA/gC,KAAKuoB,gBAAQ,IAAAwY,OAAA,EAAAA,EAAErV,MAAM6P,MAAM,SAC5BrzB,EAAM6xB,QACb,KAAC,IAGJU,EAAS,mCAAmC,KAC1CC,EAAG,+CAA+C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC3D,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEsnB,GAAI,CAAE/qB,MAAO,GAAIuB,IAAK,OACrDugC,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,UAC9BrzB,EAAMinB,cACZwL,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,UAC9BrzB,EAAM6xB,QACb,MAEDW,EAAG,qCAAqC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACjD,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEsnB,GAAI,CAAE/qB,MAAO,GAAIuB,IAAK,OACrDugC,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,UAC9BrzB,EAAMinB,YAAY,GACxBwL,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,SAC9BrzB,EAAM6xB,QACb,MAEDW,EAAG,oDAAoD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChE,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEsnB,GAAI,CAAE/qB,MAAO,GAAIuB,IAAK,OACrDugC,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,UAC9BrzB,EAAMinB,YAAY,EAAG,GAC3BwL,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,SAC9BrzB,EAAM6xB,QACb,MAEDW,EAAG,6DAA6D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzE,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEsnB,GAAI,CAAE/qB,MAAO,EAAGuB,IAAK,OACpDugC,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,SAC9BrzB,EAAMinB,YAAY,GAAI,GAC5BwL,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,SAC9BrzB,EAAM6xB,QACb,MAEDW,EAAG,8CAA8C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC1D,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEsnB,GAAI,CAAE/qB,MAAO,EAAGuB,IAAK,OACpDugC,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,SAC9BrzB,EAAMinB,aAAa,GACzBwL,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,SAC9BrzB,EAAM6xB,QACb,MAEDW,EAAG,mDAAmD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC/D,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEsnB,GAAI,CAAE/qB,MAAO,GAAIuB,IAAK,OACrDugC,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,UAC9BrzB,EAAMinB,YAAY,IACxBwL,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,SAC9BrzB,EAAM6xB,QACb,MAEDW,EAAG,6DAA6D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzE,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEsnB,GAAI,CAAE/qB,MAAO,GAAIuB,IAAK,OACrDugC,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,UAC9BrzB,EAAMinB,YAAY,EAAG,GAC3BwL,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,SAC9BrzB,EAAM6xB,QACb,MAEDW,EAAG,wDAAwD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACpE,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEsnB,GAAI,CAAE/qB,MAAO,EAAGuB,IAAK,OACpDugC,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,SAC9BrzB,EAAMinB,aAAa,IACzBwL,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,UAC9BrzB,EAAM6xB,QACb,MAEDW,EAAG,kEAAkE,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC9E,MAAM8P,QAAeqyB,GAAgB,mBAC/BryB,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEsnB,GAAI,CAAE/qB,MAAO,EAAGuB,IAAK,OACpDugC,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,SAC9BrzB,EAAMinB,YAAY,GAAI,GAC5BwL,EAAOzyB,EAAM5L,OAAOsnB,GAAG/qB,OAAO0iC,MAAM,UAC9BrzB,EAAM6xB,QACb,KAAC,GACF,EC31BG,MAAMplB,GAAM,kBACN9Y,GAAU,CACrBy+B,YAAa,oBACbmF,aAAa,GAwBTrH,GAAW,IAAYhgC,OAAA,OAAA,OAAA,GAAA,YAAA,IAAAylB,EAAA,OAAa,UAAb7d,KAAKopB,cAAQ,IAAAvL,OAAA,EAAAA,EAAA+b,QAAQ,cAAcjlB,SAEhE,IAAA2tB,GAAe,EACb7H,WACAC,KACAC,SACA9H,QACAuM,YACAxE,aAGA,MAAM2H,EAAsBviC,KAAKI,SAAStG,IACxCkG,KAAK1D,OAAO2D,GACZ,wBAGF4yB,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBukB,KACNl5B,KAAKI,SAASpG,IACZgG,KAAK1D,OAAO2D,GACZ,uBACAsiC,EAEH,MAED9H,EAAS,aAAa,KACpBC,EAAG,6BAA6B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACzC,MAAM8P,QAAeixB,GACnB,YACA,CAAE,EACFxkB,IAGI/P,EADQ,IAAIoL,EAAc9H,GACb+C,UAEnB0vB,EAAO/1B,EAAKsL,OAAOqrB,MAAMrzB,aAAA,EAAAA,EAAOiI,SAChCwqB,EAAO/1B,EAAKwL,UAAUmrB,MAAoB,QAAd1d,EAAA3V,eAAAA,EAAOwG,aAAO,IAAAmP,OAAA,EAAAA,EAAAxN,YAC1CsqB,EAAOj/B,OAAOomB,KAAKld,EAAKU,SAAS61B,QAAQ,eACzCR,EAAOj/B,OAAOomB,KAAKld,EAAKU,SAAS61B,QAAQ,cACzCR,EAAOj/B,OAAOomB,KAAKld,EAAKU,SAAS61B,QAAQ,eACzCR,EAAO/1B,EAAK2L,OAAOgrB,MAAMrzB,aAAA,EAAAA,EAAOqI,QACjC,KAAC,IAIJkqB,EAAS,4BAA4B,KACnCJ,GAAU9qB,SAASoW,IACjB+U,EAAG,cAAc/U,EAASvO,qBAAqB,IAAWhf,OAAA,OAAA,OAAA,GAAA,sBAExD,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAK,EAALA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,MACvC,QAAZkjB,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,SACf+xB,GAAM,KAEZ,MAAMppB,QAAamqB,GAAoBnxB,EAAOyd,SACxCiT,KAEN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GAChC,MAAMiH,EAAatzB,eAAAA,EAAMmH,MACzBskB,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAASxI,MAAMsF,GAAMA,EAAE7R,MAAOuiC,aAAA,EAAAA,EAAYviC,OAAKg7B,IAChE7b,UAGH,IAAIqjB,EAAM,GACV,OAAQ9c,GAEN,IAAK,QACH8c,EAAM,wBACN,MAIF,IAAK,UACHA,EAAM,2BACN,MAIF,QACEA,EAAM,2BAKV,MAAMC,EAAe3mB,SAAS7R,cAAc,GAAGu4B,gBACzCE,EAC2C,QAA/C3T,EAA2B,QAA3BrN,EAAA+gB,aAAA,EAAAA,EAAcp1B,qBAAa,IAAAqU,OAAA,EAAAA,EAAEihB,0BAAkB,IAAA5T,OAAA,EAAAA,EAAEzd,MACnDopB,EAAOgI,EAAiBnxB,SAAS+pB,MAAM,IAGvCzvB,EAAE,GAAG22B,gBAAkB/0B,QAAQ,eACzB4qB,GAAM,KAGZqC,EAAOgI,EAAiBnxB,SAAS+pB,MAAM,eAGjCrzB,aAAK,EAALA,EAAO6xB,QACd,MAEDlH,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBukB,IACP,KAAC,GACF,IAIJuB,EAAS,8BAA8B,KAErC,MAAMoI,EAAgB,IAAWzqC,OAAA,OAAA,OAAA,GAAA,YAC/B0T,EAAE,iDAAiD4B,QAAQ,eACrD4qB,GAAM,IACd,IAEAsC,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAeixB,GACnB,YACA,CAAE,EACFxkB,UAEIzM,EAAMuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,MACtC,QAAZkjB,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,SACf+xB,GAAM,IACb,MAEDoC,EAAG,sDAAsD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAClE,MAAM0qC,EAASjK,GAAY,SAC3B8B,EAAOmI,EAAOh6B,QAAQyyB,MAAM,GAC5B,MAAMwH,EAAkBhnB,SAAS7R,cAC/B,uCAEFywB,EAAOoI,aAAe,EAAfA,EAAiBxxB,MAAMC,SAAS+pB,MAAM,UACvCsH,IACNlI,EAAOoI,aAAe,EAAfA,EAAiBxxB,MAAMC,SAAS+pB,MAAM,OAC9C,MAEDb,EAAG,4DAA4D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACxE,MAAM0qC,EAASjK,GAAY,SAC3B8B,EAAOmI,EAAOh6B,QAAQyyB,MAAM,GAC5B,MAAMwH,EAAkBhnB,SAAS7R,cAC/B,uCAEFywB,EAAOoI,aAAe,EAAfA,EAAiBxxB,MAAMC,SAAS+pB,MAAM,cACvCsH,IACNlI,EAAOoI,aAAe,EAAfA,EAAiBxxB,MAAMC,SAAS+pB,MAAM,GAC9C,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBukB,IACP,KAAC,IAGJuB,EAAS,gCAAgC,KAEvC,MAAMuI,EAAsB,IAAW5qC,OAAA,OAAA,OAAA,GAAA,YACrC0T,EAAE,uDAAuD4B,QAAQ,eAC3D4qB,GAAM,IACd,IAEAsC,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClD0kB,GAAoBnxB,EAAO,mBAC3BmxB,GAAoBnxB,EAAO,UACjC,MAAM+c,EAAS/c,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,yBAC9B9jB,EAAY5N,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,kCAEjC3U,aAAM,EAANA,EAAQxW,OAAO,CAAEnS,OAAQ,CAAEqV,YAAamE,aAAA,EAAAA,EAAW7V,MAC7C,QAAZ4d,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,EACtB,MAEDm0B,EAAG,kDAAkD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC9D,MAAM0qC,EAASjK,GAAY,SAC3B8B,EAAOmI,EAAOh6B,QAAQyyB,MAAM,GAE5B,MAAMrzB,QAAckwB,KACpBuC,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GAEhC,MAAMzlB,EAA0B,QAAd6L,EAAAzZ,aAAK,EAALA,EAAO5N,aAAO,IAAAqnB,OAAA,EAAAA,EAAAiY,QAAQ,4BACxCe,EAC+C,QAA7C3L,EAAA9mB,aAAK,EAALA,EAAO5N,MAAMs/B,QAAQ,gCAAwB,IAAA5K,OAAA,EAAAA,EAAE1yB,OAAOqV,aACtD4pB,MAAMzlB,aAAA,EAAAA,EAAW7V,IACnB,MAAMgjC,EAAmBlnB,SAAS7R,cAChC,wDAEFywB,EAAOsI,aAAgB,EAAhBA,EAAkB1xB,MAAMC,SAAS+pB,MAAM,UAExCyH,IACNrI,EAAOsI,aAAgB,EAAhBA,EAAkB1xB,MAAMC,SAAS+pB,MAAM,OAC/C,MAEDb,EAAG,wDAAwD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBACpE,MAAM0qC,EAASjK,GAAY,SAC3B8B,EAAOmI,EAAOh6B,QAAQyyB,MAAM,GAE5B,MAAMrzB,QAAckwB,KACpBuC,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GAEhC,MAAMzlB,EAA0B,QAAdyZ,EAAArnB,aAAK,EAALA,EAAO5N,aAAO,IAAAi1B,OAAA,EAAAA,EAAAqK,QAAQ,4BACxCe,EAC+C,QAA7CT,EAAAhyB,aAAK,EAALA,EAAO5N,MAAMs/B,QAAQ,gCAAwB,IAAAM,OAAA,EAAAA,EAAE59B,OAAOqV,aACtD4pB,MAAMzlB,aAAA,EAAAA,EAAW7V,IACnB,MAAMgjC,EAAmBlnB,SAAS7R,cAChC,wDAGFywB,EAAOsI,aAAgB,EAAhBA,EAAkB1xB,MAAMC,SAAS+pB,MAAM,cACxCyH,IACNrI,EAAOsI,aAAgB,EAAhBA,EAAkB1xB,MAAMC,SAAS+pB,MAAM,GAC/C,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBukB,IACP,KAAC,IAGJuB,EAAS,6BAA6B,KAEpC,MAAMyI,EAA0BT,GAAerqC,OAAA,OAAA,OAAA,GAAA,YAC7C0T,EAAE,GAAG22B,gBAAkB/0B,QAAQ,eACzB4qB,GAAM,IACd,IAEAsC,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAK,EAALA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,MACvC,QAAZkjB,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,SACf+xB,GAAM,IACb,MAED+B,GAAU9qB,SAAeoW,GAAYvtB,OAAA,OAAA,OAAA,GAAA,YACnC,IAAIqqC,EAAM,GACV,OAAQ9c,GAEN,IAAK,QACH8c,EAAM,wBACN,MAIF,IAAK,UACHA,EAAM,2BACN,MAIF,QACEA,EAAM,2BAIVhI,EAAS,YAAY9U,KAAY,KAC/BiV,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,YAChB,MAAM8P,QAAckwB,WACdiB,GAAoBnxB,EAAOyd,EAClC,MAED+U,EAAG,4CAA4C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACxD,MAAM0qC,EAASjK,GAAY,SAC3B8B,EAAOmI,EAAOh6B,QAAQyyB,MAAM,GAE5B,MAAMrzB,QAAckwB,KACpBuC,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GAEhC,MAAM4H,EAAiBpnB,SAAS7R,cAAc,GAAGu4B,mBACjD9H,EAAOwI,aAAc,EAAdA,EAAgB5xB,MAAMC,SAAS+pB,MAAM,UAEtC2H,EAAiBT,GACvB9H,EAAOwI,aAAc,EAAdA,EAAgB5xB,MAAMC,SAAS+pB,MAAM,QAC7C,MACDb,EAAG,kDAAkD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC9D,MAAM0qC,EAASjK,GAAY,SAC3B8B,EAAOmI,EAAOh6B,QAAQyyB,MAAM,GAE5B,MAAMrzB,QAAckwB,KACpBuC,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GAEhC,MAAM4H,EAAiBpnB,SAAS7R,cAAc,GAAGu4B,mBACjD9H,EAAOwI,aAAc,EAAdA,EAAgB5xB,MAAMC,SAAS+pB,MAAM,eACtC2H,EAAiBT,GACvB9H,EAAOwI,aAAc,EAAdA,EAAgB5xB,MAAMC,SAAS+pB,MAAM,GAC7C,MACDb,EAAG,uDAAuD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAGnE,MAAM8P,QAAckwB,KACdlpB,EAAOhH,aAAK,EAALA,EAAO5N,MAAMs/B,QACxB,kBAAkBjU,EAASvO,sBAGvB8rB,EAAiBT,SACjBvzB,eAAAA,EAAMT,OAAO,CAAEnS,OAAQ,CAAEgpB,YAAa,uBACtCsT,KACN+B,EAAOzrB,aAAI,EAAJA,EAAM5S,OAAOgpB,aAAaiW,MAAM,eAEvC,MAAM4H,EAAiBpnB,SAAS7R,cAAc,GAAGu4B,mBACjD9H,GAAOwI,aAAA,EAAAA,EAAgB/Q,UAAUjR,QAAQ,iBAAkB,GAAG0a,GAAGF,WAE3DzsB,eAAAA,EAAMT,OAAO,CAAEnS,OAAQ,CAAEgpB,YAAa,KAC7C,MACDoV,EAAG,uEAAuE,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACnF,MAAMo9B,QAAc8D,KACd8J,EAAiB,YAAY5N,aAAK,EAALA,EAAO1gB,wBAEpC5M,QAAckwB,KACdlpB,EAAOhH,aAAK,EAALA,EAAO5N,MAAMs/B,QACxB,kBAAkBjU,EAASvO,sBAEvBlI,eAAAA,EAAMT,OAAO,CAAEnS,OAAQ,CAAEgpB,YAAa8d,WACtCxK,KAEN,MAAMuK,EAAiBpnB,SAAS7R,cAAc,GAAGu4B,mBACjD9H,EAAOwI,eAAAA,EAAgB/Q,WAAWmJ,MAAM,IACxCZ,GAAOwI,aAAc,EAAdA,EAAgB/Q,UAAUjR,QAAQiiB,KAAmB,GAAGzH,WACzDnG,aAAK,EAALA,EAAOuE,eACP7qB,eAAAA,EAAMT,OAAO,CAAEnS,OAAQ,CAAEgpB,YAAa,KAC7C,MAEDuN,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,YACf,MAAM8P,QAAckwB,KACpBlwB,SAAAA,EAAO5N,MAAMiV,SAAe1R,GAAKzF,OAAA,OAAA,OAAA,GAAA,kBACzByF,EAAEk8B,QACT,YACKF,IACP,KAAC,GAEL,MAEDhH,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBukB,IACP,KAAC,IAIJuB,EAAS,6BAA6B,KAMpCG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAK,EAALA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,MACvC,QAAZkjB,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,SACf+xB,GAAM,IACb,MAED+B,GAAU9qB,SAASoW,IACjB,IAAI8c,EAAM,GACV,OAAQ9c,GAEN,IAAK,QACH8c,EAAM,wBACN,MAIF,IAAK,UACHA,EAAM,2BACN,MAIF,QACEA,EAAM,2BAIV/H,EAAG,YAAY/U,KAAY,IAAWvtB,OAAA,OAAA,OAAA,GAAA,4BAC9BogC,KACN,MAAMtwB,QAAckwB,WACdiB,GAAoBnxB,EAAOyd,SAC3BiT,UArCY,CAAO6J,GAAerqC,OAAA,OAAA,OAAA,GAAA,YAC1C0T,EAAE,GAAG22B,gBAAkB/0B,QAAQ,eACzB4qB,GAAM,IACd,IAmCU+K,CAAcZ,SACd7J,KACN+B,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,GAClCZ,EAAiC,QAA1B3L,EAAe,QAAfrN,EAAA3hB,KAAKuoB,gBAAU,IAAA5G,OAAA,EAAAA,EAAA3M,SAAS,UAAE,IAAAga,OAAA,EAAAA,EAAEroB,SAASw0B,QAC1C,kBAAkBxV,EAASvO,gBAE7BlP,SAAAA,EAAO5N,MAAMiV,SAAS1R,GAAMA,EAAEk8B,UAC/B,MAEDlH,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,GACF,IAIJ8lB,EAAS,8BAA8B,KACrCG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAK,EAALA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,MACvC,QAAZkjB,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,EACtB,MAED8zB,GAAU9qB,SAASoW,IACjB8U,EAAS,GAAG9U,UAAiB,KAC3B+U,EAAG,qCAAqC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACjD,MAAM8P,QAAekwB,KACrBuC,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,SAE1BlC,GAAoBnxB,EAAOyd,SAC3BiT,KACN,MAAM1pB,EAAOhH,aAAK,EAALA,EAAO5N,MAAMs/B,QACxB,kBAAkBjU,EAASvO,gBAE7BujB,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,iBAG1B1d,EAAA3V,aAAA,EAAAA,EAAOwG,4BAAOqK,qBAAqB7J,SACnC0pB,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,EACjC,MAGc,cAAb5V,GACa,UAAbA,GACa,YAAbA,IAEA+U,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,sBAChD,MAAM8P,QAAckwB,KACpBuC,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,SAE1BlC,GAAoBnxB,EAAO,mBAC3BmxB,GAAoBnxB,EAAOyd,SAC3BiT,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GAEhC,MAAMrsB,EAAOhH,aAAK,EAALA,EAAO5N,MAAMs/B,QACxB,kBAAkBjU,EAASvO,gBAEvBtB,EAAY5N,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,4BACvCe,EAAOzrB,GAAM+rB,IAAI7b,UACjBub,EAAO7kB,GAAWmlB,IAAI7b,gBAGJ,QAAZuC,EAAAzZ,eAAAA,EAAOwG,aAAK,IAAAiT,OAAA,EAAAA,EAAE9L,oBAAoB3G,EAAM4G,SACxC8iB,mBAGA5J,EAAA9mB,aAAA,EAAAA,EAAOwG,4BAAOqK,qBAAqB7J,SACnC0pB,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GAChCZ,EAAO7kB,aAAA,EAAAA,EAAWxZ,OAAOuV,QAAQ/I,QAAQyyB,MAAM,iBAGzChM,EAAArnB,aAAA,EAAAA,EAAOwG,4BAAOqK,qBAAqBjD,SACnC8iB,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,EACjC,MACDb,EAAG,8DAA8D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC1E,MAAM8P,QAAckwB,KACpBuC,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,SAE1BlC,GAAoBnxB,EAAO,mBAC3BmxB,GAAoBnxB,EAAOyd,SAC3BiT,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GAEhC,MAAMrsB,EAAOhH,aAAK,EAALA,EAAO5N,MAAMs/B,QACxB,kBAAkBjU,EAASvO,gBAEvBtB,EAAY5N,aAAA,EAAAA,EAAO5N,MAAMs/B,QAAQ,4BACvCe,EAAOzrB,GAAM+rB,IAAI7b,UACjBub,EAAO7kB,GAAWmlB,IAAI7b,UACtBub,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,iBAG1BrB,EAAAhyB,aAAA,EAAAA,EAAOwG,4BAAOqK,qBAAqBjD,SACnC8iB,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,iBAE1BnB,EAAAlyB,aAAA,EAAAA,EAAOwG,4BAAOqK,qBAAqB7J,SACnC0pB,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,EACjC,MACF,IAGH1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,GACF,IAGJ8lB,EAAS,oCAAoC,KAO3CG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClD0kB,GAAoBnxB,EAAO,cAC3B0wB,KAEN,MAAM1pB,EAAOhH,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GACnC9F,SAAAA,EAAMT,OAAO,CAAEnS,OAAQ,CAAEE,SAAU,CAAEpC,IAAK,EAAGvB,MAAO,YAC9C+/B,KAEM,QAAZ/a,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,SACf+xB,GAAM,IACb,MAGDoC,EAAG,sBAAsB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAClC,MAAM8P,QAAckwB,KACdlpB,EAAOhH,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GACnC2lB,EAAOzrB,aAAA,EAAAA,EAAM5S,OAAOE,SAAS3D,OAAO0iC,MAAM,SApBLnjC,OAAA,OAAA,OAAA,GAAA,YACrC,OAAA0T,EAAE,uCAAuC4B,QAAQ,QAAQ,UAqBnDkrB,KACN+B,EAAOzrB,aAAA,EAAAA,EAAM5S,OAAOE,SAAS3D,OAAO0iC,MAAM,EAC3C,MACDb,EAAG,sBAAsB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAClC,MAAM8P,QAAckwB,KACdlpB,EAAOhH,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GACnC2lB,EAAOzrB,aAAA,EAAAA,EAAM5S,OAAOE,SAAS3D,OAAO0iC,MAAM,SA/BJnjC,OAAA,OAAA,OAAA,GAAA,YACtC,OAAA0T,EAAE,wCAAwC4B,QAAQ,QAAQ,UAgCpDkrB,KACN+B,EAAOzrB,aAAA,EAAAA,EAAM5S,OAAOE,SAAS3D,OAAO0iC,MAAM,EAC3C,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAGJ8lB,EAAS,yBAAyB,KAChCG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAK,EAALA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,YAC7C0+B,GAAoBnxB,EAAO,eAC3B0wB,KACM,QAAZ/a,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,EACtB,MAGDm0B,EAAG,uDAAuD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACnE0T,EAAE,0BAA0B2B,IAAI,SAC1BmrB,KAEN,MAAM1wB,QAAckwB,KACdlpB,EAAOhH,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GACnC2lB,EAAOzrB,aAAI,EAAJA,EAAM5S,OAAOimB,MAAMgZ,MAAM,EACjC,MAGDb,EAAG,+DAA+D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC3E0T,EAAE,0BAA0B2B,IAAI,SAC1BmrB,KAEN,MAAM1wB,QAAckwB,KACdlpB,EAAOhH,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GACnC2lB,EAAOzrB,aAAI,EAAJA,EAAM5S,OAAO+V,WAAWkpB,MAAM,EACtC,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAIJ8lB,EAAS,uBAAuB,KAC9BG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAK,EAALA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,YAC7C0+B,GAAoBnxB,EAAO,eAC3B0wB,KACN1wB,SAAAA,EAAO5N,MAAM0a,SAAS,GAAGvG,OAAO,CAAEnS,OAAQ,CAAEimB,KAAM,EAAGlQ,UAAW,KACpD,QAAZwL,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,EACtB,MAEDm0B,EAAG,qDAAqD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACjE,MAAM8P,QAAckwB,KAEpBtsB,EAAE,+BAA+B4B,QAAQ,eACnCkrB,KAEN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOimB,MAAMgZ,MAC3CrzB,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAO+V,UAEnC,MAEDwgB,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAKJ8lB,EAAS,wBAAwB,KAE/B,MAAM6I,EAAuBb,GAAerqC,OAAA,OAAA,OAAA,GAAA,YAC1C0T,EAAE,iBAAiB22B,kBAAoB/0B,QAAQ,eACzC4qB,GAAM,IACd,IAEAsC,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,YAChB4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,wBAAwB,SACpDu4B,IACP,MAED4G,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACb4hC,GAAmBrlB,UACnB6jB,IACP,MAEDkC,EAAG,uDAAuD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,wBAEnEuiC,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,GAGlC,MAAMrzB,QAAcixB,GAAmB,UAAW,CAAE,EAAExkB,UAChD0kB,GAAoBnxB,EAAO,gBAC3B0wB,WACA1wB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAGvG,OAAO,CACpCnS,OAAQ,CAAEgW,QAAS,CAAEzZ,MAAO,EAAGuB,IAAK,MAEtCugC,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GACpB,QAAZ5Z,EAAAzZ,aAAK,EAALA,EAAOwG,aAAK,IAAAiT,GAAAA,EAAEpb,QAAO,SACfqyB,WACA0K,EAAc,cAGpB3I,EAAoB,QAAb3L,EAAAhvB,KAAKuoB,gBAAQ,IAAAyG,OAAA,EAAAA,EAAEtD,MAAM6P,MAAM,GAClCZ,UAAOpL,EAAAvvB,KAAKuoB,+BAAUvT,SAAS,GAAGrO,SAASw0B,QACzC,+CAEFR,EAAOzyB,aAAK,EAALA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOgW,QAAQzZ,OAAO0iC,MAAM,EAC7D,MAEDb,EAAG,4CAA4C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,wBAExDuiC,EAAoB,QAAbT,EAAAl6B,KAAKuoB,gBAAQ,IAAA2R,OAAA,EAAAA,EAAExO,MAAM6P,MAAM,GAGlC,MAAMrzB,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClD0kB,GAAoBnxB,EAAO,gBAC3B0wB,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GACpB,QAAZnB,EAAAlyB,aAAK,EAALA,EAAOwG,aAAK,IAAA0rB,GAAAA,EAAE7zB,QAAO,SACfqyB,WACA0K,EAAc,aAIpB3I,EAAoB,QAAbmG,EAAA9gC,KAAKuoB,gBAAQ,IAAAuY,OAAA,EAAAA,EAAEpV,MAAM6P,MAAM,GAClCZ,UAAOoG,EAAA/gC,KAAKuoB,+BAAUvT,SAAS,GAAGrO,SAASw0B,QACzC,8CAEH,MAEDT,EAAG,4CAA4C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,wBAExDuiC,EAAoB,QAAbqG,EAAAhhC,KAAKuoB,gBAAQ,IAAAyY,OAAA,EAAAA,EAAEtV,MAAM6P,MAAM,GAGlC,MAAMrzB,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAK,EAALA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,YAC7C0+B,GAAoBnxB,EAAO,eAC3B0wB,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GACpB,QAAZ0F,EAAA/4B,aAAK,EAALA,EAAOwG,aAAK,IAAAuyB,GAAAA,EAAE16B,QAAO,SACfqyB,WACA0K,EAAc,UAGpB3I,EAAoB,QAAbuG,EAAAlhC,KAAKuoB,gBAAQ,IAAA2Y,OAAA,EAAAA,EAAExV,MAAM6P,MAAM,GAClCZ,UAAOwG,EAAAnhC,KAAKuoB,+BAAUvT,SAAS,GAAGrO,SAASw0B,QACzC,gCAEH,MAEDT,EAAG,2CAA2C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,wBAEvDuiC,EAAoB,QAAbyG,EAAAphC,KAAKuoB,gBAAQ,IAAA6Y,OAAA,EAAAA,EAAE1V,MAAM6P,MAAM,GAGlC,MAAMrzB,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAK,EAALA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,YAC7C0+B,GAAoBnxB,EAAO,iBAC3B0wB,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,SAC1BrzB,aAAK,EAALA,EAAO5N,MAAM0a,SAAS,GAAGvG,OAAO,CAAEnS,OAAQ,CAAEmJ,KAAM,eAClDmzB,KACN+B,EAAOzyB,eAAAA,EAAO5N,MAAM0a,SAAS,GAAG1Y,OAAOmJ,MAAM81B,MAAM,OACvC,QAAZ8F,EAAAn5B,aAAK,EAALA,EAAOwG,aAAK,IAAA2yB,GAAAA,EAAE96B,QAAO,SACfqyB,WACA0K,EAAc,aAGpB3I,EAAoB,QAAbkH,EAAA7hC,KAAKuoB,gBAAQ,IAAAsZ,OAAA,EAAAA,EAAEnW,MAAM6P,MAAM,GAClCZ,UAAOmH,EAAA9hC,KAAKuoB,+BAAUvT,SAAS,GAAGrO,SAASw0B,QACzC,uCAEH,MAEDT,EAAG,0DAA0D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,sBAEtEuiC,EAAoB,QAAboH,EAAA/hC,KAAKuoB,gBAAQ,IAAAwZ,OAAA,EAAAA,EAAErW,MAAM6P,MAAM,GAGlC,MAAMrzB,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAK,EAALA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,YAC7C0+B,GAAoBnxB,EAAO,eAC3B0wB,KACN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GACpB,QAAZyG,EAAA95B,aAAK,EAALA,EAAOwG,aAAK,IAAAszB,GAAAA,EAAEz7B,QAAO,SACfqyB,WACA0K,EAAc,aAGpB3I,EAAoB,QAAbsH,EAAAjiC,KAAKuoB,gBAAQ,IAAA0Z,OAAA,EAAAA,EAAEvW,MAAM6P,MAAM,EACnC,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnB6jB,IACP,KAAC,IAIJiC,EAAS,oBAAoB,KAC3B,MAAM1W,EAAQ,CAAC,QAAS,OAAQ,YAAa,SAAU,SAEjDwf,EAAmB3wB,GAAgBxa,OAAA,OAAA,OAAA,GAAA,YACvC0T,EAAE,gBAAgB8G,QAAWlF,QAAQ,eAC/B4qB,GAAM,IACd,IAEAmC,EAAS,sBAAsB,KAC7BG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,kBAClDkJ,EAAA3V,aAAA,EAAAA,EAAOwG,4BAAOnI,QAAO,GAC3BvG,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,wBAAwB,SACpDu4B,WACAF,GAAM,IACb,MAEDvU,EAAMxU,SAASqD,IACb8nB,EAAG,GAAG9nB,UAAa,IAAWxa,OAAA,OAAA,OAAA,GAAA,4BACtBogC,WACAF,GAAM,KACZqC,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BgI,EAAU3wB,GAChB+nB,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,GAClCZ,EAAsB,UAAf36B,KAAKuoB,gBAAU,IAAAyG,OAAA,EAAAA,EAAAha,SAAS,GAAGrO,SAASw0B,QACzCn7B,KAAKwI,KAAKC,OAAO,gBAAiB,CAChCmK,KAAM5S,KAAKwI,KAAKuB,SAAS,aAAa6I,YAG3C,KAAC,IAGJigB,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnB6jB,WACAF,GAAM,IACb,KAAC,IAGJmC,EAAS,oBAAoB,KAC3BG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAcixB,GAAmB,UAAW,CAAE,EAAExkB,kBAChDkJ,EAAA3V,aAAA,EAAAA,EAAOwG,4BAAOnI,QAAO,EAC5B,MAEDwd,EAAMxU,SAASqD,IACb8nB,EAAG,GAAG9nB,UAAa,IAAWxa,OAAA,OAAA,OAAA,GAAA,4BACtBogC,WACAF,GAAM,KACZqC,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAC5BgI,EAAU3wB,GAChB+nB,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,GAClCZ,EAAsB,UAAf36B,KAAKuoB,gBAAU,IAAAyG,OAAA,EAAAA,EAAAha,SAAS,GAAGrO,SAASw0B,QACzCn7B,KAAKwI,KAAKC,OAAO,gBAAiB,CAChCmK,KAAM5S,KAAKwI,KAAKuB,SAAS,aAAa6I,YAG3C,KAAC,IAGJigB,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnB6jB,WACAF,GAAM,IACb,KAAC,GACF,IAIJmC,EAAS,sBAAsB,KAO7BG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,wBAAwB,GAC1D,MAAMiI,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,IAC5C,QAAZkJ,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,SACfiyB,IACP,MAXyB,CAAC,QAAS,WAalBjpB,SAASi0B,IACzB9I,EAAG,mBAAmB8I,KAAe,IAAWprC,OAAA,OAAA,OAAA,GAAA,sBAC9C,MAAM8P,QAAckwB,KAdJ,IAAOtlB,EAevB6nB,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,SAfXzoB,EAgBL0wB,EAhBuBprC,OAAA,OAAA,OAAA,GAAA,YAC3C0T,EAAE,kBAAkBgH,QAAapF,QAAQ,eACnC4qB,GAAM,IACd,KAcIqC,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,GAClCZ,UAAO3L,EAAAhvB,KAAKuoB,+BAAUvT,SAAS,GAAGrO,SAASw0B,QACzCn7B,KAAKwI,KAAKC,OAAO,mBAAoB,CAAEuC,KAAM9C,aAAK,EAALA,EAAO8C,cAEhDwtB,IACP,KAAC,IAGJ3F,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAMJ,MAcM8uB,EAA8B,CAClCC,EACAppC,iBAEAqgC,EAAOrgC,EAAM2Y,OAAO/D,MAAM+rB,IAAI7b,UAC9Bub,EAA0B,QAAnB9c,EAAAvjB,EAAM2Y,OAAO/D,YAAM,IAAA2O,OAAA,EAAAA,EAAAsa,cAAcoD,MAAM,QAC9CZ,EAA0B,QAAnBhZ,EAAArnB,EAAM2Y,OAAO/D,YAAM,IAAAyS,OAAA,EAAAA,EAAA3W,MAAMuwB,MAAMmI,GAGtC/I,EAAwB,QAAjB3L,EAAA10B,EAAM2Y,OAAO/D,YAAI,IAAA8f,OAAA,EAAAA,EAAE1yB,OAAOqV,aAAa4pB,MAAM,IACpDZ,EAA0B,QAAnBpL,EAAAj1B,EAAM+M,OAAO6H,YAAM,IAAAqgB,OAAA,EAAAA,EAAAjzB,OAAOuV,QAAQ/I,QAAQyyB,MAAM,EAAE,EAGrDoI,EAA+B,CACnCC,EACAtpC,2BAGAqgC,EAA0B,QAAnB9c,EAAAvjB,EAAM+M,OAAO6H,YAAM,IAAA2O,OAAA,EAAAA,EAAAvhB,OAAOuV,QAAQ/I,QAAQyyB,MAAM,GACvDZ,EAAwB,QAAjBhZ,EAAArnB,EAAM+M,OAAO6H,YAAI,IAAAyS,OAAA,EAAAA,EAAErlB,OAAOuV,SAASspB,QAAyB,QAAjBnM,EAAA10B,EAAM2Y,OAAO/D,YAAI,IAAA8f,OAAA,EAAAA,EAAE/uB,IACrE06B,EAAwB,QAAjBpL,EAAAj1B,EAAM2Y,OAAO/D,YAAI,IAAAqgB,OAAA,EAAAA,EAAEjzB,OAAOqV,aAAa4pB,MAAuB,QAAjBrB,EAAA5/B,EAAM+M,OAAO6H,YAAI,IAAAgrB,OAAA,EAAAA,EAAEj6B,IAGvE,MAAM67B,EACwB,WAAX,QAAjB1B,EAAA9/B,EAAM2Y,OAAO/D,YAAI,IAAAkrB,OAAA,EAAAA,EAAEr+B,gBACfzB,EAAM2Y,OAAO/D,2BAAMnT,KACnB,GAAoB,QAAjBglC,EAAAzmC,EAAM2Y,OAAO/D,YAAI,IAAA6xB,OAAA,EAAAA,EAAEhlC,QACtBgwB,EAAoB,eAAX+P,EAA0B,EAAI,EAC7CnB,UAAOqG,EAAA4C,EAAU17B,4BAAO5L,OAAOw/B,GAAQhzB,QAAQyyB,MAAMxP,EAAO,EAI9D0O,EAAS,qCAAqC,KAI5CJ,GAAU9qB,SAASoW,IAEjB,GAAiB,UAAbA,EAAsB,OAC1B,GAAiB,YAAbA,EAAwB,OAE5B,MAAMie,EAAgC,CAAA,EAChCtpC,EAAwB,CAC5B2Y,OAAQ,CAAmB,EAC3B5L,OAAQ,CAAmB,GAG7BuzB,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,YAChBwrC,EAAU17B,YAAcixB,GAAmB,YAAa,CAAA,EAAIxkB,KAG3Dra,EAAM+M,OAAO6H,YAAcmqB,GAC1BuK,EAAU17B,MACV,YACA,kBAEH,MAEDwyB,EAAG,OAAO/U,kBAAyB,IAAWvtB,OAAA,OAAA,OAAA,GAAA,oBAxEpB,EAC5BwrC,EACAtpC,eAGAqgC,EAAOiJ,EAAU17B,OAAO+yB,IAAI7b,UAC5Bub,EAAsB,QAAf9c,EAAA+lB,EAAU17B,aAAK,IAAA2V,OAAA,EAAAA,EAAEsa,cAAcoD,MAAM,SAG5CZ,EAAOrgC,EAAM+M,OAAO6H,MAAM+rB,IAAI7b,UAC9Bub,EAA0B,QAAnBhZ,EAAArnB,EAAM+M,OAAO6H,YAAM,IAAAyS,OAAA,EAAAA,EAAAwW,cAAcoD,MAAM,QAC9CZ,EAA0B,QAAnB3L,EAAA10B,EAAM+M,OAAO6H,YAAM,IAAA8f,OAAA,EAAAA,EAAAhkB,MAAMuwB,MAAM,kBAAkB,EA8DpDsI,CAAsBD,EAAWtpC,IAGhCA,EAAM2Y,OAAO/D,YAAcmqB,GAC1BuK,EAAU17B,MACVyd,GAIF,MAAM+d,EAAiB,kBAAkB/d,EAASvO,eAClDqsB,EAA4BC,EAAgBppC,SAId,QAAxBqnB,EAAiB,QAAjB9D,EAAA+lB,EAAU17B,aAAO,IAAA2V,OAAA,EAAAA,EAAAnP,aAAO,IAAAiT,OAAA,EAAAA,EAAA9L,oBAC5Bvb,EAAM2Y,OAAO/D,KACb5U,EAAM+M,OAAO6H,MAIfy0B,EAA6BC,EAAWtpC,EACzC,MAEDu4B,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,GACF,IAIJ8lB,EAAS,2CAA2C,KAIlDJ,GAAU9qB,SAASoW,IAEjB,GAAiB,UAAbA,EAAsB,OAC1B,GAAiB,YAAbA,EAAwB,OAE5B,MAAMie,EAAgC,CAAA,EAChCtpC,EAAwB,CAC5B2Y,OAAQ,CAAmB,EAC3B5L,OAAQ,CAAmB,GAG7BuzB,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,oBAChBwrC,EAAU17B,YAAcixB,GAAmB,YAAa,CAAA,EAAIxkB,KAG3Dra,EAAM+M,OAAO6H,YAAcmqB,GAC1BuK,EAAU17B,MACV,YACA,oBAID5N,EAAM2Y,OAAO/D,YAAcmqB,GAC1BuK,EAAU17B,MACVyd,SAK4B,QAAxBhE,EAAiB,QAAjB9D,EAAA+lB,EAAU17B,aAAO,IAAA2V,OAAA,EAAAA,EAAAnP,aAAO,IAAAiT,OAAA,EAAAA,EAAA9L,oBAC5Bvb,EAAM2Y,OAAO/D,KACb5U,EAAM+M,OAAO6H,KAEhB,MAEDwrB,EAAG,UAAU/U,oBAA2B,IAAWvtB,OAAA,OAAA,OAAA,GAAA,oBAEjDurC,EAA6BC,EAAWtpC,SAIV,QAAxBi1B,EAAiB,QAAjBP,EAAA4U,EAAU17B,aAAO,IAAA8mB,OAAA,EAAAA,EAAAtgB,aAAO,IAAA6gB,OAAA,EAAAA,EAAA3Z,uBAC5Btb,EAAM2Y,OAAO/D,KACb5U,EAAM+M,OAAO6H,MAIf,MAAMw0B,EAAiB,kBAAkB/d,EAASvO,eAClDqsB,EAA4BC,EAAgBppC,EAC7C,MAEDu4B,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,GACF,IAIJ8lB,EAAS,mDAAmD,KAI1DJ,GAAU9qB,SAASoW,IAEjB,GAAiB,UAAbA,EAAsB,OAC1B,GAAiB,YAAbA,EAAwB,OAE5B,MAAMie,EAAgC,CAAA,EAChCtpC,EAAwB,CAC5B2Y,OAAQ,CAAmB,EAC3B5L,OAAQ,CAAmB,GAG7BuzB,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,YAChBwrC,EAAU17B,YAAcixB,GAAmB,YAAa,CAAA,EAAIxkB,GAC7D,MAED+lB,EAAG,iBAAiB/U,cAAqB,IAAWvtB,OAAA,OAAA,OAAA,GAAA,sBAElDkC,EAAM2Y,OAAO/D,WAAckqB,GAAoBzT,GAC/C,MAAM+d,EAAiBppC,EAAM2Y,OAAO/D,KAAKlE,MAAQ,aAGnB,UAAT,QAAf6S,EAAA+lB,EAAU17B,aAAK,IAAA2V,OAAA,EAAAA,EAAEnP,aAAO,IAAAiT,OAAA,EAAAA,EAAAxM,kBAAkB,CAAC7a,EAAM2Y,OAAO/D,OAG9D5U,EAAM2Y,OAAO/D,KAAsB,UAAf00B,EAAU17B,aAAK,IAAA8mB,OAAA,EAAAA,EAAE10B,MAAMs/B,QACzC8J,GAGF/I,EAAOrgC,EAAM2Y,OAAO/D,MAAM+rB,IAAI7b,SAC/B,MAEDyT,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,GACF,IAGJ8lB,EAAS,4BAA4B,KACnC,MAAMqJ,EAAiB,CAAC,SAAU,QAAS,SAAU,QAErDpJ,EAAG,8BAA8B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAC1C,MAAM8P,QAAcixB,GAAmB,UAAW,CAAE,EAAExkB,IAE1C,QAAZkJ,EAAA3V,aAAA,EAAAA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEvG,wBACRshB,KAEN,MAAMmL,EAAU/K,KAChB2B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,GAE7BuI,EAAev0B,SAASiM,IACtBmf,EAAOoJ,EAAQ,GAAGn/B,KAAK+B,SAASw0B,QAAQ,kBAAkB3f,KAAU,UAEhEuoB,EAAQ,GAAGx5B,OAClB,MAEDmwB,EAAG,4BAA4B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACxC,MAAM4rC,EAAgB,CAAC,OAAQ,QAAS,SAClC97B,QAAeixB,GAAmB,UAAW,CAAE,EAAExkB,IAE3C,QAAZgN,EAAAzZ,aAAK,EAALA,EAAOwG,aAAK,IAAAiT,GAAAA,EAAErK,gBAAgB0sB,SACxBpL,KAEN,MAAMmL,EAAU/K,KAChB2B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,GAE7ByI,EAAcz0B,SAASiM,IACrBmf,EAAOoJ,EAAQ,GAAGn/B,KAAK+B,SAASw0B,QAAQ,kBAAkB3f,KAAU,UAEhEuoB,EAAQ,GAAGx5B,OAClB,MAED60B,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACb6gC,WACAe,GAAmBrlB,GAC1B,KAAC,IAIJ8lB,EAAS,sBAAsB,KAC7BJ,GAAU9qB,SAASoW,IACjB+U,EAAG,cAAc/U,KAAY,IAAWvtB,OAAA,OAAA,OAAA,GAAA,kBACtC,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAK,EAALA,EAAOuG,OAAO,CAAEnS,OAAQ,CAAEie,OAAQ,CAAE5f,SAAS,oBAC7CkjB,EAAA3V,aAAA,EAAAA,EAAOwG,4BAAOnI,QAAO,SACrB+xB,GAAM,KACZqC,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,GAEhCzvB,EAAE,kCAAkC6Z,OAAcjY,QAAQ,eACpDkrB,KAEN+B,EAAOzyB,aAAK,EAALA,EAAO5N,MAAMoxB,MAAM6P,MAAM,EACjC,KAAC,IAGJ6D,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACb4hC,GAAmBrlB,GAC1B,KAAC,IAIJ8lB,EAAS,8BAA8B,KACrC,MAAMwJ,EAAiB,CAACtxB,EAA2BuxB,KACjDvxB,EAAQ9Z,MAAQsrC,OAAOjyB,SAASS,EAAQ9Z,MAAO,IAAMqrC,GACrD,MAAMl3B,EAAQ,IAAIo3B,WAAW,UAC7BzxB,EAAQ0xB,cAAcr3B,EAAM,EAG9B0tB,EAAG,2BAA2B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACvC,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,IAC5C,QAAZkJ,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,GACrB,MAAO2I,SAAemqB,GACpBnxB,EACA,QAEFgH,EAAKT,OAAO,CAAEnS,OAAQ,CAAEE,SAAU,CAAE3D,MAAO,EAAGuB,IAAK,YAC7Cw+B,KAEN,MAAM0L,EAAkBvoB,SAAS7R,cAC/B,8BAA8BgF,EAAKjP,kCAGrC06B,EAAOzrB,EAAK5S,OAAOE,SAAS3D,OAAO0iC,MAAM,GACzC0I,EAAeK,EAAiB,SAC1B1L,KACN+B,EAAOzrB,EAAK5S,OAAOE,SAAS3D,OAAO0iC,MAAM,EAC1C,MAEDb,EAAG,kCAAkC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAC9C,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,IAC5C,QAAZgN,EAAAzZ,aAAK,EAALA,EAAOwG,aAAK,IAAAiT,GAAAA,EAAEpb,QAAO,GACrB,MAAO2I,SAAemqB,GACpBnxB,EACA,QAEFgH,EAAKT,OAAO,CAAEnS,OAAQ,CAAEE,SAAU,CAAE3D,MAAO,EAAGuB,IAAK,YAC7Cw+B,KAEN,MAAM0L,EAAkBvoB,SAAS7R,cAC/B,8BAA8BgF,EAAKjP,kCAGrC06B,EAAOzrB,EAAK5S,OAAOE,SAAS3D,OAAO0iC,MAAM,GACzC0I,EAAeK,GAAkB,SAC3B1L,KACN+B,EAAOzrB,EAAK5S,OAAOE,SAAS3D,OAAO0iC,MAAM,EAC1C,MAED6D,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACb4hC,GAAmBrlB,GAC1B,KAAC,IAIJ8lB,EAAS,yBAAyB,SAElCA,EAAS,oBAAoB,SAG7BA,EAAS,4BAA4B,KACnC,CAAC,YAAa,WAAWlrB,SAASsb,IAChC6P,EAAG,6BAA6B7P,KAAa,IAAWzyB,OAAA,OAAA,OAAA,GAAA,kBACtD,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,kBAClDkJ,EAAA3V,aAAA,EAAAA,EAAOwG,4BAAOnI,QAAO,SACrB+xB,GAAM,KAEZxsB,EAAE,oBAAoB4B,QAAQ,eACxB4qB,GAAM,KAEZ,MAAMS,EAAUF,GAAY,gBAC5B8B,EAAO5B,EAAQjwB,QAAQyyB,MAAM,GAC7BxC,EAAQ,GAAGxuB,OACZ,KAAC,IAGJ60B,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACb4hC,GAAmBrlB,GAC1B,KAAC,IAIJ8lB,EAAS,uBAAuB,QAAS,ECjsCpC,MAAM9lB,GAAM,gCACN9Y,GAAU,CACrBy+B,YAAa,oCACbmF,aAAa,GAkCT8E,GAA0BjqC,GAAyBlC,OAAA,OAAA,OAAA,GAAA,oBACvD,MAAMosC,EAAqB,IAAIC,UAAU,YAAa,CACpDlwB,aAAc,IAAImwB,aAClBC,SAAS,EACTC,YAAY,YAEd/mB,EAAAvjB,EAAM2Y,OAAO4xB,4BAAaR,cAAcG,GAExC,MAAMM,EAAgB,IAAIL,UAAU,OAAQ,CAC1ClwB,aAAciwB,EAAmBjwB,aACjCowB,SAAS,EACTC,YAAY,YAEdjjB,EAAArnB,EAAM+M,OAAOw9B,4BAAaR,cAAcS,EAC1C,IAEA,IAAAC,GAAe,EACbtK,WACAC,KACAC,SACA9H,QACAuM,YACA4F,iBAEAvK,EAAS,uBAAuB,KAC9BC,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAChD,MAAM8P,QAAeixB,GACnB,YACA,CAAE,EACFxkB,IAEFgmB,EAAOzyB,GAAO+yB,IAAI7b,gBAEC,QAAbvB,EAAA3V,EAAMwG,aAAO,IAAAmP,OAAA,EAAAA,EAAAtX,QAAO,GAE1B,MAAO2I,SAAcmqB,GAAoBnxB,EAAO,UAChDyyB,EAAOzrB,GAAM+rB,IAAI7b,gBACXwZ,KAEN,MAAMiM,EAAc9oB,SAAS7R,cAC3B,2CAA2CgF,eAAAA,EAAMjP,QAEnD06B,EAAOkK,GAAa5J,IAAI2G,KAExB,MAAM50B,EAtDQ,CAACi4B,IACnB,MAAMT,EAAqB,IAAIC,UAAU,YAAa,CACpDlwB,aAAc,IAAImwB,aAClBC,SAAS,EACTC,YAAY,IAGd,OADAK,SAAAA,EAAeZ,cAAcG,GACtBA,CAAkB,EA+CPU,CAAYL,GACpBM,EAAahqB,WAAWiqB,iBAAiBp4B,GAC/C2tB,EAAOj/B,OAAOomB,KAAKqjB,IAAahK,QAAQ,OACzC,MAEDtI,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAIJ8lB,EAAS,4BAA4B,SAErCA,EAAS,iEAAiE,KAKxE,MAqBMoJ,EAAwB,CAC5BD,EACAtpC,mBAGAqgC,EAAOiJ,EAAU17B,OAAO+yB,IAAI7b,UAC5Bub,EAAsB,QAAf9c,EAAA+lB,EAAU17B,aAAK,IAAA2V,OAAA,EAAAA,EAAEsa,cAAcoD,MAAM,SAG5CZ,EAAOiJ,EAAUyB,YAAYpK,IAAI7b,UACjCub,EAA2B,QAApBhZ,EAAAiiB,EAAUyB,kBAAU,IAAA1jB,OAAA,EAAAA,EAAEwW,cAAcoD,MAAM,QAGjDZ,EAAOrgC,EAAM+M,OAAO6H,MAAM+rB,IAAI7b,UAC9Bub,EAA0B,QAAnB3L,EAAA10B,EAAM+M,OAAO6H,YAAM,IAAA8f,OAAA,EAAAA,EAAAmJ,cAAcoD,MAAM,QAC9CZ,EAA0B,QAAnBpL,EAAAj1B,EAAM+M,OAAO6H,YAAM,IAAAqgB,OAAA,EAAAA,EAAAvkB,MAAMuwB,MAAM,mBAGtCZ,EAAOrgC,EAAM+M,OAAOw9B,aAAa5J,IAAI2G,KACrCjH,EAA+B,QAAxBT,EAAA5/B,EAAM+M,OAAOw9B,mBAAW,IAAA3K,OAAA,EAAAA,EAAEhgC,YAAY8Q,MAAMuwB,MAAM,gBAAgB,EAGrEkI,EAA8B,CAClCC,EACAppC,mBAEAqgC,EAAOrgC,EAAM2Y,OAAO/D,MAAM+rB,IAAI7b,UAC9Bub,EAA0B,QAAnB9c,EAAAvjB,EAAM2Y,OAAO/D,YAAM,IAAA2O,OAAA,EAAAA,EAAAsa,cAAcoD,MAAM,QAC9CZ,EAA0B,QAAnBhZ,EAAArnB,EAAM2Y,OAAO/D,YAAM,IAAAyS,OAAA,EAAAA,EAAA3W,MAAMuwB,MAAMmI,GAEtC/I,EAAOrgC,EAAM2Y,OAAO4xB,aAAa5J,IAAI2G,KACrCjH,EAA+B,QAAxB3L,EAAA10B,EAAM2Y,OAAO4xB,mBAAW,IAAA7V,OAAA,EAAAA,EAAE90B,YAAY8Q,MAAMuwB,MAAM,iBAGzDZ,EAAwB,QAAjBpL,EAAAj1B,EAAM2Y,OAAO/D,YAAI,IAAAqgB,OAAA,EAAAA,EAAEjzB,OAAOqV,aAAa4pB,MAAM,IACpDZ,EAA0B,QAAnBT,EAAA5/B,EAAM+M,OAAO6H,YAAM,IAAAgrB,OAAA,EAAAA,EAAA59B,OAAOuV,QAAQ/I,QAAQyyB,MAAM,EAAE,EAGrDoI,EAA+B,CACnCC,EACAtpC,2BAGAqgC,EAA0B,QAAnB9c,EAAAvjB,EAAM+M,OAAO6H,YAAM,IAAA2O,OAAA,EAAAA,EAAAvhB,OAAOuV,QAAQ/I,QAAQyyB,MAAM,GACvDZ,EAAwB,QAAjBhZ,EAAArnB,EAAM+M,OAAO6H,YAAI,IAAAyS,OAAA,EAAAA,EAAErlB,OAAOuV,SAASspB,QAAyB,QAAjBnM,EAAA10B,EAAM2Y,OAAO/D,YAAI,IAAA8f,OAAA,EAAAA,EAAE/uB,IACrE06B,EAAwB,QAAjBpL,EAAAj1B,EAAM2Y,OAAO/D,YAAI,IAAAqgB,OAAA,EAAAA,EAAEjzB,OAAOqV,aAAa4pB,MAC3B,QAAjBrB,EAAA5/B,EAAM+M,OAAO6H,YAAI,IAAAgrB,OAAA,EAAAA,EAAEj6B,IAIrB,MAAM67B,EACwB,WAAX,QAAjB1B,EAAA9/B,EAAM2Y,OAAO/D,YAAI,IAAAkrB,OAAA,EAAAA,EAAEr+B,gBACfzB,EAAM2Y,OAAO/D,2BAAMnT,KACnB,GAAoB,QAAjBglC,EAAAzmC,EAAM2Y,OAAO/D,YAAI,IAAA6xB,OAAA,EAAAA,EAAEhlC,QACtBgwB,EAAoB,eAAX+P,EAA0B,EAAI,EAC7CnB,UAAOqG,EAAA4C,EAAU17B,4BAAO5L,OAAOw/B,GAAQhzB,QAAQyyB,MAAMxP,EAAO,EAO9D2O,EAAG,iFAAiF,IAAWtiC,OAAA,OAAA,OAAA,GAAA,wCAC7F,MAAMkC,EAAwB,CAC5B2Y,OAAQ,CAAmB,EAC3B5L,OAAQ,CAAmB,GAIvBa,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,KACvDra,EAAM+M,OAAO6H,YAAcmqB,GAC1BnxB,EACA,YACA,oBAED5N,EAAM2Y,OAAO/D,YAAcmqB,GAAoBnxB,EAAO,UAG3C,QAAZyZ,EAAAzZ,aAAK,EAALA,EAAOwG,aAAK,IAAAiT,GAAAA,EAAEpb,QAAO,SACfqyB,KAGNt+B,EAAM2Y,OAAO4xB,YAAc9oB,SAAS7R,cAClC,2CAA+D,UAAR,QAAZ8kB,EAAA10B,EAAM2Y,cAAM,IAAA+b,OAAA,EAAAA,EAAE9f,YAAM,IAAAqgB,OAAA,EAAAA,EAAAtvB,QAEjE3F,EAAM+M,OAAOw9B,YAAc9oB,SAAS7R,cAClC,2CAA+D,UAAR,QAAZgwB,EAAA5/B,EAAM+M,cAAM,IAAA6yB,OAAA,EAAAA,EAAEhrB,YAAM,IAAAkrB,OAAA,EAAAA,EAAAn6B,QAIjEwjC,EAA4B,wBAAyBnpC,SAC/CiqC,GAAiBjqC,SACjBs+B,KAGN+B,EAA0B,QAAnBmG,EAAAxmC,EAAM+M,OAAO6H,YAAM,IAAA4xB,OAAA,EAAAA,EAAAxkC,OAAOuV,QAAQ/I,QAAQyyB,MAAM,GACvDZ,EAAwB,QAAjBoG,EAAAzmC,EAAM+M,OAAO6H,YAAI,IAAA6xB,OAAA,EAAAA,EAAEzkC,OAAOuV,SAASspB,QAAyB,QAAjB6F,EAAA1mC,EAAM2Y,OAAO/D,YAAI,IAAA8xB,OAAA,EAAAA,EAAE/gC,IACrE06B,EAAwB,QAAjBsG,EAAA3mC,EAAM2Y,OAAO/D,YAAI,IAAA+xB,OAAA,EAAAA,EAAE3kC,OAAOqV,aAAa4pB,MAC3B,QAAjB2F,EAAA5mC,EAAM+M,OAAO6H,YAAI,IAAAgyB,OAAA,EAAAA,EAAEjhC,IAIrB3F,EAAM2Y,OAAO4xB,YAAcvqC,EAAM+M,OAAOw9B,YACxCvqC,EAAM2Y,OAAO/D,KAAO5U,EAAM+M,OAAO6H,WAG3Bq1B,GAAiBjqC,SACjBs+B,KAGN,MAAM0M,EAAevpB,SAAS7R,cAC5B,mDAA2Ck3B,EAAc,QAAdD,EAAA7mC,EAAM+M,cAAQ,IAAA85B,OAAA,EAAAA,EAAAjyB,2BAAMjP,QAEjE06B,EAAO2K,GAAcrK,IAAI2G,IAC1B,MAKDvH,GAAU9qB,SAASoW,IAEjB,GAAiB,UAAbA,EAAsB,OAC1B,GAAiB,YAAbA,EAAwB,OAG5B,MAAMie,EAAgC,CAAA,EAChCtpC,EAAwB,CAC5B2Y,OAAQ,CAAmB,EAC3B5L,OAAQ,CAAmB,GAG7BozB,EAAS,gBAAgB9U,eAAsB,KAC7Cqf,GAAW,IAAW5sC,OAAA,OAAA,OAAA,GAAA,wBAEpBwrC,EAAU17B,YAAcixB,GAAmB,YAAa,CAAA,EAAIxkB,IAC5DivB,EAAUyB,gBA5Ja,CAC3BtpC,GAEE3D,OAAA,OAAA,OAAA,GAAA,YAEF,OAAAmtC,qBAAqBC,iBAAiB,CACpC3hC,MAAO,kBACPmH,KAAM,iBACNjP,OACA0pC,KAAM,GACNC,SAAS,EACTC,QAAS,aAiJsBC,CAAqB,SAGjDtrC,EAAM+M,OAAO6H,YAAcmqB,GAC1BuK,EAAU17B,MACV,YACA,mBAIoB,QAAtByZ,EAAe,QAAf9D,EAAA+lB,EAAU17B,aAAK,IAAA2V,OAAA,EAAAA,EAAEnP,aAAK,IAAAiT,GAAAA,EAAEpb,QAAO,GACX,QAApByoB,EAAA4U,EAAUyB,kBAAU,IAAArW,GAAAA,EAAEzoB,QAAO,SACvBqyB,KAGNt+B,EAAM+M,OAAOw9B,YAAc9oB,SAAS7R,cAClC,qDAA2C5P,EAAM+M,OAAO6H,2BAAMjP,OAEjE,MAEDy6B,EAAG,QAAQ/U,4DAAmE,IAAWvtB,OAAA,OAAA,OAAA,GAAA,kBACvFyrC,EAAsBD,EAAWtpC,IAGhCA,EAAM2Y,OAAO/D,YAAcmqB,GAC1BuK,EAAU17B,MACVyd,SAIIiT,KAGNt+B,EAAM2Y,OAAO4xB,YAAc9oB,SAAS7R,cAClC,qDAA2C5P,EAAM2Y,OAAO/D,2BAAMjP,QAIhE,MAAMyjC,EAAiB,kBAAkB/d,EAASvO,eAClDqsB,EAA4BC,EAAgBppC,SAGtCiqC,GAAiBjqC,SACjBs+B,KAGN+K,EAA6BC,EAAWtpC,EACzC,MAEDogC,EAAG,QAAQ/U,6DAAoE,IAAWvtB,OAAA,OAAA,OAAA,GAAA,sBACxFyrC,EAAsBD,EAAWtpC,GAGjCA,EAAM2Y,OAAO/D,WAAckqB,GAAoBzT,SAGzCiT,KAGNt+B,EAAM2Y,OAAO4xB,YAAc9oB,SAAS7R,cAClC,sEAA4D5P,EAAM2Y,OAAO/D,2BAAMjP,QAIjF,MAAMyjC,EAAiB,kBAAkB/d,EAASvO,eAClDqsB,EAA4BC,EAAgBppC,SAGtCiqC,GAAiBjqC,SACjBs+B,KAGNt+B,EAAM2Y,OAAO/D,KAAwB,QAAjB4xB,EAAA8C,EAAU17B,aAAO,IAAA44B,OAAA,EAAAA,EAAAxmC,MAAMs/B,QACxB,QAAjBmH,EAAAzmC,EAAM2Y,OAAO/D,YAAI,IAAA6xB,OAAA,EAAAA,EAAE/1B,MAIrB24B,EAA6BC,EAAWtpC,EACzC,MAEDogC,EAAG,QAAQ/U,2DAAkE,IAAWvtB,OAAA,OAAA,OAAA,GAAA,wBACtFyrC,EAAsBD,EAAWtpC,GAGjC,MAAMurC,QAAmBzM,GAAoBzT,GAC7CrrB,EAAM2Y,OAAO/D,WAAmC,QAAtB8xB,EAAA4C,EAAUyB,kBAAY,IAAArE,OAAA,EAAAA,EAAA8E,eAC9CD,SAIIjN,KAGNt+B,EAAM2Y,OAAO4xB,YAAc9oB,SAAS7R,cAClC,mDAAyC5P,EAAM2Y,OAAO/D,2BAAMjP,QAI9D,MAAMyjC,EAAiB,kBAAkB/d,EAASvO,eAClDqsB,EAA4BC,EAAgBppC,SAGtCiqC,GAAiBjqC,SACjBs+B,KAGNt+B,EAAM2Y,OAAO/D,KAAwB,QAAjBgyB,EAAA0C,EAAU17B,aAAO,IAAAg5B,OAAA,EAAAA,EAAA5mC,MAAMs/B,QACxB,QAAjBuH,EAAA7mC,EAAM2Y,OAAO/D,YAAI,IAAAiyB,OAAA,EAAAA,EAAEn2B,MAIrB24B,EAA6BC,EAAWtpC,EACzC,MAED8kC,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACb4hC,GAAmBrlB,oDA/P7B,OAAsC,QAAtCkJ,EAAA7d,KAAKusB,MAAMzyB,IAAI,+BAAuB,IAAA+jB,OAAA,EAAAA,EAAEkoB,4BAiQ9B9L,IACP,KAAC,GACF,GACF,GACF,ECvXG,MAAMtlB,GAAM,4BACN9Y,GAAU,CAAEy+B,YAAa,gCAEtC,IAAA0L,GAAe,EAAGvL,WAAUC,KAAIC,SAAQ9H,QAAOuM,gBAC7CvM,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBukB,IACP,MAEDuB,EAAS,oBAAoB,KAC3BC,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChD,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,IAClDjG,EAAQxG,aAAA,EAAAA,EAAOwG,MAErBisB,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,OACtCR,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,SACtCR,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,SACtCR,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,aAEtCR,EAAOjsB,EAAM7S,QAAQqJ,UAAUi2B,QAC7B,0CAEFR,EAAOjsB,EAAM7S,QAAQgP,OAAO0wB,MAAM,KAClCZ,EAAOjsB,EAAM7S,QAAQ+b,QAAQ2jB,MAAM,KACnCZ,EAAOjsB,EAAM7S,QAAQ6b,WAAWmkB,GAAGF,KAEnChB,EAAOjsB,EAAM7S,QAAQ6d,KAAK5Q,QAAQyyB,MAAM,GACxCZ,EAAOj/B,OAAOomB,KAAKpT,EAAM7S,QAAQ6d,KAAK,KAAKyhB,QAAQ,eACnDR,EAAOjsB,EAAM7S,QAAQ6d,KAAK,GAAGC,aAAa4hB,MAAM,eAChDZ,EAAOj/B,OAAOomB,KAAKpT,EAAM7S,QAAQ6d,KAAK,KAAKyhB,QAAQ,mBACnDR,EAAOjsB,EAAM7S,QAAQ6d,KAAK,GAAGE,iBAAiB2hB,MAAM,eACpDZ,EAAOj/B,OAAOomB,KAAKpT,EAAM7S,QAAQ6d,KAAK,KAAKyhB,QAAQ,WACnDR,EAAOjsB,EAAM7S,QAAQ6d,KAAK,GAAGG,SAAS0hB,MAAM,cAE5CZ,EAAOjsB,EAAM7S,QAAQie,QAAQhR,QAAQyyB,MAAM,GAC3CZ,EAAOjsB,EAAM7S,QAAQie,QAAQ,IAAIyhB,MAAM,aACxC,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAIJ8lB,EAAS,uBAAuB,SAGhCA,EAAS,oBAAoB,KAC3B,MAAM95B,EAAS,CACbC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GAGPy5B,EAAG,iCAAiC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC7C,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,KAC1CzM,aAAA,EAAAA,EAAOwG,OAEfuM,uBACA2d,KAEN,MAAMG,EAAUF,GAAY,WAC5B8B,EAAO5B,EAAQjwB,QAAQyyB,MAAM,EAC9B,MAEDb,EAAG,0CAA0C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACtD,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,KAC1CzM,aAAA,EAAAA,EAAOwG,OAEfuM,uBACAqd,GAAM,KAEZ,MAAMS,EAAUF,GAAY,WAC5B8B,EAAO5B,EAAQjwB,QAAQyyB,MAAM,GAE7B7/B,OAAOomB,KAAKnhB,GAAQ4O,SAAe3C,GAASxU,OAAA,OAAA,OAAA,GAAA,YAC1C0T,EAAE,4BAA4Bc,oBAAwBc,QAAQ,eACxDkrB,KAEN,MAAMqN,EAAalqB,SAAS7R,cAC1B,4BAA4B0C,0BAExB/T,MAAEA,GAAUotC,EAClBtL,EAAOzoB,SAASrZ,EAAO,IAAM,GAAG0iC,OAAM,EACvC,KACF,MAGDb,EAAG,uCAAuC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACnD,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,KAC1CzM,aAAA,EAAAA,EAAOwG,OAEfuM,uBACAqd,GAAM,KAEZ,MAAMS,EAAUF,GAAY,WAC5B8B,EAAO5B,EAAQjwB,QAAQyyB,MAAM,GAE7B7/B,OAAOomB,KAAKnhB,GAAQ4O,SAAe3C,GAASxU,OAAA,OAAA,OAAA,GAAA,YAC1C0T,EAAE,4BAA4Bc,oBAAwBc,QAAQ,eACxDkrB,KAEN,MAAMqN,EAAalqB,SAAS7R,cAC1B,4BAA4B0C,0BAExB/T,MAAEA,GAAUotC,EAClBtL,EAAOzoB,SAASrZ,EAAO,IAAM,GAAG0iC,OAAM,GACtC56B,EAAOiM,GAASsF,SAASrZ,EAAO,GACjC,MAEDiT,EAAE,0BAA0B4B,QAAQ,gBAC9BkrB,KAEN+B,EAAOzyB,eAAAA,EAAO5L,OAAOqE,OAAOC,IAAI/H,OAAO0iC,MAAM56B,EAAOC,KACpD+5B,EAAOzyB,eAAAA,EAAO5L,OAAOqE,OAAOG,IAAIjI,OAAO0iC,MAAM56B,EAAOG,KACpD65B,EAAOzyB,eAAAA,EAAO5L,OAAOqE,OAAOI,IAAIlI,OAAO0iC,MAAM56B,EAAOI,KACpD45B,EAAOzyB,eAAAA,EAAO5L,OAAOqE,OAAOE,IAAIhI,OAAO0iC,MAAM56B,EAAOE,KACpD85B,EAAOzyB,eAAAA,EAAO5L,OAAOqE,OAAOK,IAAInI,OAAO0iC,MAAM56B,EAAOK,KACpD25B,EAAOzyB,eAAAA,EAAO5L,OAAOqE,OAAOM,IAAIpI,OAAO0iC,MAAM56B,EAAOM,IACrD,MAKDm+B,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,WACAwB,GAAmBrlB,IACTkkB,GAAY,WACpBtpB,SAASnL,GAAMA,EAAEmG,gBACnB+tB,GAAM,IACb,KAAC,IAGJmC,EAAS,aAAa,KACpBC,EAAG,6BAA6B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACzC,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,IAClD/P,QAAyB,QAAZiZ,EAAA3V,aAAA,EAAAA,EAAOwG,aAAK,IAAAmP,OAAA,EAAAA,EAAE5S,UAEjC0vB,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,qBAClCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,iBAGlCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,SAClCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMoV,QAAQmhB,QAAQ,WACzCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMoV,QAAQmhB,QAAQ,SACzCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMoV,QAAQmhB,QAAQ,cACzCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMoV,QAAQmhB,QAAQ,UACzCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMoV,QAAQmhB,QAAQ,aACzCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,cAClCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,aAClCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,UAClCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,SAClCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,UAClCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMtI,SAAS6+B,QAAQ,mBAC1CR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMtI,SAAS6+B,QAAQ,YAC1CR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMtI,SAAS6+B,QAAQ,aAC1CR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMtI,SAAS6+B,QAAQ,OAC3C,MAEDtI,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAGJ8lB,EAAS,iBAAiB,KACxBC,EAAG,oBAAoB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAChC,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,IAE5C,QAAZkJ,EAAA3V,aAAA,EAAAA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEnC,oBACRkd,KAEN,MAAMmL,EAAU/K,KAChB2B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,GAC7BwI,EAAQ,GAAGx5B,OACZ,MAEDsoB,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBskB,WACAX,GAAM,IACb,KAAC,IAGJmC,EAAS,oBAAoB,KAC3B,MAAM/yB,EAAQ,YAEdgzB,EAAG,oBAAoB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAChC,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,IAE5C,QAAZkJ,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEpC,UAAU/T,SAClBkxB,KAEN,MAAMmL,EAAU/K,KAChB2B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,GAC7BwI,EAAQ,GAAGx5B,OACZ,MAEDmwB,EAAG,uBAAuB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACnC,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,IAE5C,QAAZgN,EAAAzZ,aAAK,EAALA,EAAOwG,aAAK,IAAAiT,GAAAA,EAAElG,UAAU/T,SAClB4wB,GAAM,KAEZxsB,EAAE,aAAa4B,QAAQ,eACjB4qB,GAAM,KAEZ,MAAMyL,EAAU/K,KAChB2B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,GAE7BZ,EAAOzyB,eAAAA,EAAO5L,OAAO2G,UAAUpK,MAAMiQ,QAAQyyB,MAAM,GACnDZ,EAAOzyB,eAAAA,EAAO5L,OAAO2G,UAAUpK,MAAM,IAAI0iC,MAAM,SAChD,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBskB,IACP,KAAC,IAGJwB,EAAS,yBAAyB,KAGhCC,EAAG,6BAA6B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACzC,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,aAAA,EAAAA,EAAOuG,OAAO,CAAE,yBAA0B,CAAC,kBAC3CmqB,KAEN+B,EAAOzyB,eAAAA,EAAO5L,OAAO2G,UAAUpK,MAAMiQ,QAAQyyB,MAAM,GACnDZ,EAAOzyB,eAAAA,EAAO5L,OAAO2G,UAAUpK,MAAM,IAAI0iC,MAAM,UAGjC,QAAd1d,EAAA3V,aAAK,EAALA,EAAOwG,aAAO,IAAAmP,GAAAA,EAAAjC,SAXF,YAWkB,gBACxBgd,KAEN+B,EAAOzyB,eAAAA,EAAO5L,OAAO2G,UAAUpK,MAAMiQ,QAAQyyB,MAAM,EACpD,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAGJ8lB,EAAS,2BAA2B,KAClCC,EAAG,oBAAoB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAChC,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,eAAAA,EAAOuG,OAAO,CAClBnS,OAAQ,CACNqE,OAAQ,CACNC,IAAK,CAAE/H,MAAO,IACdiI,IAAK,CAAEjI,MAAO,IACdgI,IAAK,CAAEhI,MAAO,IACdmI,IAAK,CAAEnI,MAAO,IACdkI,IAAK,CAAElI,MAAO,IACdoI,IAAK,CAAEpI,MAAO,QAIR,QAAZglB,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,SACfqyB,KAEN9sB,EAAE,4CAA4C4B,QAAQ,eAChD4qB,GAAM,KAEZ,MAAMyL,EAAU/K,KAChB2B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,EAC9B,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBskB,WACAX,GAAM,IACb,KAAC,IAGJmC,EAAS,sCAAsC,KAC7CC,EAAG,oBAAoB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAChC,MAAM8P,QAAcixB,GAAmB,YAAa,CAAE,EAAExkB,UAClDzM,eAAAA,EAAOuG,OAAO,CAClBnS,OAAQ,CACNqE,OAAQ,CACNC,IAAK,CAAE/H,MAAO,IACdiI,IAAK,CAAEjI,MAAO,IACdgI,IAAK,CAAEhI,MAAO,IACdmI,IAAK,CAAEnI,MAAO,IACdkI,IAAK,CAAElI,MAAO,IACdoI,IAAK,CAAEpI,MAAO,QAIR,QAAZglB,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,SACfqyB,KAEN9sB,EAAE,0CAA0C4B,QAAQ,eAC9C4qB,GAAM,KAEZ,MAAMyL,EAAU/K,KAChB2B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,EAC9B,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBskB,WACAX,GAAM,IACb,KAAC,IAIJmC,EAAS,6BAA6B,QAAS,ECtT1C,MAAM9lB,GAAM,0BACN9Y,GAAU,CAAEy+B,YAAa,8BAEtC,IAAA4L,GAAe,EAAGzL,WAAUC,KAAIC,SAAQ9H,QAAO+H,aAC7C,MAAMuL,EAAqBnmC,KAAKI,SAAStG,IACvCkG,KAAK1D,OAAO2D,GACZ,wBAGF4yB,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4H,KAAKI,SAASpG,IAClBgG,KAAK1D,OAAO2D,GACZ,uBACAkmC,SAEInM,GAAmBrlB,UACnBukB,IACP,MAEDuB,EAAS,oBAAoB,KAC3BC,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChD,MAAM8P,QAAcixB,GAAmB,UAAW,CAAE,EAAExkB,IAChDjG,EAAQxG,aAAA,EAAAA,EAAOwG,MAErBisB,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,OACtCR,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,SACtCR,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,SACtCR,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,WAEtCR,EAAOjsB,EAAM7S,QAAQqJ,UAAUi2B,QAC7B,wCAEFR,EAAOjsB,EAAM7S,QAAQgP,OAAO0wB,MAAM,KAClCZ,EAAOjsB,EAAM7S,QAAQ+b,QAAQ2jB,MAAM,KACnCZ,EAAOjsB,EAAM7S,QAAQ6b,WAAWmkB,GAAGF,KAEnChB,EAAOjsB,EAAM7S,QAAQ6d,KAAK5Q,QAAQyyB,MAAM,GACxCZ,EAAOj/B,OAAOomB,KAAKpT,EAAM7S,QAAQ6d,KAAK,KAAKyhB,QAAQ,eACnDR,EAAOjsB,EAAM7S,QAAQ6d,KAAK,GAAGC,aAAa4hB,MAAM,SAChDZ,EAAOj/B,OAAOomB,KAAKpT,EAAM7S,QAAQ6d,KAAK,KAAKyhB,QAAQ,mBACnDR,EAAOjsB,EAAM7S,QAAQ6d,KAAK,GAAGE,iBAAiB2hB,MAAM,eACpDZ,EAAOj/B,OAAOomB,KAAKpT,EAAM7S,QAAQ6d,KAAK,KAAKyhB,QAAQ,WACnDR,EAAOjsB,EAAM7S,QAAQ6d,KAAK,GAAGG,SAAS0hB,MAAM,aAC7C,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAIJ8lB,EAAS,uBAAuB,SAEhCA,EAAS,aAAa,KACpBC,EAAG,6BAA6B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACzC,MAAM8P,QAAcixB,GAAmB,UAAW,CAAE,EAAExkB,IAChD/P,QAAyB,QAAZiZ,EAAA3V,aAAA,EAAAA,EAAOwG,aAAK,IAAAmP,OAAA,EAAAA,EAAE5S,UAGjC0vB,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,SAClCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMoV,QAAQmhB,QAAQ,WACzCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMoV,QAAQmhB,QAAQ,SACzCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMoV,QAAQmhB,QAAQ,cACzCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMoV,QAAQmhB,QAAQ,UACzCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMoV,QAAQmhB,QAAQ,aACzCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,kBAClCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,UAClCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,SAElCR,EAAO/1B,aAAA,EAAAA,EAAMU,OAAO2lB,QAAQsQ,MAC1Bv7B,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,WAEpC06B,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,UAClCR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMtI,SAAS6+B,QAAQ,WAC1CR,EAAOj/B,OAAOomB,KAAKld,aAAA,EAAAA,EAAMtI,OAAOsL,UAAUuzB,QAAQ,YAClDR,EAAOj/B,OAAOomB,KAAKld,aAAI,EAAJA,EAAMtI,OAAOsL,QAAQrL,WAAW4+B,QAAQ,OAC5D,MAEDtI,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAGJ8lB,EAAS,kBAAkB,KACzBC,EAAG,oBAAoB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAChC,MAAM8P,QAAcixB,GAAmB,UAAW,CAAE,EAAExkB,IAC1C,QAAZkJ,EAAA3V,aAAA,EAAAA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAE6M,qBACRkO,KAEN,MAAMmL,EAAU/K,KAChB2B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,GAC7BwI,EAAQ,GAAGx5B,OACZ,MAEDsoB,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,UACnBskB,WACAX,GAAM,IACb,KAAC,IAGJmC,EAAS,kBAAkB,KAIzB5H,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,wBACT4hC,GAAmBrlB,IACd,QAAXkJ,EAAA7d,KAAK+0B,cAAM,IAAAlX,GAAAA,EACPjV,QAAQw9B,GAAmB,mBAAZA,EAAGp7B,OACnBuE,SAAS62B,GAAOA,EAAGrM,UACvB,MAEDW,EAAG,yCAAyC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBACrD,MAAM8P,QAAcixB,GAAmB,UAAW,CAAE,EAAExkB,IAChD0xB,QAXNjuC,OAAA,OAAA,OAAA,GAAA,YAAA,OAAAkuC,UAAUv/B,OAAO,CAAEiE,KAAM,kBAAmB,IAYhC,QAAZ2W,EAAAzZ,aAAK,EAALA,EAAOwG,aAAK,IAAAiT,GAAAA,EAAEpb,QAAO,SACf+xB,GAAM,KAGZ,MAAMiO,EAAcxqB,SAAS7R,cAC3B,4BAA4Bm8B,eAAAA,EAAWpmC,OAEnCumC,EAAczqB,SAAS7R,cAAc,4BAG3CywB,EAAO4L,GAAatL,IAAI2G,KACxBjH,EAAO6L,GAAavL,IAAI2G,KAGxB,MAAM4C,EAAqB,IAAIC,UAAU,YAAa,CACpDlwB,aAAc,IAAImwB,aAClBC,SAAS,EACTC,YAAY,IAEd2B,SAAAA,EAAalC,cAAcG,GAIf,QAAZxV,EAAA9mB,aAAK,EAALA,EAAOwG,aAAK,IAAAsgB,GAAAA,EAAE3C,QAAQmY,SAChB5L,KAGN+B,EAAOzyB,aAAA,EAAAA,EAAO5L,OAAOsL,QAAQrL,SAASmL,OAAO6zB,MAC3C,mBAAmB8K,aAAA,EAAAA,EAAWpmC,MAEjC,KAAC,IAGJw6B,EAAS,wBAAwB,KAC/BC,EAAG,6BAA6B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACzC,MAAM8P,QAAcixB,GAAmB,UAAW,CAAE,EAAExkB,IAC1C,QAAZkJ,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,GACrB,MAAO2I,SAAcmqB,GAAoBnxB,EAAO,UAChDgH,EAAKT,OAAO,CACVnS,OAAQ,CACNgW,QAAS,CACPlY,IAAK,EACLvB,MAAO,YAIPy/B,GAAM,KAEZqC,EAAOzrB,EAAK5S,OAAOgW,QAAQzZ,OAAO0iC,MAAM,GAGxCzvB,EAAE,eAAe4B,QAAQ,eACnBkrB,KAEN+B,EAAOzrB,EAAK5S,OAAOgW,QAAQzZ,OAAO0iC,MAAM,EACzC,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAGJ8lB,EAAS,+BAA+B,KACtCG,GAAO,KACL56B,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,wBAAwB,EAAK,IAGjEy6B,EAAG,gCAAgC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAC5C,MAAM8P,QAAcixB,GAAmB,UAAW,CAAE,EAAExkB,IAC1C,QAAZkJ,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,GACrB,MAAO2I,SAAcmqB,GAAoBnxB,EAAO,UAChDgH,EAAKT,OAAO,CACVnS,OAAQ,CACNgW,QAAS,CACPlY,IAAK,EACLvB,MAAO,YAIPy/B,GAAM,KAEZqC,EAAOzrB,EAAK5S,OAAOgW,QAAQzZ,OAAO0iC,MAAM,GAGxCzvB,EAAE,4BAA4BoD,EAAKjP,oBAAoByN,QAAQ,eACzDkrB,KAEN+B,EAAOzrB,EAAK5S,OAAOgW,QAAQzZ,OAAO0iC,MAAM,EACzC,MAED1I,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,IAGJ8lB,EAAS,+BAA+B,KACtC,MAAMh4B,EAAS/G,OAAOomB,KAAKhe,OAAOjE,IAAI4C,QACtCA,EAAO+C,KAAK,eAEZo1B,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBAChB,MAAM8P,QAAcixB,GAAmB,UAAW,CAAE,EAAExkB,IAC1C,QAAZkJ,EAAA3V,aAAK,EAALA,EAAOwG,aAAK,IAAAmP,GAAAA,EAAEtX,QAAO,SACf8yB,GAAoBnxB,EAAO,gBAC3BowB,GAAM,IACb,MAEDmC,EAAS,kCAAkC,KACzCh4B,EAAO8M,SAAS4jB,IACduH,EAAG,mBAAmBvH,KAAS,IAAW/6B,OAAA,OAAA,OAAA,GAAA,YACxC,MAAM8P,QAAcyxB,GAAgBhlB,IAC9BzF,EAAOhH,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAC7ByxB,EAAiBv3B,aAAA,EAAAA,EAAM5S,OAAOsoB,QAEpC+V,EAAO8L,GAAgBxL,IAAI7b,UAC3B,MAAMsnB,EAAejkC,EAAO0e,QAAQslB,GAC9BE,EACJD,EAAe,IAAMjkC,EAAOqG,OAAS,EAAI49B,EAAe,EAG1D56B,EAAE,iBAAiB4B,QAAQ,eACrB4qB,GAAM,KAGZqC,EAAOzrB,aAAA,EAAAA,EAAM5S,OAAOsoB,SAAS2W,MAAM94B,EAAOkkC,GAC3C,KAAC,GACF,IAGJ9T,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,GACF,EC3PG,MAAMA,GAAM,6CACN9Y,GAAU,CACrBy+B,YAAa,iDAGTC,GAAkB,CAAOx+B,EAAc6I,EAAe,CAAE,IAAIxM,OAAA,OAAA,OAAA,GAAA,YAChE,OAAA+gC,GAAmBp9B,EAAM6I,EAAM+P,GAAI,IAErC,IAAAiyB,GAAe,EAAGnM,WAAUC,KAAIC,SAAQgF,SAAQ9M,YAC9C4H,EAAS,oBAAoB,KAC3BC,EAAG,oCAAoC,KACrC,MAAMhsB,EAAQ,IAAIc,EAClBmrB,EAAOjsB,EAAM7S,QAAQoE,IAAIs7B,MAAM,mBAC/BZ,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,OACtCR,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,UACtCR,EAAOjsB,EAAM7S,QAAQ+O,SAASuwB,QAAQ,aACtCR,EAAOjsB,EAAM7S,QAAQqJ,UAAUi2B,QAC7B,mDAEFR,EAAOjsB,EAAM7S,QAAQgP,OAAO0wB,MAAM,IAAI,GACtC,IAGJd,EAAS,WAAW,KAClBC,EAAG,yCAAyC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACrD,MAAM8P,QAAcqyB,GAAgB,aACtB,IAAI/qB,EAAsBtH,GAClC3B,QAAO,SACPqyB,KACN,MAAMiO,EAEH,QAFiBhpB,EAAA9B,SAAS7R,cAC3B,sCACC,IAAA2T,OAAA,EAAAA,EAAAuU,UACHuI,SAAckM,GAAatL,MAAM,UACjC,MAAMwI,EAAUlL,GAAY,aAC5B8B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,SACvBwI,EAAQ,GAAGx5B,QACjBowB,EAAO9B,GAAY,aAAa/vB,QAAQyyB,MAAM,EAC/C,KAAC,IAGJd,EAAS,aAAa,KACpBC,EAAG,uBAAuB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACnC,MAAM8P,QAAcqyB,GAAgB,aAE9B31B,EADQ,IAAI4K,EAAsBtH,GACrB+C,UACb6W,EAAOpmB,OAAOomB,KAAKld,GACzB+6B,EAAO7d,EAAKhZ,OAAS,GACrB6xB,EAAO7Y,GAAMqZ,QAAQ,OACtB,KAAC,IAGJtI,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,ECrDG,MAAMA,GAAM,uCACN9Y,GAAU,CACrBy+B,YAAa,2CAGTC,GAAkB,CAAOx+B,EAAc6I,EAAe,CAAE,IAAIxM,OAAA,OAAA,OAAA,GAAA,YAChE,OAAA+gC,GAAmBp9B,EAAM6I,EAAM+P,GAAI,IAErC,IAAAmyB,GAAe,EAAGrM,WAAUC,KAAIC,SAAQgF,SAAQ9M,YAC9C4H,EAAS,oBAAoB,KAC3BC,EAAG,oCAAoC,KACrC,MAAMqM,EAAe,IAAIn3B,EACzB+qB,EAAOoM,EAAalrC,QAAQoE,IAAIs7B,MAAM,gBACtCZ,EAAOoM,EAAalrC,QAAQ+O,SAASuwB,QAAQ,gBAC7CR,EAAOoM,EAAalrC,QAAQqJ,UAAUi2B,QACpC,gDAEFR,EAAOoM,EAAalrC,QAAQgP,OAAO0wB,MAAM,IAAI,GAC7C,IAGJd,EAAS,WAAW,KAClBC,EAAG,yCAAyC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACrD,MAAM8P,QAAcqyB,GAAgB,aACf,IAAI3qB,EAAgB1H,GAC5B3B,QAAO,SACdqyB,KACN,MAAMiO,EAEH,QAFiBhpB,EAAA9B,SAAS7R,cAC3B,yCACC,IAAA2T,OAAA,EAAAA,EAAAuU,UACHuI,SAAckM,GAAatL,MAAM,UACjC,MAAMwI,EAAUlL,GAAY,gBAC5B8B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,SACvBwI,EAAQ,GAAGx5B,QACjBowB,EAAO9B,GAAY,gBAAgB/vB,QAAQyyB,MAAM,EAClD,KAAC,IAGJd,EAAS,aAAa,KACpBC,EAAG,uBAAuB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACnC,MAAM8P,QAAcqyB,GAAgB,aAE9B31B,EADe,IAAIgL,EAAgB1H,GACf+C,UACpB6W,EAAOpmB,OAAOomB,KAAKld,GACzB+6B,EAAO7d,EAAKhZ,QAAU,GACtB6xB,EAAO7Y,GAAMqZ,QAAQ,UACrBR,EAAO7Y,GAAMqZ,QAAQ,QACrBwE,EAAO/6B,EAAKiL,YACb,KAAC,IAIJ4qB,EAAS,kCAAkC,SAE3C5H,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,EC9DG,MACM9Y,GAAU,CAAEy+B,YAAa,kCAEtC,IAAe0M,GAAA,EAAGvM,WAAUC,KAAIC,aAC9BF,EAAS,cAAc,KACrB,MAAMzV,EAAU,IAAImI,GACpBuN,EAAG,iCAAiC,KAClCC,EAAO3V,EAAQqI,WAAWvkB,QAAQyyB,MAAM,EAAE,IAG5Cb,EAAG,gCAAgC,KACjC1V,EAAQ9hB,KAAO,CAAC,CAAE2B,MAAO,QAAShM,MAAO,UACzC8hC,EAAO3V,EAAQ9hB,KAAK4F,QAAQyyB,MAAM,GAClCZ,EAAOj/B,OAAOomB,KAAKkD,EAAQ9hB,KAAK,IAAI4F,QAAQyyB,MAAM,GAClDZ,EAAO3V,EAAQ9hB,KAAK,GAAG2B,OAAO02B,MAAM,SACpCZ,EAAO3V,EAAQ9hB,KAAK,GAAGrK,OAAO0iC,MAAM,SACpCZ,EAAO3V,EAAQ9hB,KAAK,GAAGW,OAAOg4B,GAAGzc,SAAS,IAG5Csb,EAAG,qBAAqB,KACtBC,EAAO3V,EAAQqI,WAAWvkB,QAAQyyB,MAAM,GACxCZ,EAAO3V,EAAQqI,WAAW,GAAGxoB,OAAO02B,MAAM,SAC1CZ,EAAO3V,EAAQqI,WAAW,GAAGx0B,OAAO0iC,MAAM,SAC1CZ,EAAO3V,EAAQ9hB,KAAK,GAAGW,OAAOg4B,GAAGzc,SAAS,GAC1C,IAGJqb,EAAS,YAAY,KACnB,MAAMzV,EAAU,IAAImI,GACpBuN,EAAG,+BAA+B,KAChCC,EAAO3V,EAAQmB,SAASrd,QAAQyyB,MAAM,GACtCZ,EAAOj/B,OAAOomB,KAAKkD,EAAQmB,SAAS,IAAIrd,QAAQyyB,MAAM,EAAE,IAG1Db,EAAG,iCAAiC,KAClCC,EAAO3V,EAAQmB,SAAS,GAAGtiB,OAAO03B,MAAM,GAAG,IAG7Cb,EAAG,iCAAiC,KAClCC,EAAO3V,EAAQmB,SAAS,GAAGniB,MAAM63B,GAAGzc,SAAS,IAG/Csb,EAAG,gCAAgC,KACjC1V,EAAQ6B,aAAe,kBACvB8T,EAAO3V,EAAQmB,SAASrd,QAAQyyB,MAAM,GACtCZ,EAAOj/B,OAAOomB,KAAKkD,EAAQmB,SAAS,IAAIrd,QAAQyyB,MAAM,GACtDZ,EAAO3V,EAAQmB,SAAS,GAAGtiB,OAAO03B,MAAM,cACxCZ,EAAOj/B,OAAOomB,KAAKkD,EAAQmB,SAAS,IAAIrd,QAAQyyB,MAAM,GACtDZ,EAAO3V,EAAQmB,SAAS,GAAGtiB,OAAO03B,MAAM,OAAO,IAGjDb,EAAG,wBAAwB,KACzB1V,EAAQpS,KAAO,QACf+nB,EAAO3V,EAAQmB,SAASrd,QAAQyyB,MAAM,GACtCZ,EAAOj/B,OAAOomB,KAAKkD,EAAQmB,SAAS,IAAIrd,QAAQyyB,MAAM,GACtDZ,EAAO3V,EAAQmB,SAAS,GAAGtiB,OAAO03B,MAChCv7B,KAAKwI,KAAKuB,SAAS,yBAErB4wB,EAAO3V,EAAQmB,SAAS,GAAGniB,MAAMu3B,MAAM,WAAW,IAGpDb,EAAG,wBAAwB,KACzB1V,EAAQvf,KAAO,SACfk1B,EAAO3V,EAAQmB,SAASrd,QAAQyyB,MAAM,GACtCZ,EAAOj/B,OAAOomB,KAAKkD,EAAQmB,SAAS,IAAIrd,QAAQyyB,MAAM,GACtDZ,EAAO3V,EAAQmB,SAAS,GAAGtiB,OAAO03B,MAChC,GAAGv7B,KAAKwI,KAAKuB,SAAS,yCACvB,GACD,GACF,ECrEG,MACMlO,GAAU,CAAEy+B,YAAa,gCAEtC,IAAe2M,GAAA,EAAGxM,WAAUC,KAAIC,aAC9BF,EAAS,cAAc,KACrB,MAAMyM,EAAY5Z,GAAkBC,WAEpCmN,EAAG,qBAAqB,KACtBC,EAAOj/B,OAAOomB,KAAKolB,GAAWp+B,QAAQyyB,MAAM,EAAE,IAEhDb,EAAG,iBAAiB,KAClBC,EAAOuM,EAAUpqC,WAAWy+B,MAAM,sBAAsB,IAE1Db,EAAG,aAAa,KACdC,EAAOuM,EAAUnqC,OAAOw+B,MAAM,kBAAkB,IAElDb,EAAG,aAAa,KACdC,EAAOuM,EAAUlqC,OAAOu+B,MAAM,kBAAkB,IAElDb,EAAG,cAAc,KACfC,EAAOuM,EAAU9kC,QAAQm5B,MAAM,mBAAmB,GAClD,IAGJd,EAAS,cAAc,KACrB,MAAMvrB,EAAO,IAAIoe,GAEjBoN,EAAG,iCAAiC,KAClCC,EAAOzrB,EAAKme,WAAWvkB,QAAQyyB,MAAM,EAAE,IAGzCb,EAAG,gCAAgC,KACjCxrB,EAAKhM,KAAO,CAAC,CAAE2B,MAAO,QAAShM,MAAO,UACtC8hC,EAAOzrB,EAAKhM,KAAK4F,QAAQyyB,MAAM,GAC/BZ,EAAOj/B,OAAOomB,KAAK5S,EAAKhM,KAAK,IAAI4F,QAAQyyB,MAAM,GAC/CZ,EAAOzrB,EAAKhM,KAAK,GAAG2B,OAAO02B,MAAM,SACjCZ,EAAOzrB,EAAKhM,KAAK,GAAGrK,OAAO0iC,MAAM,SACjCZ,EAAOzrB,EAAKhM,KAAK,GAAGW,OAAOg4B,GAAGzc,SAAS,IAGzCsb,EAAG,qBAAqB,KACtBC,EAAOzrB,EAAKme,WAAWvkB,QAAQyyB,MAAM,GACrCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKhM,KAAK,IAAI4F,QAAQyyB,MAAM,GAC/CZ,EAAOzrB,EAAKme,WAAW,GAAGxoB,OAAO02B,MAAM,SACvCZ,EAAOzrB,EAAKme,WAAW,GAAGx0B,OAAO0iC,MAAM,SACvCZ,EAAOzrB,EAAKme,WAAW,GAAGxpB,OAAO03B,MAAM,QAAQ,GAC/C,IAGJd,EAAS,YAAY,KACnB,MAAMvrB,EAAO,IAAIoe,GAEjBoN,EAAG,+BAA+B,KAChCC,EAAOzrB,EAAKiX,SAASrd,QAAQyyB,MAAM,GACnCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,EAAE,IAEvDb,EAAG,iCAAiC,KAClCC,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,kBAAkB,IAEzDb,EAAG,iCAAiC,KAClCC,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,YAAY,GAChD,GACF,EC9DG,MACM1/B,GAAU,CAAEy+B,YAAa,oCAEtC,IAAe6M,GAAA,EAAG1M,WAAUC,KAAIC,aAC9BF,EAAS,cAAc,KACrBC,EAAG,0CAA0C,KAC3C,MAAM5kB,EAAY,IAAI6X,GACtBgN,EAAO7kB,EAAUd,UAAU6mB,GAAG+F,IAAI,GAClC,IAGJnH,EAAS,iBAAiB,KACxBC,EAAG,2BAA2B,KAC5B,MAAM5kB,EAAY,IAAI6X,GACtBgN,EAAO7kB,EAAU8X,aAAa2N,MAAM,EAAE,GACtC,IAGJd,EAAS,gBAAgB,KACvB,MAAM3kB,EAAY,IAAI6X,GACtB+M,EAAG,iCAAiC,KAClCC,EAAO7kB,EAAUuX,WAAWvkB,QAAQyyB,MAAM,EAAE,IAG9Cb,EAAG,gCAAgC,KACjC5kB,EAAU5S,KAAO,CAAC,CAAErK,MAAO,QAASgM,MAAO,UAC3C81B,EAAO7kB,EAAU5S,KAAK4F,QAAQyyB,MAAM,GACpCZ,EAAOj/B,OAAOomB,KAAKhM,EAAU5S,KAAK,IAAI4F,QAAQyyB,MAAM,GACpDZ,EAAO7kB,EAAU5S,KAAK,GAAG2B,OAAO02B,MAAM,SACtCZ,EAAO7kB,EAAU5S,KAAK,GAAGrK,OAAO0iC,MAAM,SACtCZ,EAAO7kB,EAAU5S,KAAK,GAAGW,OAAOg4B,GAAGzc,SAAS,IAG9Csb,EAAG,qBAAqB,KACtBC,EAAO7kB,EAAUuX,WAAWvkB,QAAQyyB,MAAM,GAC1CZ,EAAO7kB,EAAUuX,WAAW,GAAGxoB,OAAO02B,MAAM,SAC5CZ,EAAO7kB,EAAUuX,WAAW,GAAGx0B,OAAO0iC,MAAM,SAC5CZ,EAAO7kB,EAAU5S,KAAK,GAAGW,OAAOg4B,GAAGzc,SAAS,GAC5C,IAGJqb,EAAS,cAAc,KACrB,MAAM3kB,EAAY,IAAI6X,GACtB+M,EAAG,kCAAkC,KACnCC,EAAO7kB,EAAUqQ,SAASrd,QAAQyyB,MAAM,EAAE,IAG5Cb,EAAG,uBAAuB,KACxB5kB,EAAU5S,KAAO,CAAC,CAAErK,MAAOiL,OAAOjE,IAAIqD,KAAKK,QAC3Co3B,EAAO7kB,EAAU5S,KAAK4F,QAAQyyB,MAAM,GACpCZ,EAAO7kB,EAAUqQ,SAAS,GAAGtiB,OAAO03B,MAAMz3B,OAAOjE,IAAIqD,KAAKK,OAC1Do3B,EAAO7kB,EAAUqQ,SAAS,GAAGniB,MAAMu3B,MAAM,mBACzCZ,EAAO7kB,EAAUqQ,SAAS,GAAGpiB,OAAOw3B,MAClC,GAAGz3B,OAAOjE,IAAIK,uBACf,GACD,GACF,ECxDG,MACMrE,GAAU,CAAEy+B,YAAa,+BAEtC,IAAe8M,GAAA,EAAG3M,WAAUC,KAAIC,aAC9BF,EAAS,gBAAgB,KACvB,MAAM4M,EAAW,IAAIxZ,GACrB6M,EAAG,iCAAiC,KAClCC,EAAO0M,EAASha,WAAWvkB,QAAQyyB,MAAM,EAAE,IAG7Cb,EAAG,gCAAgC,KACjC2M,EAASnkC,KAAO,CAAC,CAAE2B,MAAO,QAAShM,MAAO,UAC1C8hC,EAAO0M,EAASnkC,KAAK4F,QAAQyyB,MAAM,GACnCZ,EAAOj/B,OAAOomB,KAAKulB,EAASnkC,KAAK,IAAI4F,QAAQyyB,MAAM,GACnDZ,EAAO0M,EAASnkC,KAAK,GAAG2B,OAAO02B,MAAM,SACrCZ,EAAO0M,EAASnkC,KAAK,GAAGrK,OAAO0iC,MAAM,SACrCZ,EAAO0M,EAASnkC,KAAK,GAAGW,OAAOg4B,GAAGzc,SAAS,IAG7Csb,EAAG,qBAAqB,KACtBC,EAAO0M,EAASha,WAAWvkB,QAAQyyB,MAAM,GACzCZ,EAAO0M,EAASha,WAAW,GAAGxoB,OAAO02B,MAAM,SAC3CZ,EAAO0M,EAASha,WAAW,GAAGx0B,OAAO0iC,MAAM,SAC3CZ,EAAO0M,EAASnkC,KAAK,GAAGW,OAAOg4B,GAAGzc,SAAS,GAC3C,IAGJqb,EAAS,cAAc,KACrB,MAAM4M,EAAW,IAAIxZ,GACrB6M,EAAG,kCAAkC,KACnCC,EAAO0M,EAASlhB,SAASrd,QAAQyyB,MAAM,EAAE,IAG3Cb,EAAG,uBAAuB,KACxB2M,EAASnkC,KAAO,CAAC,CAAErK,MAAOiL,OAAOjE,IAAIqD,KAAKK,QAC1Co3B,EAAO0M,EAASnkC,KAAK4F,QAAQyyB,MAAM,GACnCZ,EAAO0M,EAASlhB,SAAS,GAAGtiB,OAAO03B,MAAMz3B,OAAOjE,IAAIqD,KAAKK,OACzDo3B,EAAO0M,EAASlhB,SAAS,GAAGniB,MAAMu3B,MAAM,mBACxCZ,EAAO0M,EAASlhB,SAAS,GAAGpiB,OAAOw3B,MACjC,GAAGz3B,OAAOjE,IAAIK,uBACf,GACD,GACF,EC1CG,MACMrE,GAAU,CAAEy+B,YAAa,gCAEtC,IAAegN,GAAA,EAAG7M,WAAUC,KAAIC,aAC9BF,EAAS,gBAAgB,KACvB,MAAMx4B,EAAQ,IAAIgsB,GAClByM,EAAG,iCAAiC,KAClCC,EAAO14B,EAAMorB,WAAWvkB,QAAQyyB,MAAM,EAAE,IAG1Cb,EAAG,gCAAgC,KACjCz4B,EAAMiB,KAAO,CAAC,CAAE2B,MAAO,QAAShM,MAAO,UACvC8hC,EAAO14B,EAAMiB,KAAK4F,QAAQyyB,MAAM,GAChCZ,EAAOj/B,OAAOomB,KAAK7f,EAAMiB,KAAK,IAAI4F,QAAQyyB,MAAM,GAChDZ,EAAO14B,EAAMiB,KAAK,GAAG2B,OAAO02B,MAAM,SAClCZ,EAAO14B,EAAMiB,KAAK,GAAGrK,OAAO0iC,MAAM,SAClCZ,EAAO14B,EAAMiB,KAAK,GAAGW,OAAOg4B,GAAGzc,SAAS,IAG1Csb,EAAG,qBAAqB,KACtBC,EAAO14B,EAAMorB,WAAWvkB,QAAQyyB,MAAM,GACtCZ,EAAO14B,EAAMorB,WAAW,GAAGxoB,OAAO02B,MAAM,SACxCZ,EAAO14B,EAAMorB,WAAW,GAAGx0B,OAAO0iC,MAAM,SACxCZ,EAAO14B,EAAMiB,KAAK,GAAGW,OAAOg4B,GAAGzc,SAAS,GACxC,IAGJqb,EAAS,cAAc,KACrB,MAAMx4B,EAAQ,IAAIgsB,GAClByM,EAAG,iCAAiC,KAClCC,EAAO14B,EAAMkkB,SAASrd,QAAQyyB,MAAM,GACpCt5B,EAAMkkB,SAAS5W,SAASyR,IACtB2Z,EAAO3Z,GAAGia,IAAI2G,KACdjH,EAAO3Z,eAAAA,EAAGnd,OAAO03B,MAAM,GAAG,GAC1B,IAGJb,EAAG,wBAAwB,KACzBz4B,EAAM2Q,KAAO,QACb+nB,EAAO14B,EAAMkkB,SAASrd,QAAQyyB,MAAM,GACpCZ,EAAOj/B,OAAOomB,KAAK7f,EAAMkkB,SAAS,IAAIrd,QAAQyyB,MAAM,GACpDZ,EAAO14B,EAAMkkB,SAAS,GAAGtiB,OAAO03B,MAC9Bv7B,KAAKwI,KAAKuB,SAAS,yBAErB4wB,EAAO14B,EAAMkkB,SAAS,GAAGniB,MAAMu3B,MAAM,WAAW,IAGlDb,EAAG,wBAAwB,KACzBz4B,EAAMwD,KAAO,SACbk1B,EAAO14B,EAAMkkB,SAASrd,QAAQyyB,MAAM,GACpCZ,EAAOj/B,OAAOomB,KAAK7f,EAAMkkB,SAAS,IAAIrd,QAAQyyB,MAAM,GACpDZ,EAAO14B,EAAMkkB,SAAS,GAAGtiB,OAAO03B,MAC9B,GAAGv7B,KAAKwI,KAAKuB,SAAS,2BACvB,GACD,GACF,ECvDG,MACMlO,GAAU,CAAEy+B,YAAa,iCAEtC,IAAeiN,GAAA,EAAG9M,WAAUC,KAAIC,aAC9BF,EAAS,gBAAgB,KACvB,MAAMvrB,EAAO,IAAIgf,GACjBwM,EAAG,iCAAiC,KAClCC,EAAOzrB,EAAKme,WAAWvkB,QAAQyyB,MAAM,EAAE,IAGzCb,EAAG,gCAAgC,KACjCxrB,EAAKhM,KAAO,CAAC,CAAE2B,MAAO,QAAShM,MAAO,UACtC8hC,EAAOzrB,EAAKhM,KAAK4F,QAAQyyB,MAAM,GAC/BZ,EAAOj/B,OAAOomB,KAAK5S,EAAKhM,KAAK,IAAI4F,QAAQyyB,MAAM,GAC/CZ,EAAOzrB,EAAKhM,KAAK,GAAG2B,OAAO02B,MAAM,SACjCZ,EAAOzrB,EAAKhM,KAAK,GAAGrK,OAAO0iC,MAAM,SACjCZ,EAAOzrB,EAAKhM,KAAK,GAAGW,OAAOg4B,GAAGzc,SAAS,IAGzCsb,EAAG,qBAAqB,KACtBC,EAAOzrB,EAAKme,WAAWvkB,QAAQyyB,MAAM,GACrCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKhM,KAAK,IAAI4F,QAAQyyB,MAAM,GAC/CZ,EAAOzrB,EAAKme,WAAW,GAAGxoB,OAAO02B,MAAM,SACvCZ,EAAOzrB,EAAKme,WAAW,GAAGx0B,OAAO0iC,MAAM,SACvCZ,EAAOzrB,EAAKme,WAAW,GAAGxpB,OAAOg4B,GAAGzc,SAAS,GAC7C,IAEJqb,EAAS,eAAe,KACtBC,EAAG,qCAAqC,KACtC,MAAMxrB,EAAO,IAAIgf,GACjByM,EAAOzrB,EAAKof,UAAUxlB,QAAQyyB,MAAM,EAAE,IAGxCb,EAAG,+DAA+D,KAChE,MAAMxrB,EAAO,IAAIgf,GACjBhf,EAAKhM,KAAO,CAAC,CAAErK,MAAO,OAAQgL,MAAO,SACrC82B,EAAOzrB,EAAKof,UAAUxlB,QAAQyyB,MAAM,GACpCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKof,UAAU,IAAIxlB,QAAQyyB,MAAM,GACpDZ,EAAOzrB,EAAKof,UAAU,GAAGzqB,OAAO03B,MAAMrsB,EAAKme,WAAW,GAAGxpB,OACzD82B,EAAOzrB,EAAKof,UAAU,GAAGz1B,OAAO0iC,MAAMrsB,EAAKme,WAAW,GAAGx0B,MAAM,IAGjE6hC,EAAG,gEAAgE,KACjE,MAAMxrB,EAAO,IAAIgf,GACjBhf,EAAK7L,MAAO,EACZs3B,EAAOzrB,EAAKof,UAAUxlB,QAAQyyB,MAAM,GACpCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKof,UAAU,IAAIxlB,QAAQyyB,MAAM,GACpDZ,EAAOzrB,EAAKof,UAAU,GAAGzqB,OAAO03B,MAAM,QACtCZ,EAAOzrB,EAAKof,UAAU,GAAGzpB,OAAO02B,MAAM,QACtCZ,EAAOzrB,EAAKof,UAAU,GAAGtqB,MAAMu3B,MAAM,qBACrCZ,EAAOzrB,EAAKof,UAAU,GAAGvqB,OAAOo3B,QAAQ,kBAAkB,GAC1D,IAGJV,EAAS,cAAc,KACrBC,EAAG,uDAAuD,KACxD,MAAMxrB,EAAO,IAAIgf,GACjByM,EAAOzrB,EAAKiX,SAASrd,QAAQyyB,MAAM,GACnCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,WACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,GAAG,IAG1Cb,EAAG,wCAAwC,KACzC,MAAMxrB,EAAO,IAAIgf,GACjBhf,EAAKuX,OAAS,OACdkU,EAAOzrB,EAAKiX,SAASrd,QAAQyyB,MAAM,GACnCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,WACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,OAAO,IAG9Cb,EAAG,uCAAuC,KACxC,MAAMxrB,EAAO,IAAIgf,GACjBhf,EAAK/L,OAAQ,EACbw3B,EAAOzrB,EAAKiX,SAASrd,QAAQyyB,MAAM,GACnCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,WACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,IACrCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,SACrCZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,YACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGpiB,OAAOo3B,QAAQ,mBAAmB,IAG5DT,EAAG,yCAAyC,KAC1C,MAAMxrB,EAAO,IAAIgf,GACjBhf,EAAK9L,SAAU,EACfu3B,EAAOzrB,EAAKiX,SAASrd,QAAQyyB,MAAM,GACnCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,WACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,IACrCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,WACrCZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,gBACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGpiB,OAAOo3B,QAAQ,sBACvCR,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,SACrCZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,cAAc,IAGpDb,EAAG,qDAAqD,KACtD,MAAMxrB,EAAO,IAAIgf,GACjBhf,EAAK9L,SAAU,EACf8L,EAAK2W,MAAMa,MAAQ,GACnBxX,EAAK2W,MAAMc,OAAS,GACpBzX,EAAK2W,MAAMe,KAAO,GAClB+T,EAAOzrB,EAAKiX,SAASrd,QAAQyyB,MAAM,GACnCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,WACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,IACrCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,WACrCZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,gBACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGpiB,OAAOo3B,QAAQ,sBACvCR,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,YACrCZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,cAAc,IAGpDb,EAAG,sCAAsC,KACvC,MAAMxrB,EAAO,IAAIgf,GACjBhf,EAAK7L,MAAO,EACZs3B,EAAOzrB,EAAKiX,SAASrd,QAAQyyB,MAAM,GACnCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,WACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,IACrCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,QACrCZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,qBACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGpiB,OAAOo3B,QAAQ,kBAAkB,IAG3DT,EAAG,sCAAsC,KACvC,MAAMxrB,EAAO,IAAIgf,GACjBhf,EAAK0D,KAAO,QACZ+nB,EAAOzrB,EAAKiX,SAASrd,QAAQyyB,MAAM,GACnCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,WACpCZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAAM,IACrCZ,EAAOj/B,OAAOomB,KAAK5S,EAAKiX,SAAS,IAAIrd,QAAQyyB,MAAM,GACnDZ,EAAOzrB,EAAKiX,SAAS,GAAGtiB,OAAO03B,MAC7Bv7B,KAAKwI,KAAKuB,SAAS,yBAErB4wB,EAAOzrB,EAAKiX,SAAS,GAAGniB,MAAMu3B,MAAM,WAAW,GAC/C,GACF,ECxIG,MACM1/B,GAAU,CAAEy+B,YAAa,qBAEhCC,GAAkB,CAAO31B,EAAe,CAAE,IAC9CxM,OAAA,OAAA,OAAA,GAAA,YAAA,OAAA+gC,GAAmB,YAAav0B,EAJf,kBAIyB,IAE5C,IAAA4iC,GAAe,EACb/M,WACAC,KACAC,SACA9H,QACAmS,aACArF,aAEA,MAAMtF,EAAY,IAAI/qB,IAAI,CACxB,QACA,UACA,QACA,SACA,OACA,eAGIyV,aAAEA,GAAiBD,GAEzB+N,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,YACf6hC,IACD,MAEDQ,EAAS,kBAAkB,KACzBC,EAAG,6BAA6B,IAC9BC,EAAOj/B,OAAOomB,KAAKiD,GAAcjc,QAAQyyB,MAAM,KAEjDlB,EAAU9qB,SAASxT,IACjB2+B,EAAG,OAAO3+B,UAAa,IAAM4+B,EAAO5V,EAAahpB,IAAO8/B,GAAGZ,IAAI7b,WAAU,IAG3Esb,EAAG,sCAAsC,IACvCC,EAAO5V,EAAa0iB,cAAc5L,GAAGzc,WAAU,IAGnDqb,EAAS,YAAY,KACnB,MAAMiN,EAAwB3rC,GAAgB3D,OAAA,OAAA,OAAA,GAAA,kBAC5C,MAAM8W,QAAakqB,GAAoBr9B,GACvC4+B,EAAOzrB,GAAM2sB,GAAGZ,IAAI7b,UACpBub,EAAOzrB,aAAI,EAAJA,EAAMd,KAAKu5B,OAAO5iB,EAAahpB,IACtC,MAAMi6B,EAAW9mB,aAAA,EAAAA,EAAMlE,WACjBkE,aAAI,EAAJA,EAAM6qB,SACZY,UAAO9c,EAAA7d,KAAK1F,4BAAOkS,MAAMsF,GAAMA,EAAE9G,OAASgrB,KAAW6F,GAAGzc,SAC1D,IAEAsb,EAAG,6BAA6B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACnCsvC,EAAe,SACtB,MACDhN,EAAG,4BAA4B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAClCsvC,EAAe,QACtB,MACDhN,EAAG,2BAA2B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACjCsvC,EAAe,OACtB,MACDhN,EAAG,4BAA4B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAClCsvC,EAAe,QACtB,MACDhN,EAAG,8BAA8B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACpCsvC,EAAe,UACtB,MACDhN,EAAG,gCAAgC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACtCsvC,EAAe,YACtB,KAAC,IAuBJjN,EAAS,iBAAiB,SAE1BA,EAAS,wBAAwB,KAC/BC,EAAG,2BAA2B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACvC,MAAM8W,QAAckqB,GAAoBr9B,MACxC4+B,EAAOzrB,eAAAA,EAAM5S,OAAO+oB,qBAAqB4V,IAAI7b,gBACvClQ,aAAI,EAAJA,EAAM6qB,QACb,KAAC,IAIJU,EAAS,uBAAuB,KAC9BC,EAAG,gDAAgD,SACnDA,EAAG,uDAAuD,QAAS,IAIrED,EAAS,4BAA4B,KACnCC,EAAG,+DAA+D,SAClEA,EAAG,4EAA4E,SAC/EA,EAAG,6DAA6D,SAChEA,EAAG,6BAA6B,QAAS,IAG3CD,EAAS,uBAAuB,KAC9BC,EAAG,oDAAoD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChE,MAAM8P,QAAwBqyB,WACxBlB,GAAoBnxB,EAAO,UACjC,MAAM+c,EAAkB/c,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,SACxCiQ,aAAM,EAANA,EAAQxW,OAAO,CAAEnS,OAAQ,CAAE6G,OAAO,EAAMC,SAAS,KACvD,MAAMlK,EAAS+rB,EAAO1S,mBAChBqmB,WACA1wB,EAAM6xB,SACZY,EAAO3B,KAAclwB,QAAQyyB,MAAM,GACnCoE,EAAOzmC,SACD+/B,WACAL,WACAA,WACAA,KACN+B,EAAO3B,KAAclwB,QAAQyyB,MAAM,EACpC,MAEDb,EAAG,2BAA2B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACvC,MAAM8P,QAAwBqyB,WACxBlB,GAAoBnxB,EAAO,UACjC,MAAM+c,EAAkB/c,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,SACxCiQ,aAAM,EAANA,EAAQxW,OAAO,CAAEnS,OAAQ,CAAE8G,SAAS,EAAMD,OAAO,KACvD,MAAMjK,EAAS+rB,EAAO1S,mBAChBrK,EAAM6xB,SACZ4F,EAAOzmC,EACR,KAAC,IAGJuhC,EAAS,wBAAwB,KAC/BC,EAAG,yCAAyC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACrD,MAAM8W,QAAsBkqB,GAAoB,QAChD,UACQlqB,EAAKuD,aAGZ,CAFC,MAAOxJ,GACP0xB,EAAO1xB,EAAM+B,MAAMuwB,MAAM,QAC1B,CACF,MACDb,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChD,MAAM8W,QAAsBkqB,GAAoB,eAC1ClqB,EAAKT,OAAO,CAAEnS,OAAQ,CAAEmJ,KAAM,mBAC9ByJ,EAAKuD,oBACLmmB,WACAA,WACAA,KACN+B,EAAO3B,KAAclwB,QAAQyyB,MAAM,SAC7BtC,WACAT,IACP,MACDkC,EAAG,0CAA0C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACtD,MAAM8W,QAAsBkqB,GAAoB,eAC1ClqB,EAAKT,OAAO,CAAEnS,OAAQ,CAAEmJ,KAAM,aACpC,MAAMvM,QAAoBgW,EAAKuD,cAC/BktB,EAAOzmC,aAAkBwM,KAC1B,KAAC,IAGJ+0B,EAAS,gBAAgB,KACvBC,EAAG,gDAAgD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC5D,MAAM8W,QAAsBkqB,GAAoB,UAChD,UACQlqB,EAAKsD,YAGZ,CAFC,MAAOvJ,GACP0xB,EAAO1xB,EAAM+B,MAAMuwB,MAAM,QAC1B,CACF,MACDb,EAAG,oDAAoD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAChE,MAAM8W,QAAsBkqB,GAAoB,eAE1ClqB,EAAKT,OAAO,CAAEnS,OAAQ,CAAEimB,KADD,WAEvBrT,EAAKsD,aACXmoB,UAAO9c,EAAA3O,aAAI,EAAJA,EAAM5S,6BAAQimB,MAAMgZ,MAAMqM,EAClC,KAAC,IAGJnN,EAAS,qBAAqB,KAC5BC,EAAG,iDAAiD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC7D,MAEM+sB,SAFsBiU,GAAoB,WAE/B/S,YAAY,CAAE,GAC/BsU,EAAOxV,GAAKsW,GAAGC,GAAGtc,SACnB,MACDsb,EAAG,qDAAqD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACjE,MAEM+sB,SAFsBiU,GAAoB,WAE/B/S,YAAY,CAAE5gB,KAAM,WACrCk1B,EAAOxV,GAAK8V,IAAIQ,GAAGC,GAAGtc,UACtBub,EAAOxV,eAAAA,EAAKthB,OAAO03B,MAAM,cAC1B,KAAC,IAGJd,EAAS,qBAAqB,KAC5BC,EAAG,iDAAiD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC7D,MAEM+sB,SAFsBiU,GAAoB,WAE/B9S,YAAY,CAAE,GAC/BqU,EAAOxV,GAAKsW,GAAGC,GAAGtc,SACnB,MACDsb,EAAG,mDAAmD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC/D,MAEM+sB,SAFsBiU,GAAoB,WAE/B9S,YAAY,CAAE1T,KAAM,UACrC+nB,EAAOxV,GAAK8V,IAAIQ,GAAGC,GAAGtc,UACtBub,EAAOxV,eAAAA,EAAKthB,OAAO03B,MAAM,gBACzBZ,EAAOxV,eAAAA,EAAKnhB,MAAMu3B,MAAM,WACzB,KAAC,IAGJd,EAAS,yBAAyB,KAChC,MAAMoN,EAAoB,CACxB34B,EACAiW,EACA2iB,IAEE1vC,OAAA,OAAA,OAAA,GAAA,wBACFuiC,UAAO9c,EAAA3O,aAAI,EAAJA,EAAM5S,6BAAQ4G,KAAK4F,QAAQyyB,MAAM,SAClCrsB,eAAAA,EAAM+X,cAAc,CAAC9B,IAC3BwV,UAAOhZ,EAAAzS,aAAI,EAAJA,EAAM5S,6BAAQ4G,KAAK4F,QAAQyyB,MAAM,GACxC,MAAMwM,EAA8B,QAApBxY,EAAc,QAAdP,EAAA9f,aAAI,EAAJA,EAAM5S,cAAQ,IAAA0yB,OAAA,EAAAA,EAAA9rB,YAAM,IAAAqsB,OAAA,EAAAA,EAAAlZ,MACpCskB,EAAOoN,EAAQlkC,OAAO03B,MAAMuM,EAAYjkC,OACxC82B,EAAOoN,EAAQljC,OAAO02B,MAAMuM,EAAYjjC,OACxC81B,EAAOoN,EAAQlvC,OAAO0iC,MAAMuM,EAAYjvC,MAC1C,IAQMmvC,EAAqB,CACzB94B,EACAxG,KAEAiyB,EAAOzrB,EAAK5S,OAAO6G,OAAOo4B,MAAM7yB,EAAMvF,OACtCw3B,EAAOzrB,EAAK5S,OAAO+G,MAAMk4B,MAAM7yB,EAAMrF,MACrCs3B,EAAOzrB,EAAK5S,OAAO8G,SAASm4B,MAAM7yB,EAAMtF,QAAQ,EAGlDs3B,EAAG,oDAAoD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChE,MAAM8W,QAAsBkqB,GAAoB,gBAC1CyO,EAAkB34B,EAAM,OAAQ,CACpCrL,MAAO,OACPgB,MAAO,OACPhM,MAAO,SAETqW,EAAK6qB,QACN,MACDW,EAAG,+DAA+D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC3E,MAAM8W,QAAsBkqB,GAAoB,gBAC1CyO,EAAkB34B,EAAM,eAAgB,CAC5CrL,MAAO,OACPgB,MAAO,QACPhM,MAAO,SAETqW,EAAK6qB,QACN,MAGDW,EAAG,mCAAmC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC/C,MAAM8W,QAAsBkqB,GAAoB,UAChD4O,EAAmB94B,EAAM,CAAE/L,OAAO,EAAME,MAAM,EAAOD,SAAS,UACxD8L,aAAI,EAAJA,EAAM6qB,QACb,MAGmB,IAAIzqB,IAAI,CAC1BxL,OAAOjE,IAAIqD,KAAKC,MAChBW,OAAOjE,IAAIqD,KAAKG,KAChBS,OAAOjE,IAAIqD,KAAKE,UAGNmM,SAASyR,IACnB0Z,EAAG,IAAI1Z,8CAA8C,IAAW5oB,OAAA,OAAA,OAAA,GAAA,YAC9D,MAAM8W,QAAsBkqB,GAAoB,eAjD9B,EAAOlqB,EAAeiW,IAAe/sB,OAAA,OAAA,OAAA,GAAA,kBACzDuiC,UAAOT,EAAAhrB,aAAI,EAAJA,EAAM5S,6BAAQ4G,KAAK4F,QAAQyyB,MAAM,SAClCrsB,eAAAA,EAAM+X,cAAc,CAAC9B,GAC7B,IA+CU8B,CAAc/X,EAAM8R,GAC1BgnB,EAAmB94B,EAAM,CACvB/L,OAAO,EACPE,KAAM2d,IAAMld,OAAOjE,IAAIqD,KAAKG,KAC5BD,QAAS4d,IAAMld,OAAOjE,IAAIqD,KAAKE,UAEjC8L,EAAK6qB,QACN,MACDW,EAAG,UAAU1Z,iDAAiD,IAAW5oB,OAAA,OAAA,OAAA,GAAA,YACvE,MAAM8W,QAAsBkqB,GAAoB,gBAC1CyO,EAAkB34B,EAAM,SAAS8R,KAAM,CAC3Cnd,MAAO,OACPgB,MAAOmc,EACPnoB,MAAO,SAETmvC,EAAmB94B,EAAM,CACvB/L,OAAO,EACPE,KAAM2d,IAAMld,OAAOjE,IAAIqD,KAAKG,KAC5BD,QAAS4d,IAAMld,OAAOjE,IAAIqD,KAAKE,UAEjC8L,EAAK6qB,QACN,KAAC,GACF,IAGJU,EAAS,uBAAuB,KAC9BC,EAAG,6CAA6C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzD,MAAM8W,QAAsBkqB,GAAoB,UAChDuB,EAAOzrB,EAAK5S,OAAO4G,KAAK4F,QAAQyyB,MAAM,GACtC,MAAM0M,QAAkB/4B,EAAKsY,aAAa,QAC1CmT,EAAOsN,GAAW1M,WAAMnc,EACzB,MACDsb,EAAG,+DAA+D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC3E,MAAM8W,QAAsBkqB,GAAoB,UAChDuB,EAAOzrB,EAAK5S,OAAO4G,KAAK4F,QAAQyyB,MAAM,SAEhCrsB,EAAK+X,cAAc,CAAC,OAAQ,UAClC0T,EAAOzrB,EAAK5S,OAAO4G,KAAK4F,QAAQyyB,MAAM,SAEhCrsB,EAAKsY,aAAa,QACxBmT,EAAOzrB,EAAK5S,OAAO4G,KAAK4F,QAAQyyB,MAAM,GACtCZ,EAAOzrB,EAAK5S,OAAO4G,KAAKmT,MAAMxR,OAAO02B,MAAM,QAC5C,KAAC,IAGJd,EAAS,oBAAoB,KAC3BC,EAAG,0BAA0B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACtC,MAAM8W,QAAsBkqB,GAAoB,aAC1C5S,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BrsB,EAAK6qB,QACN,MACDW,EAAG,qBAAqB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACjC,MAAM8W,QAAsBkqB,GAAoB,QAC1C5S,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BrsB,EAAK6qB,QACN,MACDW,EAAG,mCAAmC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC/C,MAAM8W,QAAsBkqB,GAAoB,UAC1C5S,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BZ,EAAOnU,EAAQ,GAAGxiB,MAAMu3B,MAAM,WAC9BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,OAC/BrsB,EAAK6qB,QACN,MACDW,EAAG,qCAAqC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACjD,MAAM8W,QAAsBkqB,GAAoB,gBAC1ClqB,EAAK+X,cAAc,CAACnjB,OAAOjE,IAAIqD,KAAKE,UAC1Cu8B,EAAOzwB,EAAK5S,OAAO8G,SACnB,MAAMojB,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BZ,EAAOnU,EAAQ,GAAGxiB,MAAMu3B,MAAM,WAC9BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,OAC/BZ,EAAOnU,EAAQ,GAAGxiB,MAAMu3B,MAAM,eAC9BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,SAC/BrsB,EAAK6qB,QACN,MACDW,EAAG,kCAAkC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC9C,MAAM8W,QAAsBkqB,GAAoB,gBAC1ClqB,EAAK+X,cAAc,CAAC,SAC1B,MAAMT,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BZ,EAAOnU,EAAQ,GAAGxiB,MAAMu3B,MAAM,WAC9BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,OAC/BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,QAC/BrsB,EAAK6qB,QACN,MACDW,EAAG,wCAAwC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACpD,MAAM8W,QAAsBkqB,GAAoB,SAC1C5S,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BZ,EAAOnU,EAAQ,GAAGxiB,MAAMu3B,MAAM,aAC9BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,SAC/BrsB,EAAK6qB,QACN,MACDW,EAAG,sCAAsC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAClD,MAAM8W,QAAsBkqB,GAAoB,eAC1ClqB,EAAKT,OAAO,CAAEnS,OAAQ,CAAEP,KAAM,WACpC,MAAMyqB,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BZ,EAAOnU,EAAQ,GAAGxiB,MAAMu3B,MAAM,aAC9BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,SAC/BrsB,EAAK6qB,QACN,MACDW,EAAG,kDAAkD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC9D,MAAM8W,QAAsBkqB,GAAoB,SAC1C5S,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,cAC/BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,IAC/BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,IAC/BrsB,EAAK6qB,QACN,MACDW,EAAG,uCAAuC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACnD,MAAM8W,QAAsBkqB,GAAoB,iBAC1ClqB,EAAKT,OAAO,CAAEnS,OAAQ,CAAEuqB,aAAc,eAC5C,MAAML,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,SAC/BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,OAC/BrsB,EAAK6qB,QACN,MACDW,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChD,MAAM8W,QAAsBkqB,GAAoB,eAC1ClqB,EAAKT,OAAO,CAAEnS,OAAQ,CAAEmJ,KAAM,aACpC,MAAM+gB,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,gBAC/BrsB,EAAK6qB,QACN,MACDW,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChD,MAAM8W,QAAsBkqB,GAAoB,eAC1ClqB,EAAKT,OAAO,CAAEnS,OAAQ,CAAEsW,KAAM,WACpC,MAAM4T,EAAUtX,EAAKqX,iBACrBoU,EAAOnU,EAAQ1d,QAAQyyB,MAAM,GAC7BZ,EAAOnU,EAAQ,GAAG3iB,OAAO03B,MAAM,gBAC/BZ,EAAOnU,EAAQ,GAAGxiB,MAAMu3B,MAAM,YAC9BrsB,EAAK6qB,QACN,KAAC,IAIJU,EAAS,iBAAiB,KACxBC,EAAG,4CAA4C,IAAatiC,OAAA,OAAA,OAAA,GAAA,YAAC,MAC7DsiC,EAAG,2CAA2C,SAC9CA,EAAG,oFAAoF,SACvFA,EAAG,0EAA0E,SAC7EA,EAAG,qCAAqC,SACxCA,EAAG,sCAAsC,QAAS,IAGpDD,EAAS,UAAU,KACjBuK,GAAW,IAAW5sC,OAAA,OAAA,OAAA,GAAA,kBACdogC,IACP,MAED3F,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACL,QAAVylB,EAAA7d,KAAK1F,aAAK,IAAAujB,GAAAA,EACNjV,QAAQkJ,IAAK,IAAA+L,EAAC,OAAO,QAAPA,EAAA/L,eAAAA,EAAG9G,YAAI,IAAA6S,OAAA,EAAAA,EAAEsD,QAAQ,uBAAwB,IAAK,CAAK,IAClE5R,SAAe1R,GAAKzF,OAAA,OAAA,OAAA,GAAA,YAAC,OAAAyF,EAAEk8B,QAAQ,YAC5BvB,IACP,MAGD,MAAM0P,EAAyBpiC,GAAoB1N,OAAA,OAAA,OAAA,GAAA,0BACjDunC,EACE,CAAC,aAAc,SAAU,YAAa,YAAYpiC,SAASuI,IAE7D60B,EAAoB,QAAbhZ,EAAA3hB,KAAKuoB,gBAAQ,IAAA5G,OAAA,EAAAA,EAAE+J,MAAM6P,MAAM,GAClCv7B,KAAKI,SAASpG,IAAI,OAAQ,WAAY8L,GACtC60B,EAAO36B,KAAKI,SAAStG,IAAI,OAAQ,aAAayhC,MAAMz1B,GACpD,MAAMoJ,QAAsBkqB,GAAoB,gBAC1ClqB,aAAI,EAAJA,EAAMuC,OACZkpB,EAAoB,QAAb3L,EAAAhvB,KAAKuoB,gBAAQ,IAAAyG,OAAA,EAAAA,EAAEtD,MAAM6P,MAAM,GAClC,MAAMt2B,EAA2B,QAAbsqB,EAAAvvB,KAAKuoB,gBAAQ,IAAAgH,OAAA,EAAAA,EAAEva,SAASqB,MAC5CskB,EAAO11B,aAAW,EAAXA,EAAaoB,OAAOk1B,MAAmB,cAAbz1B,GACjC60B,EAAO11B,eAAAA,EAAalJ,MAAMw/B,MAAM,GACf,eAAbz1B,EACF60B,EAA2B,QAApBT,EAAAj1B,eAAAA,EAAagB,eAAO,IAAAi0B,OAAA,EAAAA,EAAEpxB,QAAQyyB,MAAM,GAEvB,QAApBnB,EAAAn1B,aAAW,EAAXA,EAAagB,eAAO,IAAAm0B,GAAAA,EAAE7qB,SAASuC,YAE7B6tB,EAAiD,UAAhC,QAAV9hB,EAAA7d,KAAKmoC,aAAK,IAAAtqB,OAAA,EAAAA,EAAErR,MAAM47B,GAAYA,EAAEhiC,MAAQ0L,WAAE,IAAA6P,OAAA,EAAAA,EAAE3b,KAAK,UAGtDkJ,aAAI,EAAJA,EAAM6qB,QACd,IAEAW,EAAG,+CAA+C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACrD8vC,EAAgB,SACvB,MAEDxN,EAAG,sDAAsD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAC5D8vC,EAAgB,YACvB,MAEDxN,EAAG,0CAA0C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAChD8vC,EAAgB,WACvB,MACDxN,EAAG,qDAAqD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAC3D8vC,EAAgB,aACvB,KAAC,IAIJzN,EAAS,mCAAmC,SAC5CA,EAAS,4BAA4B,SAGrCA,EAAS,2BAA2B,KAClCC,EAAG,4CAA4C,SAC/CA,EAAG,4CAA4C,SAC/CA,EAAG,+DAA+D,QAAS,IAI7ED,EAAS,6BAA6B,QAAS,ECrgB1C,MACM5+B,GAAU,CAAEy+B,YAAa,oBAEtC,IAAA+N,GAAe,EAAG5N,WAAUC,KAAIC,SAAQ9H,QAAO8M,aAC7C9M,GAAM,KACJoH,IAAmB,IAGrBQ,EAAS,qBAAqB,KAC5BC,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChD,MAAM8W,QAAakqB,GAAoB,QACjC1qB,EAAQQ,aAAA,EAAAA,EAAMR,MACpBisB,EAAOjsB,GAAOmtB,GAAGZ,IAAI7b,UACrBub,EAAOjsB,aAAA,EAAAA,EAAO7S,QAAQ+O,QAAQ9B,QAAQyyB,MAAM,GAC5CZ,EAAOjsB,aAAK,EAALA,EAAO7S,QAAQ+O,SAASuwB,QAAQ,OACvCR,EAAOjsB,aAAK,EAALA,EAAO7S,QAAQ+O,SAASuwB,QAAQ,SACvCR,EAAOjsB,aAAK,EAALA,EAAO7S,QAAQ+O,SAASuwB,QAAQ,QACvCR,EAAOjsB,aAAK,EAALA,EAAO7S,QAAQgP,OAAO0wB,MAAM,KACnCZ,EAAOjsB,aAAK,EAALA,EAAO7S,QAAQ+b,QAAQ2jB,MAAM,KACpCoE,IAAQjxB,aAAK,EAALA,EAAO7S,QAAQ6b,YACvBijB,EAAOjsB,aAAA,EAAAA,EAAO7S,QAAQ6d,KAAK5Q,QAAQyyB,MAAM,GACzCZ,EAAOj/B,OAAOomB,KAAKpT,aAAK,EAALA,EAAO7S,QAAQ6d,KAAK,IAAI5Q,QAAQyyB,MAAM,GACzDZ,EAAOj/B,OAAOomB,KAAKpT,aAAA,EAAAA,EAAO7S,QAAQ6d,KAAK,KAAKyhB,QAAQ,YACpDR,SAAcjsB,aAAK,EAALA,EAAO7S,QAAQ6d,KAAK,GAAG1P,WAAUuxB,MAAM,YACrDZ,EAAOjsB,eAAAA,EAAO7S,QAAQ6d,KAAK,GAAG1P,SAASgB,MAAMmwB,QAAQ,gBACrDR,EAAOj/B,OAAOomB,KAAKpT,aAAA,EAAAA,EAAO7S,QAAQ6d,KAAK,KAAKyhB,QAAQ,eACpDR,EAAOjsB,eAAAA,EAAO7S,QAAQ6d,KAAK,GAAGC,aAAa4hB,MAAM,SACjDZ,EAAOj/B,OAAOomB,KAAKpT,aAAA,EAAAA,EAAO7S,QAAQ6d,KAAK,KAAKyhB,QAAQ,mBACpDR,EAAOjsB,eAAAA,EAAO7S,QAAQ6d,KAAK,GAAGE,iBAAiB2hB,MAAM,eACrDZ,EAAOj/B,OAAOomB,KAAKpT,aAAA,EAAAA,EAAO7S,QAAQ6d,KAAK,KAAKyhB,QAAQ,WACpDR,EAAOjsB,eAAAA,EAAO7S,QAAQ6d,KAAK,GAAGG,SAAS0hB,MAAM,cAC9C,KAAC,IAGJd,EAAS,cAAc,KACrBC,EAAG,qBAAqB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACjC,MAAM8W,QAAakqB,GAAoB,QACjC1qB,EAAQQ,aAAA,EAAAA,EAAMR,MACpBisB,EAAOjsB,GAAOmtB,GAAGZ,IAAI7b,UACrBub,EAAOjsB,eAAAA,EAAOxJ,UAAUi2B,QAAQ,mBAChCR,EAAOjsB,eAAAA,EAAOxJ,UAAUi2B,QAAQ,cACjC,KAAC,IAGJV,EAAS,aAAa,KACpBC,EAAG,gBAAgB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC5B,MAAM8W,QAAakqB,GAAoB,QACjC1qB,EAAQQ,aAAA,EAAAA,EAAMR,MACpBisB,EAAOjsB,GAAOmtB,GAAGZ,IAAI7b,UACrB,MAAMxa,QAAa8J,aAAK,EAALA,EAAOzD,UAC1B0vB,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,OAClCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,YAClCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,UAClCR,EAAOj/B,OAAOomB,KAAKld,IAAOu2B,QAAQ,WACnC,KAAC,GACF,ECrDG,MAAMxmB,GAAM,mBACN9Y,GAAU,CAAEy+B,YAAa,sBAKtC,IAAAgO,GAAe,EAAG7N,WAAUC,KAAIC,SAAQgF,SAAQ9M,YAC9C4H,EAAS,kBAAkB,KACzBC,EAAG,qCAAqC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACjD,MAAM8P,OANY,EAAOnM,EAAc6I,EAAe,CAAE,IAAIxM,OAAA,OAAA,OAAA,GAAA,YAChE,OAAA+gC,GAAmBp9B,EAAM6I,EAAM+P,GAAI,IAKX4lB,CAAgB,aAC9BlD,EAAa,IAAIC,GAEjBiR,QAAuBlR,EAAWW,iBAAiB9vB,GACzDyyB,EAAO4N,GAAgB1M,GAAGzc,UAC1BugB,EAAOz3B,aAAA,EAAAA,EAAOsoB,QAAQxwB,KAAK1D,OAAO2D,GAAI,UAEtC,MAAMu2B,EAAQH,GACRmS,EAA6B,QAAb3qB,EAAA7d,KAAKopB,cAAQ,IAAAvL,OAAA,EAAAA,EAAAjV,QAChCkJ,IAAM,IAAA+L,EAAA,OAAyB,QAAzBA,EAAA/L,EAAEpJ,MAAM1I,KAAK1D,OAAO2D,WAAK,IAAA4d,OAAA,EAAAA,EAAA2Y,KAAK,IAEvCmE,EAAOnE,EAAMF,aAAaxtB,QAAQyyB,MAAMiN,aAAa,EAAbA,EAAe1/B,cACjDZ,aAAK,EAALA,EAAO6xB,QACd,KAAC,IAGJlH,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4hC,GAAmBrlB,GAC1B,KAAC,ECvBG,MAAMA,GAAM,kBACN9Y,GAAU,CAAEy+B,YAAa,qBAEhCC,GAAkB,CAAOx+B,EAAc6I,EAAe,CAAE,IAAIxM,OAAA,OAAA,OAAA,GAAA,YAChE,OAAA+gC,GAAmBp9B,EAAM6I,EAAM+P,GAAI,IAErC,IAAA8zB,GAAe,EAAGhO,WAAUC,KAAIC,SAAQgF,SAAQ9M,YAC9C4H,EAAS,oBAAoB,KAC3BC,EAAG,oCAAoC,KACrC,MAAMrD,EAAa,IAAIC,GACvBqD,EAAOtD,EAAWx7B,QAAQ+O,SAASuwB,QAAQ,OAC3CR,EAAOtD,EAAWx7B,QAAQ+O,SAASuwB,QAAQ,UAC3CR,EAAOtD,EAAWx7B,QAAQ+O,SAASuwB,QAAQ,eAC3CR,EAAOtD,EAAWx7B,QAAQqJ,UAAUi2B,QAClC,oCAEFR,EAAOtD,EAAWx7B,QAAQgP,OAAO0wB,MAAM,KACvCZ,EAAOtD,EAAWx7B,QAAQ+b,QAAQ2jB,MAAM,KACxCoE,EAAOtI,EAAWx7B,QAAQ6b,WAC1BijB,EAAOtD,EAAWx7B,QAAQ07B,SAAS,GAAGC,cAAc+D,MAClD,sBAEFZ,EAAOtD,EAAWx7B,QAAQ07B,SAAS,GAAGE,cAAc8D,MAClD,kBAEFoE,GAAQtI,EAAWx7B,QAAQ66B,cAAc,GACzC,IAIJ+D,EAAS,UAAU,SAEnBA,EAAS,gCAAgC,KACvCC,EAAG,0BAA0B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACtCk/B,GAAcoR,uBACR9P,KACN,MAAMmL,EAAUlL,GAAY,eAC5B8B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,GAC7BZ,EAAOoJ,EAAQ,GAAGloC,QAAQ+O,SAASuwB,QAAQ,qBACrC4I,EAAQ,GAAGx5B,QACjBowB,EAAO9B,GAAY,eAAe/vB,QAAQyyB,MAAM,EACjD,KAAC,IAGJd,EAAS,gBAAgB,KACvBC,EAAG,wBAAwB,KACzB,MAAMrD,WAAEA,GAAeC,GACvBqD,EAAOtD,GAAYwE,GAAGZ,IAAI7b,UAC1Bub,EAAOtD,aAAU,EAAVA,EAAYx7B,QAAQ+O,SAASuwB,QAAQ,cAAc,GAC1D,IAGJV,EAAS,WAAW,KAClBC,EAAG,yCAAyC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACrDk/B,GAAcoR,uBACR9P,KACN,MAAMiO,EAEH,QAFiBhpB,EAAA9B,SAAS7R,cAC3B,wCACC,IAAA2T,OAAA,EAAAA,EAAAuU,UACHuI,SAAckM,GAAatL,MAAM,UACjC,MAAMwI,EAAUlL,GAAY,eAC5B8B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,SACvBwI,EAAQ,GAAGx5B,QACjBowB,EAAO9B,GAAY,eAAe/vB,QAAQyyB,MAAM,EACjD,KAAC,IAGJd,EAAS,aAAa,KACpBC,EAAG,uBAAuB,KACxB,MACM91B,GADQ,IAAI0yB,IACCrsB,UACb6W,EAAOpmB,OAAOomB,KAAKld,GACzB+1B,EAAO7Y,EAAKhZ,QAAQyyB,MAAM,GAC1BZ,EAAO7Y,GAAMqZ,QAAQ,eACrBR,EAAO7Y,GAAMqZ,QAAQ,UACrBR,EAAO7Y,GAAMqZ,QAAQ,QACrBR,EAAO7Y,GAAMqZ,QAAQ,WAAW,GAChC,IAGJV,EAAS,2BAA2B,KAClCC,EAAG,6BAA6B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzC,MAAM8P,QAAcqyB,GAAgB,WAC9BlD,EAAa,IAAIC,GAEjBiR,QAAuBlR,EAAWW,iBAAiB9vB,GACzDyyB,EAAO4N,GAAgB1M,GAAGzc,gBACpBlX,EAAM6xB,QACb,MAEDW,EAAG,wCAAwC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACpD,MAAM8P,QAAcqyB,GAAgB,aAC9BlD,EAAa,IAAIC,GAEjBiR,QAAuBlR,EAAWW,iBAAiB9vB,GACzDyyB,EAAO4N,GAAgB1M,GAAGzc,UAC1BugB,EAAOz3B,aAAA,EAAAA,EAAOsoB,QAAQxwB,KAAK1D,OAAO2D,GAAI,gBAChCiI,EAAM6xB,QACb,KAAC,IAGJU,EAAS,gCAAgC,IAAWriC,OAAA,OAAA,OAAA,GAAA,YAClDsiC,EAAG,gDAAgD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC5D,MAAM8P,QAAcqyB,GAAgB,aAC9BlD,EAAa,IAAIC,GAEjBqR,QAA0BtR,EAAWW,iBAAiB9vB,GAC5DyyB,EAAOgO,GAAmB9M,GAAGzc,UAC7BugB,EAAOz3B,aAAA,EAAAA,EAAOsoB,QAAQxwB,KAAK1D,OAAO2D,GAAI,UAEtC,MAAM2oC,QAA6BvR,EAAWgB,sBAAsBnwB,GACpEyyB,EAAOiO,GAAsB/M,GAAGzc,UAChCugB,IAAQz3B,aAAK,EAALA,EAAOsoB,QAAQxwB,KAAK1D,OAAO2D,GAAI,iBACjCiI,EAAM6xB,QACb,KACF,MAGDU,EAAS,kBAAkB,SAE3BA,EAAS,6BAA6B,KAEpCC,EAAG,6CAA6C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACzD,MAAMi/B,EAAa,IAAIC,GAEjBuR,QAAyBxR,EAAWQ,aAJ9B,GAIkD,CAC5D97B,KAAM,cAER4+B,EAAOkO,GAAkBhN,GAAGzc,SAC7B,MAEDsb,EAAG,4CAA4C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACxD,MAAM8P,QAAcqyB,GAAgB,aAC9B31B,EAAO,CACX7I,KAAMmM,aAAA,EAAAA,EAAOiwB,aACbrjB,KAAM5M,aAAA,EAAAA,EAAO4M,MAETuiB,EAAa,IAAIC,GAEjBiR,QAAuBlR,EAAWQ,aAlB5B,GAkBgDjzB,SACtDg0B,KACN+B,EAAO4N,GAAgB1M,GAAGzc,UAC1BugB,EAAOz3B,aAAA,EAAAA,EAAOsoB,QAAQxwB,KAAK1D,OAAO2D,GAAI,gBAChCiI,aAAK,EAALA,EAAO6xB,QACd,KAAC,IAGJU,EAAS,+BAA+B,KACtCC,EAAG,wCAAwC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACpD,MAAMi/B,EAAa,IAAIC,GACjB1iB,QAAek0B,OAAO/hC,OAAO,CACjCiE,KAAM,eAAe2J,KACrB5Y,KAAM,UAEFmM,QAAcqyB,GAAgB,mBAE9BryB,eAAAA,EAAOuG,OAAO,CAAEmG,OAAQA,aAAA,EAAAA,EAAQxO,MACtCu0B,EAAOzyB,eAAAA,EAAO0M,QAAQ2mB,MAAM3mB,GAE5ByiB,EAAWY,oBAAoBrjB,SACzBgkB,KACN+G,EAAOz3B,aAAA,EAAAA,EAAOsoB,QAAQxwB,KAAK1D,OAAO2D,GAAI,gBAChCiI,aAAK,EAALA,EAAO6xB,eACPnlB,aAAM,EAANA,EAAQmlB,QACf,MAEDW,EAAG,yDAAyD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACrE,MAAMi/B,EAAa,IAAIC,GACjB1iB,QAAek0B,OAAO/hC,OAAO,CACjCiE,KAAM,eAAe2J,KACrB5Y,KAAM,UAEFgtC,QAAkBD,OAAO/hC,OAAO,CACpCiE,KAAM,eAAe2J,eACrB5Y,KAAM,QACN6Y,OAAQA,EAAOxO,MAEX8B,QAAcqyB,GAAgB,mBAE9BryB,eAAAA,EAAOuG,OAAO,CAAEmG,OAAQm0B,aAAA,EAAAA,EAAW3iC,MACzCu0B,EAAOzyB,eAAAA,EAAO0M,QAAQ2mB,MAAMwN,GAE5B1R,EAAWY,oBAAoBrjB,SACzBgkB,KACN+G,EAAOz3B,aAAA,EAAAA,EAAOsoB,QAAQxwB,KAAK1D,OAAO2D,GAAI,gBAChCiI,aAAK,EAALA,EAAO6xB,QACd,KAAC,IAGJU,EAAS,8BAA8B,KACrCC,EAAG,kEAAkE,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC9E,MAGMi/B,EAAa,IAAIC,GACjB0R,QAAiB3R,EAAWS,cAAc,GAJ/B,CACfK,aAAc,cAIhBwC,EAAOqO,GAAUnN,GAAGzc,SACrB,MAEDsb,EAAG,8DAA8D,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC1E,MAAMi/B,EAAa,IAAIC,GACjB1iB,QAAek0B,OAAO/hC,OAAO,CACjCiE,KAAM,eAAe2J,KACrB5Y,KAAM,UAEFmM,QAAcqyB,GAAgB,mBAE9BryB,eAAAA,EAAOuG,OAAO,CAAEmG,OAAQA,aAAA,EAAAA,EAAQxO,MACtCu0B,EAAOzyB,eAAAA,EAAO0M,QAAQ2mB,MAAM3mB,SAEtByiB,EAAWS,cAAc,GAAIljB,SAC7BgkB,KACN+G,EAAOz3B,aAAA,EAAAA,EAAOsoB,QAAQxwB,KAAK1D,OAAO2D,GAAI,gBAChCiI,aAAK,EAALA,EAAO6xB,eACPnlB,aAAM,EAANA,EAAQmlB,QACf,KAAC,IAIJU,EAAS,uBAAuB,SAGhCA,EAAS,kBAAkB,SAE3B5H,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,sBACf4hC,GAAmBrlB,YACnBqa,EACI,UADQ,QAAZnR,EAAA7d,KAAKipC,eAAO,IAAAprB,OAAA,EAAAA,EAAE7I,gBACV,IAAA2M,OAAA,EAAAA,EAAA/Y,QAAQoS,IAAK,IAAA6C,EAAC,OAAM,QAANA,EAAA7C,EAAEhQ,YAAI,IAAA6S,OAAA,EAAAA,EAAEtgB,SAAS,eAAeoX,KAAM,oBACpDpF,SAASyL,GAAMA,EAAE+e,UACtB,KAAC,EC1OG,MACMl+B,GAAU,CAAEy+B,YAAa,wBAEtC,IAAe4O,GAAA,EAAGzO,WAAUC,KAAIC,SAAQgF,aACtClF,EAAS,oBAAoB,KAC3BC,EAAG,oCAAoC,KACrC,MAAMyO,EAAU,IAAI1S,GACpBkE,EAAOwO,EAAQttC,QAAQ+O,SAASuwB,QAAQ,OACxCR,EAAOwO,EAAQttC,QAAQ+O,SAASuwB,QAAQ,UACxCR,EAAOwO,EAAQttC,QAAQ+O,SAASuwB,QAAQ,YACxCR,EAAOwO,EAAQttC,QAAQqJ,UAAUi2B,QAAQ,iCACzCR,EAAOwO,EAAQttC,QAAQgP,OAAO0wB,MAAM,KACpCZ,EAAOwO,EAAQttC,QAAQ+b,QAAQ2jB,MAAM,QACrCoE,GAAQwJ,EAAQttC,QAAQ6b,WACxBioB,EAAOwJ,EAAQttC,QAAQ66B,cAAc,GACrC,IAGJ+D,EAAS,WAAW,KAClBC,EAAG,yCAAyC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,mBACrC,IAAIq+B,IACZlwB,QAAO,SACTqyB,KACN,MAAMiO,EAEH,QAFiBhpB,EAAA9B,SAAS7R,cAC3B,qCACC,IAAA2T,OAAA,EAAAA,EAAAuU,UACHuI,SAAckM,GAAatL,MAAM,UACjC,MAAMwI,EAAUlL,GAAY,YAC5B8B,EAAOoJ,EAAQj7B,QAAQyyB,MAAM,SACvBwI,EAAQ,GAAGx5B,QACjBowB,EAAO9B,GAAY,YAAY/vB,QAAQyyB,MAAM,EAC9C,KAAC,IAGJd,EAAS,aAAa,KACpBC,EAAG,uBAAuB,KACxB,MACM91B,GADQ,IAAI6xB,IACCxrB,UACb6W,EAAOpmB,OAAOomB,KAAKld,GACzB+1B,EAAO7Y,EAAKhZ,QAAQyyB,MAAM,GAC1BZ,EAAO7Y,GAAMqZ,QAAQ,UACrBR,EAAO7Y,GAAMqZ,QAAQ,QACrBR,EAAO7Y,GAAMqZ,QAAQ,UACrBR,EAAO7Y,GAAMqZ,QAAQ,QACrBR,EAAO7Y,GAAMqZ,QAAQ,WAAW,GAChC,IAIJV,EAAS,kBAAkB,SAC3BA,EAAS,wBAAwB,SACjCA,EAAS,qBAAqB,SAC9BA,EAAS,kBAAkB,QAAS,ECrD/B,MACM5+B,GAAU,CACrBy+B,YAAa,2BAGf,IAAA8O,GAAe,EAAG3O,WAAUC,KAAIE,SAAQ/H,QAAO8M,aAC7ClF,EAAS,8BAA8B,KACrC,MAAM4O,EAAkBrpC,KAAKI,SAAStG,IACpCkG,KAAK1D,OAAO2D,GACZ,wBAGFw6B,EAAS,wCAAwC,KAC/CG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,wBAAwB,EACjE,MAEDy6B,EAAG,oBAAoB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChC,MAAMkxC,QAAgBtpC,KAAKI,SAAStG,IAClCkG,KAAK1D,OAAO2D,GACZ,wBAEF0/B,GAAQ2J,EACT,MAED5O,EAAG,2CAA2C,KAC5C,MAAM1tB,EAAQ,IAAIu8B,cAAc,UAAW,CAAE75B,SAAS,IACtDiwB,GAAQlwB,EAAoBzC,GAAO,IAGrC0tB,EAAG,2CAA2C,KAC5C,MAAM1tB,EAAQ,IAAIu8B,cAAc,UAAW,CAAE55B,SAAS,IACtDgwB,GAAQlwB,EAAoBzC,GAAO,IAGrC0tB,EAAG,uCAAuC,KACxC,MAAM1tB,EAAQ,IAAIu8B,cAAc,UAAW,CAAE75B,SAAS,IACtDiwB,EAAOlwB,EAAoBzC,GAAO,IAGpC0tB,EAAG,uCAAuC,KACxC,MAAM1tB,EAAQ,IAAIu8B,cAAc,UAAW,CAAE55B,SAAS,IACtDgwB,EAAOlwB,EAAoBzC,GAAO,GAClC,IAGJytB,EAAS,uCAAuC,KAC9CG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,wBAAwB,EACjE,MAEDy6B,EAAG,oBAAoB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChC,MAAMkxC,QAAgBtpC,KAAKI,SAAStG,IAClCkG,KAAK1D,OAAO2D,GACZ,wBAEF0/B,EAAO2J,EACR,MAED5O,EAAG,uCAAuC,KACxC,MAAM1tB,EAAQ,IAAIu8B,cAAc,UAAW,CAAE75B,SAAS,IACtDiwB,EAAOlwB,EAAoBzC,GAAO,IAGpC0tB,EAAG,uCAAuC,KACxC,MAAM1tB,EAAQ,IAAIu8B,cAAc,UAAW,CAAE75B,SAAS,IACtDiwB,EAAOlwB,EAAoBzC,GAAO,IAGpC0tB,EAAG,uCAAuC,KACxC,MAAM1tB,EAAQ,IAAIu8B,cAAc,UAAW,CAAE75B,SAAS,IACtDiwB,GAAQlwB,EAAoBzC,GAAO,IAGrC0tB,EAAG,uCAAuC,KACxC,MAAM1tB,EAAQ,IAAIu8B,cAAc,UAAW,CAAE55B,SAAS,IACtDgwB,GAAQlwB,EAAoBzC,GAAO,GACnC,IAGJ6lB,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACT4H,KAAKI,SAASpG,IAClBgG,KAAK1D,OAAO2D,GACZ,uBACAopC,EAEH,KAAC,GACF,ECjFG,MACMxtC,GAAU,CACrBy+B,YAAa,sBAGf,IAAAkP,GAAe,EAAG/O,WAAUC,KAAIE,SAAQ/H,QAAO8H,aAE7CF,EAAS,yCAAyC,SAClDA,EAAS,4CAA4C,SACrDA,EAAS,oCAAoC,QAAS,ECdjD,MACM5+B,GAAU,CACrBy+B,YAAa,sBAGTmP,GAAiB,CACrBpiC,EACAqiC,EAAsC,CAACriC,MAEvC,MAAMI,EAAyB,GAI/B,OAHAiiC,EAAYn6B,SAAS/I,IACnBiB,EAAQjC,KAAK,CAAEtM,OAAQsN,GAAI,IAEtB,CACLgB,MAAO,CAAC,CAAEC,YACVH,MAAOD,EACR,EAGH,IAAAsiC,GAAe,EACblP,WACAC,KACA7H,QACAuM,YACAxE,SACAD,aAEA,MAAMiP,EAAY5pC,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,eAEpD26B,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,wBACQ,UAAlB2Q,GAAGC,qBAAe,IAAA6U,OAAA,EAAAA,EAAAtT,OACzB,MAEDsoB,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACf4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,cAAe2pC,SACzB,QAAlBjoB,EAAA5Y,GAAGC,qBAAe,IAAA2Y,OAAA,EAAAA,EAAApb,QAAO,EAChC,MAEDk0B,EAAS,oEAAoE,KAC3EG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACVogC,IACP,MAEDkC,EAAG,6BAA6B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACzC,MAAM8O,QAAazC,EAAQmF,SAAS,CAClCjF,MAAO,CAAC,QACRC,KAAM,CAAEa,KAAM,CAAEM,WAAW,YAEvB6yB,WACAA,KACN,MAAMiR,EAEH,QAFchsB,EAAA9B,SAAS7R,cACxB,sCACC,IAAA2T,OAAA,EAAAA,EAAAuU,UACHuI,EAAOj/B,OAAOomB,KAAK5a,IAAOi0B,QAAQ,cAClCR,EAAOzzB,EAAK4iC,YAAYvO,OAAM,GAC9BZ,EAAOj/B,OAAOomB,KAAK5a,IAAOi0B,QAAQ,YAClCR,EAAOzzB,EAAK6iC,UAAUxO,MAAM,QAC5BZ,EAAOkP,GAAUtO,MAAM,OACxB,MAEDb,EAAG,gCAAgC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAC5C,MAAM8O,QAAazC,EAAQmF,SAAS,CAClCjF,MAAO,CAAC,OAAQ,QAChBC,KAAM,CAAEa,KAAM,CAAEM,WAAW,YAEvB6yB,WACAA,KACN,MAAMiR,EAEH,QAFcloB,EAAA5F,SAAS7R,cACxB,sCACC,IAAAyX,OAAA,EAAAA,EAAAyQ,UACHuI,EAAOj/B,OAAOomB,KAAK5a,IAAOi0B,QAAQ,cAClCR,EAAOzzB,EAAK4iC,YAAYvO,OAAM,GAC9BZ,EAAOj/B,OAAOomB,KAAK5a,IAAOi0B,QAAQ,YAClCR,EAAOzzB,EAAK6iC,UAAUxO,MAAM,eAC5BZ,EAAOkP,GAAUtO,MAAM,cACxB,MAED6D,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,KAAC,IAGJiC,EAAS,4BAA4B,KAEnC,MAAMuP,EAAiB,CACrBjuC,EACAsL,EACAS,EAAgB,KACZ,CACJrC,KAAM,CAAE1J,OAAMsL,SAAQS,WAExB2yB,EAAS,eAAe,KACtB,MAAM71B,EAAOolC,EAAe,SAAU,IACtCtP,EAAG,kCAAkC,KACnC,MAAMj1B,EAAOgkC,GAAe,IAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGjEb,EAAG,2BAA2B,KAC5B,MAAMj1B,EAAOgkC,GAAe,GAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAK,IAGhEb,EAAG,0BAA0B,KAC3B,MAAMj1B,EAAOgkC,GAAe,IAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAK,GAC9D,IAGJd,EAAS,cAAc,KACrB,MAAM71B,EAAOolC,EAAe,QAAS,IACrCtP,EAAG,kCAAkC,KACnC,MAAMj1B,EAAOgkC,GAAe,IAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGjEb,EAAG,2BAA2B,KAC5B,MAAMj1B,EAAOgkC,GAAe,GAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAK,IAGhEb,EAAG,wBAAwB,KACzB,MAAMj1B,EAAOgkC,GAAe,IAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,GAC/D,IAGJd,EAAS,cAAc,KACrB,MAAM71B,EAAOolC,EAAe,QAAS,IACrCtP,EAAG,kCAAkC,KACnC,MAAMj1B,EAAOgkC,GAAe,IAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGjEb,EAAG,yBAAyB,KAC1B,MAAMj1B,EAAOgkC,GAAe,GAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGjEb,EAAG,0BAA0B,KAC3B,MAAMj1B,EAAOgkC,GAAe,IAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAK,GAC9D,IAGJd,EAAS,cAAc,KACrB,MAAM71B,EAAOolC,EAAe,QAAS,IACrCtP,EAAG,8BAA8B,KAC/B,MAAMj1B,EAAOgkC,GAAe,GAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGjEb,EAAG,iCAAiC,KAClC,MAAMuP,EAAYD,EAAe,QAAS,IACpCvkC,EAAOgkC,GAAe,IAC5B9O,EAAOl2B,EAAQ6B,aAAa2jC,EAAWxkC,GAAM0B,WAAWo0B,OAAM,GAC9DZ,EAAOl2B,EAAQ6B,aAAa2jC,EAAWxkC,GAAM2B,WAAWm0B,OAAM,EAAK,IAGrEb,EAAG,kCAAkC,KACnC,MAAMj1B,EAAOgkC,GAAe,IAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGjEb,EAAG,yBAAyB,KAC1B,MAAMj1B,EAAOgkC,GAAe,GAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGjEb,EAAG,0BAA0B,KAC3B,MAAMj1B,EAAOgkC,GAAe,IAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAK,GAC9D,IAGJd,EAAS,cAAc,KACrB,MAAM71B,EAAO,CACXa,KAAM,CACJ1J,KAAM,QACNsL,OAAQ,GACRK,MAAO,CACL,EAAG,UACH,GAAI,aAKVgzB,EAAG,kCAAkC,KACnC,MAAMj1B,EAAOgkC,GAAe,GAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAMmC,SAAS2zB,MAAM,UAAU,IAGnEb,EAAG,yBAAyB,KAC1B,MAAMj1B,EAAOgkC,GAAe,IAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAMmC,SAAS2zB,MAAM,UAAU,GACjE,IAGJd,EAAS,gBAAgB,KACvB,MAAM71B,EAAOolC,EAAe,UAAW,IACvCtP,EAAG,0BAA0B,KAC3B,MAAMj1B,EAAOgkC,GAAe,GAC5B9O,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM0B,WAAWo0B,OAAM,GACzDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM4B,QAAQk0B,MAAM,IACtDZ,EAAOl2B,EAAQ6B,aAAa1B,EAAMa,GAAM6B,OAAOi0B,MAAM,EAAE,GACvD,GACF,IAGJd,EAAS,wCAAwC,KAC/CA,EAAS,gBAAgB,KACvBG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,eAAe,EACxD,MAEDy6B,EAAG,0BAA0B,KAC3B,MAAMwP,EAAgBT,GAAe,EAAG,CAAC,IACzC9O,EAAOl2B,EAAQoD,gBAAgBqiC,EAAe,IAAK,IAAI3O,OAAM,GAC7D,MAAM4O,EAAmBV,GAAe,GAAI,CAAC,IAC7C9O,EAAOl2B,EAAQoD,gBAAgBsiC,EAAkB,IAAK,IAAI5O,OAAM,EAAM,IAGxEb,EAAG,8BAA8B,KAC/B,MAAMwP,EAAgBT,GAAe,EAAG,CAAC,KACzC9O,EAAOl2B,EAAQoD,gBAAgBqiC,EAAe,EAAG,MAAM3O,OAAM,GAC7D,MAAM4O,EAAmBV,GAAe,GAAI,CAAC,KAC7C9O,EAAOl2B,EAAQoD,gBAAgBsiC,EAAkB,EAAG,MAAM5O,OAAM,EAAK,IAGvEb,EAAG,2CAA2C,KAC5C,MAAMj1B,EAAOgkC,GAAe,IAG5B9O,EAAOl2B,EAAQoD,gBAAgBpC,EAFhB,GACD,KACuC81B,OAAM,EAAK,IAGlEb,EAAG,2CAA2C,KAC5C,MAAMj1B,EAAOgkC,GAAe,IAG5B9O,EAAOl2B,EAAQoD,gBAAgBpC,EAFhB,GACD,KACuC81B,OAAM,EAAK,IAGlEb,EAAG,6CAA6C,KAC9C,MAAMj1B,EAAOgkC,GAAe,IAG5B9O,EAAOl2B,EAAQoD,gBAAgBpC,EAFhB,GACD,KACuC81B,OAAM,EAAM,GACjE,IAGJd,EAAS,iBAAiB,KACxBG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,eAAe,EACxD,MAEDy6B,EAAG,0BAA0B,KAC3B,MAAMwP,EAAgBT,GAAe,EAAG,CAAC,IACzC9O,EAAOl2B,EAAQoD,gBAAgBqiC,EAAe,IAAK,IAAI3O,OAAM,GAC7D,MAAM4O,EAAmBV,GAAe,GAAI,CAAC,IAC7C9O,EAAOl2B,EAAQoD,gBAAgBsiC,EAAkB,IAAK,IAAI5O,OAAM,EAAM,IAGxEb,EAAG,8BAA8B,KAC/B,MAAMwP,EAAgBT,GAAe,EAAG,CAAC,KACzC9O,EAAOl2B,EAAQoD,gBAAgBqiC,EAAe,EAAG,MAAM3O,OAAM,GAC7D,MAAM4O,EAAmBV,GAAe,GAAI,CAAC,KAC7C9O,EAAOl2B,EAAQoD,gBAAgBsiC,EAAkB,EAAG,MAAM5O,OAAM,EAAK,IAGvEb,EAAG,uCAAuC,KACxC,MAAMj1B,EAAOgkC,GAAe,IAG5B9O,EAAOl2B,EAAQoD,gBAAgBpC,EAFjB,GACH,KACsC81B,OAAM,EAAK,IAG9Db,EAAG,uCAAuC,KACxC,MAAMj1B,EAAOgkC,GAAe,IAG5B9O,EAAOl2B,EAAQoD,gBAAgBpC,EAFjB,GACH,KACsC81B,OAAM,EAAK,IAG9Db,EAAG,yCAAyC,KAC1C,MAAMj1B,EAAOgkC,GAAe,IAG5B9O,EAAOl2B,EAAQoD,gBAAgBpC,EAFjB,GACH,KACsC81B,OAAM,EAAM,GAC7D,GACF,IAGJd,EAAS,kCAAkC,KACzC,MAAM71B,EAAO,CACXa,KAAM,CACJqC,MAAO,GACPT,OAAQ,CACNa,MAAO,CACL5L,OAAQ,CACNyL,GAAI,CAAElP,MAAO,GACbwP,IAAK,CAAExP,MAAO,QAOxB4hC,EAAS,gBAAgB,KACvBG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,eAAe,EACxD,MAEDy6B,EAAG,mCAAmC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC/CuiC,EAAO36B,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,gBAAgBs7B,OAAM,GAC/D,MAAM2O,EAAgBT,GAAe,EAAG,CAAC,IACzC9O,EAAOl2B,EAAQuD,mBAAmBpD,EAAMslC,GAAe/iC,WAAWo0B,OAChE,GAEFZ,EAAOl2B,EAAQuD,mBAAmBpD,EAAMslC,GAAe9iC,WAAWm0B,OAChE,GAEF,MAAM4O,EAAmBV,GAAe,GAAI,CAAC,IAC7C9O,EACEl2B,EAAQuD,mBAAmBpD,EAAMulC,GAAkBhjC,WACnDo0B,OAAM,GACRZ,EACEl2B,EAAQuD,mBAAmBpD,EAAMulC,GAAkB/iC,WACnDm0B,OAAM,EACT,MAEDb,EAAG,iGAAiG,KAClG,MACMrnB,EAAa,CACjB5N,KAAM,CACJqC,MAAO,GACPT,OAAQ,CACNa,MAAO,CACL5L,OAAQ,CACNyL,GAAI,CAAElP,MAAO,GACbwP,IAAK,CAAExP,MAAO,QAOlB4M,EAAOgkC,GAAe,EAAG,CAAC,GAfX,IAgBrB9O,EAAOl2B,EAAQuD,mBAAmBqL,EAAY5N,GAAM0B,WAAWo0B,OAC7D,GAEFZ,EAAOl2B,EAAQuD,mBAAmBqL,EAAY5N,GAAM2B,WAAWm0B,OAC7D,EACD,IAGHb,EAAG,wCAAwC,KACzC,MAAMnyB,EAAc,GAAK3D,EAAKa,KAAKqC,MAC7BrC,EAAOgkC,GACX7kC,EAAKa,KAAK4B,OAAOa,MAAM5L,OAAO+L,IAAIxP,MAAQ0P,EAAc,GAE1DoyB,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM0B,WAAWo0B,OAAM,GAC/DZ,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAK,IAGtEb,EAAG,sCAAsC,KACvC,MAAMnyB,EAAc,GAAK3D,EAAKa,KAAKqC,MAC7BrC,EAAOgkC,GACX7kC,EAAKa,KAAK4B,OAAOa,MAAM5L,OAAO+L,IAAIxP,MAAQ0P,GAE5CoyB,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM0B,WAAWo0B,OAAM,GAC/DZ,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGvEb,EAAG,uCAAuC,KACxC,MAAMnyB,EAAc,GAAK3D,EAAKa,KAAKqC,MAC7BrC,EAAOgkC,GACX7kC,EAAKa,KAAK4B,OAAOa,MAAM5L,OAAO+L,IAAIxP,MAAQ0P,EAAc,GAE1DoyB,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM0B,WAAWo0B,OAAM,GAC/DZ,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGvEb,EAAG,qGAAqG,KACtG,MACMrnB,EAAa,CACjB5N,KAAM,CACJqC,MAAO,GACPT,OAAQ,CACNa,MAAO,CACL5L,OAAQ,CACNyL,GAAI,CAAElP,MAAO,GACbwP,IAAK,CAAExP,MAAO,SAOlB4M,EAAOgkC,GAAe,GAAI,CAAC,GAfb,IAgBpB9O,EAAOl2B,EAAQuD,mBAAmBqL,EAAY5N,GAAM0B,WAAWo0B,OAC7D,GAEFZ,EAAOl2B,EAAQuD,mBAAmBqL,EAAY5N,GAAM2B,WAAWm0B,OAC7D,EACD,IAGHb,EAAG,4BAA4B,KAC7B,MAAMwP,EAAgBT,GAAe,EAAG,CAAC,KACzC9O,EAAOl2B,EAAQuD,mBAAmBpD,EAAMslC,GAAe/iC,WAAWo0B,OAChE,GAEFZ,EAAOl2B,EAAQuD,mBAAmBpD,EAAMslC,GAAe9iC,WAAWm0B,OAChE,GAEF,MAAM4O,EAAmBV,GAAe,GAAI,CAAC,KAC7C9O,EACEl2B,EAAQuD,mBAAmBpD,EAAMulC,GAAkBhjC,WACnDo0B,OAAM,GACRZ,EACEl2B,EAAQuD,mBAAmBpD,EAAMulC,GAAkB/iC,WACnDm0B,OAAM,EAAM,GACd,IAGJd,EAAS,uBAAuB,KAC9BG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACV4H,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,eAAe,EACxD,MAEDy6B,EAAG,mCAAmC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC/CuiC,EAAO36B,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,gBAAgBs7B,OAAM,GAC/D,MAAM2O,EAAgBT,GAAe,EAAG,CAAC,IACzC9O,EAAOl2B,EAAQuD,mBAAmBpD,EAAMslC,GAAe/iC,WAAWo0B,OAChE,GAEFZ,EAAOl2B,EAAQuD,mBAAmBpD,EAAMslC,GAAe9iC,WAAWm0B,OAChE,GAEF,MAAM4O,EAAmBV,GAAe,GAAI,CAAC,IAC7C9O,EACEl2B,EAAQuD,mBAAmBpD,EAAMulC,GAAkBhjC,WACnDo0B,OAAM,GACRZ,EACEl2B,EAAQuD,mBAAmBpD,EAAMulC,GAAkB/iC,WACnDm0B,OAAM,EACT,MAEDb,EAAG,oCAAoC,KACrC,MAAMj1B,EAAOgkC,GAAe7kC,EAAKa,KAAKqC,MAAQ,GAC9C6yB,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM0B,WAAWo0B,OAAM,GAC/DZ,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAK,IAGtEb,EAAG,gCAAgC,KACjC,MAAMj1B,EAAOgkC,GAAe7kC,EAAKa,KAAKqC,OACtC6yB,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM0B,WAAWo0B,OAAM,GAC/DZ,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGvEb,EAAG,mCAAmC,KACpC,MAAMj1B,EAAOgkC,GAAe7kC,EAAKa,KAAKqC,MAAQ,GAC9C6yB,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM0B,WAAWo0B,OAAM,GAC/DZ,EAAOl2B,EAAQuD,mBAAmBpD,EAAMa,GAAM2B,WAAWm0B,OAAM,EAAM,IAGvEb,EAAG,4BAA4B,KAC7B,MAAMwP,EAAgBT,GAAe,EAAG,CAAC,KACzC9O,EAAOl2B,EAAQuD,mBAAmBpD,EAAMslC,GAAe/iC,WAAWo0B,OAChE,GAEFZ,EAAOl2B,EAAQuD,mBAAmBpD,EAAMslC,GAAe9iC,WAAWm0B,OAChE,GAEF,MAAM4O,EAAmBV,GAAe,GAAI,CAAC,KAC7C9O,EACEl2B,EAAQuD,mBAAmBpD,EAAMulC,GAAkBhjC,WACnDo0B,OAAM,GACRZ,EACEl2B,EAAQuD,mBAAmBpD,EAAMulC,GAAkB/iC,WACnDm0B,OAAM,EAAM,GACd,GACF,IAGJd,EAAS,oEAAoE,KAgB3EG,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,kBACVogC,WACAx4B,KAAKI,SAASpG,IAAIgG,KAAK1D,OAAO2D,GAAI,eAAe,EACxD,MAEDy6B,EAAG,uCAAuC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,sBACjC,QAAlBylB,EAAA9U,GAAGC,qBAAe,IAAA6U,GAAAA,EAAAtT,QAClB,MAAMZ,EArB4B,CAClChF,MAAO,CAAC,OAAQ,IAAK,IAAK,KAC1BC,KAAM,CACJa,KAAM,CACJ1J,KAAM,QACN4M,IAAK,CAAC,OACNb,MAAO,GACPT,OAAQ,CACNa,MAAO,CAAE5L,OAAQ,CAAEyL,GAAI,CAAElP,MAAO,GAAKwP,IAAK,CAAExP,MAAO,SAczD8Q,EAAS/E,KAAKa,KAAKkD,IAAM,SACnBlE,EAAQ+F,eAAeb,SACvBivB,KACN,MAAMwR,EAA+B,QAAhBzoB,EAAA5Y,GAAGC,qBAAa,IAAA2Y,OAAA,EAAAA,EAAE0oB,MAAMh0B,MAC7CskB,EAAyB,QAAlB3L,EAAAjmB,GAAGC,qBAAe,IAAAgmB,OAAA,EAAAA,EAAAqb,MAAMvhC,QAAQyyB,MAAM,GAC7CZ,EAAOyP,eAAAA,EAAc9hB,SAASiT,MAC5B,sEAEH,MAEDb,EAAG,gDAAgD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAC5D,MAAMuR,EAjC4B,CAClChF,MAAO,CAAC,OAAQ,IAAK,IAAK,KAC1BC,KAAM,CACJa,KAAM,CACJ1J,KAAM,QACN4M,IAAK,CAAC,OACNb,MAAO,GACPT,OAAQ,CACNa,MAAO,CAAE5L,OAAQ,CAAEyL,GAAI,CAAElP,MAAO,GAAKwP,IAAK,CAAExP,MAAO,eA0BnD4L,EAAQ+F,eAAeb,SACvBivB,WACAA,WACAA,WACAA,KACN,MAAM0R,EACqC,QAAzC/a,EAAAxT,SAAS7R,cAAc,wBAAkB,IAAAqlB,OAAA,EAAAA,EAAA6C,UAC3CuI,EAAO2P,GAAkB/O,MAAM,oBAC/B,MAAMgP,EAEH,QAFsBrQ,EAAAne,SAAS7R,cAChC,qCACC,IAAAgwB,OAAA,EAAAA,EAAA9H,UACHuI,EAAO4P,GAAkBhP,MAAM,MAChC,MACD6D,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,IACP,KAAC,IAGJiC,EAAS,0EAA0E,KACjFA,EAAS,mBAAmB,KAE1BC,EAAG,gCAAgC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACtCqM,EAAQqmB,SAAS,CACrBnmB,MAAO,CAAC,QACR0E,WAJe,KAKfzE,KAAM,CAAEa,KAAM,CAAEM,WAAW,YAEvB6yB,KACN+B,EAAO36B,KAAKuoB,SAASmD,MAAM6P,MAAM,GACjCZ,EAAO5e,SAAS7R,cAAc,iBAAiB+wB,IAAI7b,SACpD,KAAC,IAGJqb,EAAS,uBAAuB,KAC9BC,EAAG,qBAAqB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACjCqM,EAAQqmB,SAAS,CACfnmB,MAAO,CAAC,QACRC,KAAM,CAAEa,KAAM,CAAEM,WAAW,YAEvB6yB,KACN,MAAM4R,EAASzuB,SAAS7R,cAAc,WACtCywB,EAAO6P,aAAM,EAANA,EAAQtgC,cAAc,QAAQ+wB,IAAI2G,KACzCjH,EAAO6P,aAAM,EAANA,EAAQtgC,cAAc,WAAW+wB,IAAI2G,KAC5CjH,EAAO6P,aAAM,EAANA,EAAQtgC,cAAc,YAAY+wB,IAAI2G,WACvC3I,IACP,KAAC,IAGJmG,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,WACAS,IACP,KAAC,IAGJwB,EAAS,6EAA6E,KACpFA,EAAS,mBAAmB,KAE1BC,EAAG,gCAAgC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACtCqM,EAAQiB,KAAK,CACjBf,MAAO,CAAC,QACR0E,WAJe,KAKfzE,KAAM,CAAEa,KAAM,CAAEM,WAAW,YAEvB6yB,KACN+B,EAAO36B,KAAKuoB,SAASmD,MAAM6P,MAAM,GACjCZ,EAAO5e,SAAS7R,cAAc,iBAAiB+wB,IAAI7b,SACpD,KAAC,IAGJqb,EAAS,uBAAuB,KAC9BC,EAAG,qBAAqB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACjCqM,EAAQiB,KAAK,CACXf,MAAO,CAAC,QACRC,KAAM,CAAEa,KAAM,CAAEM,WAAW,YAEvB6yB,KACN,MAAM4R,EAASzuB,SAAS7R,cAAc,WACtCywB,EAAO6P,aAAM,EAANA,EAAQtgC,cAAc,QAAQ+wB,IAAI2G,KACzCjH,EAAO6P,aAAM,EAANA,EAAQtgC,cAAc,WAAW2xB,GAAG+F,KAC3CjH,EAAO6P,aAAM,EAANA,EAAQtgC,cAAc,YAAY+wB,IAAI2G,WACvC3I,IACP,KAAC,IAGJmG,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,kBACbogC,WACAS,WACAL,IACP,KAAC,GACF,ECvnBG,MACM/8B,GAAU,CACrBy+B,YAAa,4BAGf,IAAemQ,GAAA,EAAGhQ,WAAUC,KAAIC,aAC9BF,EAAS,qBAAqB,KAC5BA,EAAS,aAAa,KAEpBC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,KAE0C,IAGzDT,EAAG,iBAAiB,KAClBC,EAAO+P,WAAWC,QAAQ/X,GAAG,EAAG,IAAI2I,OAAM,GAC1CZ,EAAO+P,WAAWC,QAAQ/X,GAAG,OAAQ,SAAS2I,OAAM,GACpDZ,EAAO+P,WAAWC,QAAQ/X,GAAG,EAAG,IAAI2I,OAAM,GAC1CZ,EAAO+P,WAAWC,QAAQ/X,GAAG,OAAQ,IAAI2I,OAAM,GAC/CZ,EAAO+P,WAAWC,QAAQ/X,GAAG,GAAI,KAAK2I,OAAM,EAAM,GAClD,IAGJd,EAAS,cAAc,KAErBC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,MAE0C,IAGzDT,EAAG,iBAAiB,KAClBC,EAAO+P,WAAWC,QAAQ9tB,IAAI,IAAI0e,MAAM,KACxCZ,EAAO+P,WAAWC,QAAQ9tB,IAAI,IAAI0e,MAAM,MACxCZ,EAAO+P,WAAWC,QAAQ9tB,KAAK,IAAI0e,MAAM,MACzCZ,EAAO+P,WAAWC,QAAQ9tB,IAAI,MAAM0e,MAAM,MAC1CZ,EAAO+P,WAAWC,QAAQ9tB,IAAI,OAAO0e,MAAM,MAC3CZ,EAAO+P,WAAWC,QAAQ9tB,IAAI,MAAM0e,MAAM,IAAI,GAC9C,IAGJd,EAAS,cAAc,KAErBC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,MAE0C,IAGzDT,EAAG,iBAAiB,KAClBC,EAAO+P,WAAWC,QAAQzV,IAAI,EAAG,IAAIqG,MAAM,GAC3CZ,EAAO+P,WAAWC,QAAQzV,IAAI,GAAI,IAAIqG,OAAO,GAC7CZ,EAAO+P,WAAWC,QAAQzV,IAAI,IAAK,MAAMqG,MAAM,GAC/CZ,EAAO+P,WAAWC,QAAQzV,IAAI,IAAK,OAAOqG,OAAO,EAAE,GACnD,IAGJd,EAAS,mBAAmB,KAE1BC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,WAE0C,IAGzDT,EAAG,iBAAiB,KAClBC,EAAO+P,WAAWC,QAAQC,SAAS,EAAG,IAAIrP,OAAO,GACjDZ,EAAO+P,WAAWC,QAAQC,SAAS,GAAI,IAAIrP,MAAM,GACjDZ,EAAO+P,WAAWC,QAAQC,SAAS,IAAK,MAAMrP,OAAO,GACrDZ,EAAO+P,WAAWC,QAAQC,SAAS,IAAK,OAAOrP,MAAM,EAAE,GACvD,IAGJd,EAAS,iBAAiB,KAExBC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,SAE0C,IAGzDT,EAAG,iBAAiB,KAClBC,EAAO+P,WAAWC,QAAQE,OAAO,EAAG,IAAItP,MAAM,GAC9CZ,EAAO+P,WAAWC,QAAQE,OAAO,GAAI,IAAItP,OAAO,GAChDZ,EAAO+P,WAAWC,QAAQE,OAAO,GAAI,IAAItP,MAAM,GAC/CZ,EAAO+P,WAAWC,QAAQE,OAAO,KAAM,MAAMtP,MAAM,GACnDZ,EAAO+P,WAAWC,QAAQE,OAAO,KAAM,OAAOtP,OAAO,EAAE,GACvD,IAGJd,EAAS,eAAe,KAEtBC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,OAE0C,IAGzDT,EAAG,iBAAiB,KAClBC,EAAO+P,WAAWC,QAAQG,KAAK,EAAG,IAAIvP,MAAM,GAC5CZ,EAAO+P,WAAWC,QAAQG,KAAK,GAAI,IAAIvP,OAAO,GAC9CZ,EAAO+P,WAAWC,QAAQG,KAAK,GAAI,IAAIvP,MAAM,IAC7CZ,EAAO+P,WAAWC,QAAQG,KAAK,KAAM,MAAMvP,MAAM,IACjDZ,EAAO+P,WAAWC,QAAQG,KAAK,KAAM,OAAOvP,OAAO,IACnDZ,EAAO+P,WAAWC,QAAQG,KAAK,GAAK,IAAIvP,MAAM,IAC9CZ,EAAO+P,WAAWC,QAAQG,KAAK,IAAM,IAAIvP,MAAM,KAC/CZ,EAAO+P,WAAWC,QAAQG,KAAK,KAAO,IAAIvP,MAAM,EAAE,GAClD,IAGJd,EAAS,sBAAsB,KAE7BC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,cAE0C,IAGzDT,EAAG,iBAAiB,KAClBC,EAAO+P,WAAWC,QAAQI,YAAY,OAAOxP,MAAM,GACnDZ,EAAO+P,WAAWC,QAAQI,YAAY,QAAQxP,MAAM,IACpDZ,EAAO+P,WAAWC,QAAQI,YAAY,SAASxP,MAAM,EAAE,GACvD,IAGJd,EAAS,qBAAqB,KAE5BC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,aAE0C,IAGzDV,EAAS,iBAAiB,KACX/+B,OAAOomB,KAAKhe,OAAOjE,IAAIqD,MAC/BqM,SAAS4V,IACZuV,EAAG,OAAOvV,SAAW,IAAW/sB,OAAA,OAAA,OAAA,GAAA,YAC9BuiC,EAAO+P,WAAWC,QAAQK,WAAWlnC,OAAOjE,IAAIqD,KAAKiiB,KAAOoW,MAC1Dz3B,OAAOjE,IAAIoE,WAAWkhB,GAEzB,KAAC,GACF,GACF,IAGJsV,EAAS,kBAAkB,KAEzBC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,UAE0C,IAGzDT,EAAG,iBAAiB,KAClBC,EAAO+P,WAAWC,QAAQr4B,SAAQ,EAAM,GAAI,KAAKipB,MAAM,KACvDZ,EAAO+P,WAAWC,QAAQr4B,SAAQ,GAAO,GAAI,KAAKipB,MAAM,GACxDZ,EAAO+P,WAAWC,QAAQr4B,SAAQ,EAAM,EAAG,KAAKipB,MAAM,IACtDZ,EAAO+P,WAAWC,QAAQr4B,SAAQ,EAAM,GAAI,MAAMipB,MAAM,IACxDZ,EAAO+P,WAAWC,QAAQr4B,SAAQ,EAAM,IAAK,MAAMipB,MAAM,IACzDZ,EAAO+P,WAAWC,QAAQr4B,SAAQ,EAAO,GAAI,KAAKipB,MAAM,GACxDZ,EAAO+P,WAAWC,QAAQr4B,SAAQ,GAAQ,GAAI,KAAKipB,MAAM,KACzDZ,EAAO+P,WAAWC,QAAQr4B,SAAQ,EAAO,EAAG,KAAKipB,MAAM,IACvDZ,EAAO+P,WAAWC,QAAQr4B,SAAQ,EAAO,GAAI,MAAMipB,MAAM,IACzDZ,EAAO+P,WAAWC,QAAQr4B,SAAQ,EAAO,IAAK,MAAMipB,MAAM,GAAG,GAC7D,IAGJd,EAAS,gBAAgB,KAEvBC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,QAE0C,IAGzDT,EAAG,iBAAiB,KAClB,MAAMuQ,EAAQ,CACZC,GAAKrtC,GAAMA,GAEb88B,EAAO+P,WAAWC,QAAQQ,MAAM,EAAGF,IAAQ1P,MAAM,MACjDZ,EAAO+P,WAAWC,QAAQQ,MAAM,EAAGF,IAAQ1P,MAAM,QAAQ,GACzD,IAGJd,EAAS,eAAe,KAEtBC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,OAE0C,IAGzDT,EAAG,iBAAiB,KAClBC,EAAO+P,WAAWC,QAAQlF,KAAK,UAAUlK,MACvC,GAAGz3B,OAAOjE,IAAIC,oBACf,GACD,IAGJ26B,EAAS,gBAAgB,KAEvBC,EAAG,iBAAiB,KAClBC,EAAOj/B,OAAOomB,KAAK4oB,WAAWC,UAAUxP,QAF3B,QAE0C,IAGzDT,EAAG,iBAAiB,KAClBC,EAAO+P,WAAWC,QAAQS,MAAM,UAAU7P,MACxC,GAAGz3B,OAAOjE,IAAIK,kBACf,GACD,GACF,GACF,EC/KG,MAAMyU,GAAM,oBACN9Y,GAAU,CAAEy+B,YAAa,uBAGhCC,GAAkB,CAAOx+B,EAAc6I,EAAe,CAAE,IAAIxM,OAAA,OAAA,OAAA,GAAA,YAChE,OAAA+gC,GAAmBp9B,EAAM6I,EAAM+P,GAAI,IAG/B02B,GAAgB,IAAMrR,GAAmBrlB,IAE/C,IAAA22B,GAAe,EACb7Q,WACAC,KACAC,SACAC,SACA/H,QACAuM,gBAEAxE,GAAO,IAAWxiC,OAAA,OAAA,OAAA,GAAA,sBACM,QAAtBupB,EAAY,UAAR,OAAJ3hB,WAAA,IAAAA,UAAA,EAAAA,KAAMgpB,cAAM,IAAAnL,OAAA,EAAAA,EAAE0tB,cAAQ,IAAA5pB,GAAAA,EAAAlT,OAAO,CAAE88B,QAAQ,UACf,UAAlBxiC,GAAGC,qBAAe,IAAAgmB,OAAA,EAAAA,EAAAzkB,OACzB,MAED60B,GAAU,IAAWhnC,OAAA,OAAA,OAAA,GAAA,YACnByhC,KACAwR,KACApR,KACAE,IACD,MAEDtH,GAAM,IAAWz6B,OAAA,OAAA,OAAA,GAAA,kBACf6gC,KACAY,KACAwR,KACApR,KACAE,WACwB,QAAlB5K,EAAAxmB,GAAGC,qBAAe,IAAAumB,OAAA,EAAAA,EAAAhpB,QAAO,EAChC,MAEDk0B,EAAS,8BAA8B,KACrCC,EAAG,oBAAoB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBAChC,MAAMo9B,QAAc8D,KACpBqB,EAAkB,QAAX9c,EAAA7d,KAAK21B,cAAM,IAAA9X,OAAA,EAAAA,EAAE7I,SAASxI,MAAMopB,GAAMA,EAAE9gB,QAAS0gB,aAAK,EAALA,EAAO1gB,SAAOmmB,IAC/D7b,SACJ,MAEDsb,EAAG,4BAA4B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACxC,MAAMo9B,QAAc8D,KACd10B,EAAO,CAAE7I,KAAM,QAAS+Y,KAAM0gB,aAAK,EAALA,EAAO1gB,YAGrCsgB,GAAexwB,EAFH,GAGlB,MAAM4mC,EAAkB,QAAT7pB,EAAA3hB,KAAKoF,YAAI,IAAAuc,OAAA,EAAAA,EAAE8pB,gBAAgB,GAE1C9Q,EAAO6Q,EAAOE,GAAelW,OAAO+F,MAAM/F,EAC3C,MAEDkF,EAAG,8CAA8C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,0BAC1D,MAAM8P,QAAcqyB,GAAgB,aAC9B31B,EAAO,CAAE7I,KAAMmM,aAAK,EAALA,EAAOnM,KAAM+Y,KAAM5M,eAAAA,EAAO4M,MAE/C6lB,EAAyB,QAAlB3L,EAAAjmB,GAAGC,qBAAe,IAAAgmB,OAAA,EAAAA,EAAAqb,MAAMvhC,QAAQyyB,MAAM,SACvCnG,GAAexwB,EAFH,GAGlB+1B,EAAyB,QAAlBpL,EAAAxmB,GAAGC,qBAAe,IAAAumB,OAAA,EAAAA,EAAA8a,MAAMvhC,QAAQyyB,MAAM,GAC7CZ,EAAsC,QAA/BP,EAAgB,QAAhBF,EAAAnxB,GAAGC,qBAAa,IAAAkxB,OAAA,EAAAA,EAAEmQ,MAAMh0B,aAAO,IAAA+jB,OAAA,EAAAA,EAAA9R,SAASiT,MAC7Cv7B,KAAKwI,KAAKuB,SAAS,6BAErB4wB,EAAyB,QAAlBmG,EAAA/3B,GAAGC,qBAAe,IAAA83B,OAAA,EAAAA,EAAAuJ,MAAMvhC,QAAQyyB,MAAM,SACvCrzB,aAAK,EAALA,EAAO6xB,QACd,MAEDW,EAAG,mDAAmD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,0BAC/D,MAAM8P,QAAcqyB,GAAgB,aAC9BsL,QAAkBzM,GAAoB,UACtCx0B,EAAO,CAAE7I,KAAM,OAAQ+Y,KAAM+wB,aAAS,EAATA,EAAW/wB,MAE9C6lB,EAAyB,QAAlBoG,EAAAh4B,GAAGC,qBAAe,IAAA+3B,OAAA,EAAAA,EAAAsJ,MAAMvhC,QAAQyyB,MAAM,SACvCnG,GAAexwB,EAFH,GAGlB+1B,EAAyB,QAAlBqG,EAAAj4B,GAAGC,qBAAe,IAAAg4B,OAAA,EAAAA,EAAAqJ,MAAMvhC,QAAQyyB,MAAM,GAC7CZ,EAAsC,QAA/BuG,EAAgB,QAAhBD,EAAAl4B,GAAGC,qBAAa,IAAAi4B,OAAA,EAAAA,EAAEoJ,MAAMh0B,aAAO,IAAA6qB,OAAA,EAAAA,EAAA5Y,SAASiT,MAC7Cv7B,KAAKwI,KAAKuB,SAAS,qCAErB4wB,EAAyB,QAAlBwG,EAAAp4B,GAAGC,qBAAe,IAAAm4B,OAAA,EAAAA,EAAAkJ,MAAMvhC,QAAQyyB,MAAM,SACvCrzB,aAAK,EAALA,EAAO6xB,eACP8L,aAAS,EAATA,EAAW9L,QAClB,MAEDU,EAAS,0CAA0C,KAC/B,IAAInrB,IAAI,CACxB,QACA,UACA,QACA,SACA,OACA,cAEQC,SAASxT,IACjB2+B,EAAG,kBAAkB3+B,EAAKqb,wCAAwC,IAAWhf,OAAA,OAAA,OAAA,GAAA,oBAC3E,MAAM8P,QAAcqyB,GAAgB,mBAC9BlB,GAAoBnxB,EAAOnM,GACjC,MAAMmT,EAAOhH,aAAA,EAAAA,EAAO5N,MAAM0a,SAAS,GAC7BpQ,EAAO,CACX7I,KAAM,OACN+Y,KAAM5F,aAAA,EAAAA,EAAM4F,KACZ5F,KAAM,CACJlE,KAAMkE,aAAA,EAAAA,EAAMlE,KACZoD,IAAK,WAKHgnB,GAAexwB,EAFH,GAGlB,MAAM4wB,EAAmB,QAAX3X,EAAA7d,KAAKoF,YAAM,IAAAyY,OAAA,EAAAA,EAAA4tB,kBAAkBC,GAC3C/Q,EAAqB,UAAdnF,aAAA,EAAAA,EAAOA,aAAO,IAAA7T,OAAA,EAAAA,EAAA4T,SAASgG,MAC5B,0CAA0Cx/B,EAAKqb,yBAE3ClP,aAAK,EAALA,EAAO6xB,QACd,KAAC,GACF,GACF,IAGJU,EAAS,2BAA2B,KAClCC,EAAG,4BAA4B,IAAWtiC,OAAA,OAAA,OAAA,GAAA,4BACxC,MAAM2D,EAAO,SACPmM,QAAcqyB,GAAgB,mBAC9BlB,GAAoBnxB,EAAOnM,SAChB,UAAXiE,KAAKoF,YAAM,IAAAyY,OAAA,EAAAA,EAAApP,OAAO,CAAE4a,UAAWnhB,aAAA,EAAAA,EAAOjI,KAC5C06B,EAAOz0B,YAAY+G,aAAa+G,OAAO6nB,GAAG+F,KAC1CjH,EAAOz0B,YAAY+G,aAAa/E,OAAO2zB,GAAGZ,IAAI2G,KAC9CjH,EAAyB,QAAlBhZ,EAAA5Y,GAAGC,qBAAe,IAAA2Y,OAAA,EAAAA,EAAA0oB,MAAMvhC,QAAQyyB,MAAM,SACvCxF,GAAc,kBAAkBh6B,EAAKqb,gBAC3CujB,EAAyB,QAAlB3L,EAAAjmB,GAAGC,qBAAe,IAAAgmB,OAAA,EAAAA,EAAAqb,MAAMvhC,QAAQyyB,MAAM,GAC7CZ,EAAsC,QAA/BT,EAAgB,QAAhB3K,EAAAxmB,GAAGC,qBAAa,IAAAumB,OAAA,EAAAA,EAAE8a,MAAMh0B,aAAO,IAAA6jB,OAAA,EAAAA,EAAA5R,SAASiT,MAC7Cv7B,KAAKwI,KAAKuB,SAAS,uCAErB4wB,EAAyB,QAAlBP,EAAArxB,GAAGC,qBAAe,IAAAoxB,OAAA,EAAAA,EAAAiQ,MAAMvhC,QAAQyyB,MAAM,SACvCrzB,aAAK,EAALA,EAAO6xB,QACd,MAEDW,EAAG,qCAAqC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,4BACjD,MAAM2D,EAAO,SACPmM,QAAcqyB,GAAgB,aAC9BvmB,QAAcwlB,KACpBmB,EAAO3mB,eAAAA,EAAO0lB,aAAa6B,OAAM,SAC3BlC,GAAoBnxB,EAAOnM,SAChB,QAAX+kC,EAAA9gC,KAAKoF,YAAM,IAAA07B,OAAA,EAAAA,EAAAryB,OAAO,CAAE4a,UAAW,OACrCsR,EAAOz0B,YAAY+G,aAAa+G,OAAO6nB,GAAGZ,IAAI2G,KAC9CjH,EAAOz0B,YAAY+G,aAAa/E,OAAO2zB,GAAG+F,KAC1CjH,EAAyB,QAAlBoG,EAAAh4B,GAAGC,qBAAe,IAAA+3B,OAAA,EAAAA,EAAAsJ,MAAMvhC,QAAQyyB,MAAM,SACvCxF,GAAc,kBAAkBh6B,EAAKqb,gBAC3CujB,EAAyB,QAAlBqG,EAAAj4B,GAAGC,qBAAe,IAAAg4B,OAAA,EAAAA,EAAAqJ,MAAMvhC,QAAQyyB,MAAM,GAC7CZ,EAAsC,QAA/BuG,EAAgB,QAAhBD,EAAAl4B,GAAGC,qBAAa,IAAAi4B,OAAA,EAAAA,EAAEoJ,MAAMh0B,aAAO,IAAA6qB,OAAA,EAAAA,EAAA5Y,SAASiT,MAC7Cv7B,KAAKwI,KAAKuB,SAAS,uCAErB4wB,EAAyB,QAAlBwG,EAAAp4B,GAAGC,qBAAe,IAAAm4B,OAAA,EAAAA,EAAAkJ,MAAMvhC,QAAQyyB,MAAM,SACvCrzB,aAAK,EAALA,EAAO6xB,eACP/lB,aAAK,EAALA,EAAO+lB,QACd,MAEDW,EAAG,uCAAuC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,kBACnD,MAAM2D,EAAO,SACPmM,QAAcqyB,GAAgB,aAC9BvmB,QAAcwlB,KACpBmB,EAAO3mB,eAAAA,EAAO0lB,aAAa6B,OAAM,SAC3BlC,GAAoBnxB,EAAOnM,SAChB,UAAXiE,KAAKoF,YAAM,IAAAg8B,OAAA,EAAAA,EAAA3yB,OAAO,CAAE4a,UAAWnhB,aAAA,EAAAA,EAAOjI,KAC5C06B,EAAOz0B,YAAY+G,aAAa+G,OAAO6nB,GAAGZ,IAAI2G,KAC9CjH,EAAOz0B,YAAY+G,aAAa/E,OAAO2zB,GAAGZ,IAAI2G,WACxC7L,GAAc,kBAAkBh6B,EAAKqb,sBACrCwhB,KACN+B,EAAO3B,KAAclwB,QAAQyyB,MAAM,SAC7BtC,WACA/wB,aAAK,EAALA,EAAO6xB,eACP/lB,aAAK,EAALA,EAAO+lB,QACd,MAEDW,EAAG,yDAAyD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,4BACrE,MAAM2D,EAAO,SACPmM,QAAcqyB,GAAgB,aAC9BvmB,QAAcwlB,KACpBmB,EAAO3mB,eAAAA,EAAO0lB,aAAa6B,OAAM,SAC3BlC,GAAoBnxB,EAAOnM,SAC3Bs9B,GAAoBnxB,EAAOnM,SAChB,UAAXiE,KAAKoF,YAAM,IAAAi8B,OAAA,EAAAA,EAAA5yB,OAAO,CAAE4a,UAAWnhB,aAAA,EAAAA,EAAOjI,KAC5C06B,EAAyB,QAAlBkH,EAAA94B,GAAGC,qBAAe,IAAA64B,OAAA,EAAAA,EAAAwI,MAAMvhC,QAAQyyB,MAAM,SACvCxF,GAAc,kBAAkBh6B,EAAKqb,sBACrCwhB,KACN+B,EAAyB,QAAlBmH,EAAA/4B,GAAGC,qBAAe,IAAA84B,OAAA,EAAAA,EAAAuI,MAAMvhC,QAAQyyB,MAAM,GAC7CZ,EAAoC,QAA7BqH,EAAkB,QAAlBD,EAAAh5B,GAAGC,qBAAe,IAAA+4B,OAAA,EAAAA,EAAAsI,MAAMh0B,aAAK,IAAA2rB,OAAA,EAAAA,EAAE1Z,SAASiT,MAC7Cv7B,KAAKwI,KAAKC,OAAO,mCAAoC,CACnDmgB,UAAW1gB,aAAA,EAAAA,EAAO8C,KAClBgrB,SAAU,kBAAkBj6B,EAAKqb,kBAGrCujB,EAAyB,QAAlBsH,EAAAl5B,GAAGC,qBAAe,IAAAi5B,OAAA,EAAAA,EAAAoI,MAAMvhC,QAAQyyB,MAAM,SACvC3C,KACN+B,EAAO3B,KAAclwB,QAAQyyB,MAAM,SAC7BtC,WACA/wB,aAAK,EAALA,EAAO6xB,eACP/lB,aAAK,EAALA,EAAO+lB,QACd,MAEDW,EAAG,gCAAgC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,4BAC5C,MAAM2D,EAAO,SACPmM,QAAcqyB,GAAgB,aAC9BvmB,QAAcwlB,KACpBmB,EAAO3mB,eAAAA,EAAO0lB,aAAa6B,OAAM,SAC3BlC,GAAoBnxB,EAAOnM,SAChB,UAAXiE,KAAKoF,YAAM,IAAA88B,OAAA,EAAAA,EAAAzzB,OAAO,CAAE4a,UAAWnhB,aAAA,EAAAA,EAAOjI,WAGxC,UAFEiI,aAAA,EAAAA,EAAO5N,MACVs/B,QAAQ,kBAAkB79B,EAAKqb,uBAC9B,IAAA+qB,OAAA,EAAAA,EAAApI,SACJY,EAAyB,QAAlByH,EAAAr5B,GAAGC,qBAAe,IAAAo5B,OAAA,EAAAA,EAAAiI,MAAMvhC,QAAQyyB,MAAM,SACvCxF,GAAc,kBAAkBh6B,EAAKqb,sBACrCwhB,KACN+B,EAAyB,QAAlBgR,EAAA5iC,GAAGC,qBAAe,IAAA2iC,OAAA,EAAAA,EAAAtB,MAAMvhC,QAAQyyB,MAAM,GAC7C,MAAMtyB,EAAwB,QAAhB2iC,EAAA7iC,GAAGC,qBAAa,IAAA4iC,OAAA,EAAAA,EAAEvB,MAAMh0B,MACtCskB,EAAyB,QAAlBkR,EAAA9iC,GAAGC,qBAAe,IAAA6iC,OAAA,EAAAA,EAAAxB,MAAMvhC,QAAQyyB,MAAM,GAC7CZ,EAAO1xB,eAAAA,EAAOlN,MAAMw/B,MAAM,SAC1BZ,EAAO1xB,aAAA,EAAAA,EAAOqf,SAASiT,MACrBv7B,KAAKwI,KAAKC,OAAO,2BAA4B,CAC3CmgB,UAAW1gB,aAAA,EAAAA,EAAO8C,KAClBgrB,SAAU,kBAAkBj6B,EAAKqb,wBAG/BlP,aAAK,EAALA,EAAO6xB,eACP/lB,aAAK,EAALA,EAAO+lB,QACd,KAAC,GACF,EC3OG,MAAMplB,GAAM,oBACN9Y,GAAU,CACrBy+B,YAAa,uBAITC,GAAkB,CAAOx+B,EAAc6I,EAAe,CAAE,IAAIxM,OAAA,OAAA,OAAA,GAAA,YAChE,OAAA+gC,GAAmBp9B,EAAM6I,EAAM+P,GAAI,IAKrC,IAAem3B,GAAA,EAAGrR,WAAUC,KAAIC,SAAQ9H,YACtCA,GAAM,KAHoBmH,GAAmBrlB,GAI5B,IAIjB8lB,EAAS,4BAA4B,SAErCA,EAAS,iBAAiB,KACxBC,EAAG,iDAAiD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAC7D,MAAM8P,QAAcqyB,GAAgB,aACpC9rB,GAAOvG,GACPyyB,EAAO3B,KAAclwB,QAAQyyB,MAAM,SAC7BrzB,aAAK,EAALA,EAAO6xB,QACd,MAEDW,EAAG,oCAAoC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBAChD,MAAM8P,QAAcqyB,GAAgB,aACpCryB,SAAAA,EAAOyrB,QAAQ3zB,KAAK1D,OAAO2D,GAAI,SAAS,GACxCwO,GAAOvG,SACD0wB,mBACA/a,EAAAyZ,cAAA,EAAAA,GAAeD,iCAAY9wB,QAAO,SAClCqyB,KACN,MAAMmT,EACmC,QADrBpqB,EAAA5F,SACjB7R,cAAc,gCAAwB,IAAAyX,OAAA,EAAAA,EACrCqqB,aAAa,iBACjBrR,EAAOoR,GAAaxQ,MAAMrzB,aAAA,EAAAA,EAAOjI,IACjC06B,EAAO3B,KAAclwB,QAAQyyB,MAAM,SAC7BtC,KACN/wB,SAAAA,EAAO6xB,SACPY,EAAO3B,KAAclwB,QAAQyyB,MAAM,EACpC,KAAC,GACF,ECnDJ,MAAMhH,aAAEA,GAAYU,aAAEA,IAAiBE,GAE1BxgB,GAAM,uBACN9Y,GAAU,CACrBy+B,YAAa,0BAGT2R,GAAkB,IAAW7zC,OAAA,OAAA,OAAA,GAAA,YACjC,OAAAkuC,UAAUv/B,OAAO,CACfiE,KAAM,cAAc2J,UAGlBu3B,GAA0B,IAAW9zC,OAAA,OAAA,OAAA,GAAA,YACzC,MAAMsP,QAA0BukC,KAGhC,aAFMvkC,EAAM+G,OAAO,CAAEzD,KAAM,uBAAuB2J,aAC5CjN,EAAMisB,QAAQ3zB,KAAK1D,OAAO2D,GAAI,YAAY,GACzCyH,CACT,IAUA,IAAeykC,GAAA,EAAG1R,WAAUC,KAAIC,SAAQ9H,YAEtC4H,EAAS,6BAA6B,SAEtCA,EAAS,6BAA6B,KACpCC,EAAG,oBAAoB,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YAChC,MAAMsP,QAAcwkC,WACdxkC,EAAM4G,wBAAwB,cAAe,CACjD,CACE7B,KAAM,aACNoZ,MAAO,CAAC,EAAG,GACXppB,OAAQ,MAGZk+B,EAAOjzB,EAAMD,QAAQikB,MAAM6P,MAAM,SAC3B7zB,EAAMqyB,QACb,MAEDW,EAAG,4CAA4C,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACxD,MAAMsP,QAAcwkC,WACdxkC,EAAM4G,wBAAwB,cAAe,CACjD,CACE7B,KAAM,cACNoZ,MAAO,CAAC,EAAG,GACXppB,OAAQ,OAGZ,MAAMmI,QAAa2vB,GAAa7sB,EAAO,CAAE,SACnCkxB,KACN+B,EAAO/1B,EAAKrI,UAAUs/B,GAAGZ,IAAI7b,UAC7B,MAAMgtB,EAAY1wC,OAAOomB,KAAKld,EAAKrI,UAAU,GAC7Co+B,EAAO/1B,EAAKrI,SAAS6vC,GAAW3/B,MAAM8uB,MAAM,cAC7C,MAgBDb,EAAG,wCAAwC,IAAWtiC,OAAA,OAAA,OAAA,GAAA,YACpD,MAAMsP,QAAcukC,KACpBvkC,SAAAA,EAAO+G,OAAO,CAAEjF,QAAS,gBACnB9B,aAAK,EAALA,EAAO4G,wBAAwB,cAAe,CAClD,CACE7B,KAAM,cACNoZ,MAAO,CAAC,EAAG,QAGf,MAAMjhB,QAAa2vB,GAAa7sB,EAAO,CAAE,SACnCkxB,KACN+B,EAAO/1B,EAAKrI,UAAUs/B,GAAGZ,IAAI7b,UAC7B,MAAMgtB,EAAY1wC,OAAOomB,KAAKld,EAAKrI,UAAU,GAC7Co+B,EAAO/1B,EAAKrI,SAAS6vC,GAAW3/B,MAAM8uB,MAAM,cAC7C,KAAC,IAGJd,EAAS,gCAAgC,KACvCC,EAAG,qDAAqD,IAAWtiC,OAAA,OAAA,OAAA,GAAA,oBACjEogC,KACA,MAAM9wB,QAAcwkC,WACdxkC,EAAM4G,wBAAwB,cAAe,CACjD,CACE7B,KAAM,cACNoZ,MAAO,CAAC,EAAG,GACXppB,OAAQ,aAGNw4B,GAAavtB,SACbkxB,KACN+B,EAAoB,QAAb9c,EAAA7d,KAAKuoB,gBAAQ,IAAA1K,OAAA,EAAAA,EAAE6N,MAAM6P,MAAM,GAClCZ,UAAOhZ,EAAA3hB,KAAKuoB,+BAAUvT,SAAS,GAAGrO,SAAS+M,SAAS,cACrD,KAAC,IAGJmf,GAAM,KA3FyBz6B,OAAA,OAAA,OAAA,GAAA,kBAC/B,MAAM28B,EAAsB,QAAblX,EAAA7d,KAAK+0B,cAAQ,IAAAlX,OAAA,EAAAA,EAAAjV,QACzBoY,GACCA,EAAEhW,OAAS,cAAc2J,MAASqM,EAAEhW,OAAS,uBAAuB2J,OAExEogB,SAAAA,EAAQxlB,SAASyR,GAAMA,EAAE+Y,UAC3B,IAuFIvB,IAAW,GACX,EC8BJ6T,MAAM9mB,GAAG,eAAsB+mB,GAAkBl0C,OAAA,OAAA,OAAA,GAAA,YAI/Ck0C,EAAOC,cACLC,GACAhS,GACAiS,IAEFH,EAAOC,c/B1JU,mC+B4JfxQ,GACA2Q,IAEFJ,EAAOC,c9B1JU,4C8B4Jf9P,GACAkQ,IAEFL,EAAOC,c7BhKU,qC6BkKflP,GACAuP,IAEFN,EAAOC,c5BzKU,uC4B2Kf7O,GACAmP,IAEFP,EAAOC,c3B9KU,uC2BgLfzN,GACAgO,IAEFR,EAAOC,cACLQ,GACA5N,GACA6N,IAGFV,EAAOC,cAAcU,GAAgBvN,GAAkBwN,IAEvDZ,EAAOC,cAAcY,GAAe7K,GAAiB8K,IACrDd,EAAOC,cACLc,GACAtI,GACAuI,IAEFhB,EAAOC,cACLgB,GACAvH,GACAwH,IAEFlB,EAAOC,cACLkB,GACAvH,GACAwH,IAOFpB,EAAOC,cACLoB,GACA/G,GACAgH,IAEFtB,EAAOC,cACLsB,GACA/G,GACAgH,IAOFxB,EAAOC,clB9NU,6BkBgOfvF,GACA+G,IAEFzB,EAAOC,cjBnOU,2BiBqOftF,GACA+G,IAEF1B,EAAOC,chBxOU,+BgB0OfpF,GACA8G,IAEF3B,EAAOC,cf7OU,0Be+OfnF,GACA8G,IAEF5B,EAAOC,cdlPU,2BcoPfjF,GACA6G,IAEF7B,EAAOC,cbvPU,4BayPfhF,GACA6G,IAGF9B,EAAOC,cZnPU,kBYmPmB/E,GAAiB6G,IAErD/B,EAAOC,cX/PU,iBW+PkBlE,GAAgBiG,IAMnDhC,EAAOC,cAAcgC,GAAgBjG,GAAkBkG,IACvDlC,EAAOC,cAAckC,GAAehG,GAAiBiG,IACrDpC,EAAOC,cRtQU,qBQsQqBrD,GAAmByF,IAMzDrC,EAAOC,cP7QU,wBO+QfnD,GACAwF,IAEFtC,EAAOC,cN5QU,mBM4QoB/C,GAAkBqF,IACvDvC,EAAOC,cLlRU,mBKkRoB5C,GAAkBmF,IACvDxC,EAAOC,cJrRU,yBIuRf9B,GACAsE,IAEFzC,EAAOC,cACLyC,GACA1D,GACA2D,IAEF3C,EAAOC,cAAc2C,GAAiBpD,GAAmBqD,IACzD7C,EAAOC,cACL6C,GACAjD,GACAkD,GAEJ,MCrS4B,mBAAfx0C,KAAKC,QAEdD,KAAKC,MAAQD,KAAKy0C,SCkCtBjD,MAAMkD,KAAK,QAAQ7qC,UAMjBZ,OAAO0rC,OAAOl/B,WAAa,CACzB9G,QAAS,cACTimC,SAAU,GAGZ3rC,OAAOjE,IAAMA,EAEbG,KAAK8rB,IAAM,CACTiK,cAAe2Z,GACfzZ,eAAgB0Z,GAChBC,UAAWlgB,IAIb4H,GAAcxc,OCzDmB1iB,OAAA,OAAA,OAAA,GAAA,YAEjCsyC,WAAWmF,eAAe,MAAM,CAAC70B,EAAG1W,IAAM0W,IAAM1W,IAEhDomC,WAAWmF,eAAe,OAAQpiC,GAC5BA,EAAM,EACD,IAAIA,IAETA,EAAM,EACD,GAAGA,IAEL,MAGTi9B,WAAWmF,eACT,OACA,CAACC,EAAIC,IAAO79B,SAAS49B,EAAI,IAAM59B,SAAS69B,EAAI,MAG9CrF,WAAWmF,eACT,YACA,CAACC,EAAIC,IAAO79B,SAAS49B,EAAI,IAAM59B,SAAS69B,EAAI,MAG9CrF,WAAWmF,eAAe,UAAU,CAACC,EAAIC,IACvCl1C,KAAK2vB,MAAMre,WAAW2jC,GAAM3jC,WAAW4jC,MAGzCrF,WAAWmF,eACT,QACA,CAACC,EAAIC,IAAOl1C,KAAK6R,MAAM,IAAMP,WAAW2jC,GAAM3jC,WAAW4jC,IAAO,MAGlErF,WAAWmF,eACT,eACCpzC,GAAW5B,KAAK6R,MAAMP,WAAW1P,GAAU,KAAO,KAGrDiuC,WAAWmF,eAAe,cAAeG,IACvC,MAAMC,EAAUv0C,OAAOomB,KAAKhe,OAAOjE,IAAIqD,MAEpCsJ,MAAM0jC,GAAgBpsC,OAAOjE,IAAIqD,KAAKgtC,KAAiBF,IAE1D,OAAOC,EAASnsC,OAAOjE,IAAIoE,WAAWgsC,GAAU,IAAI,IAGtDvF,WAAWmF,eAAe,WAAW,CAACM,EAAQt3C,EAAOuB,IACnD+1C,EACIt1C,KAAKC,MAAO,IAAMjC,EAASuB,EAAK,EAAG,KACnCS,KAAKC,MAAM,IAAO,IAAMjC,EAASuB,EAAK,EAAG,OAG/CswC,WAAWmF,eAAe,SAAS,CAAC5jC,EAAGg/B,KACrC,IAAImF,EAAQ,GAEZ,IAAK,IAAIvyC,EAAI,EAAGA,EAAIoO,IAAKpO,EAAGuyC,GAASnF,EAAMC,GAAGrtC,GAC9C,OAAOuyC,CAAK,IAGd1F,WAAWmF,eACT,QACCQ,GAAiB,GAAGxwC,EAAIC,eAAeuwC,MAG1C3F,WAAWmF,eACT,SACCQ,GAAiB,GAAGxwC,EAAIK,aAAamwC,MAGxC3F,WAAWmF,eAAe,QAASpiC,GAAQ5S,KAAKgE,KAAK4O,IACvD,IDLE4+B,MAAMxyC,KAAK,yBE3DXmG,KAAKI,SAASkwC,SAAStwC,KAAK1D,OAAO2D,GAAI,aAAc,CACnD+K,KAAMhL,KAAKwI,KAAKuB,SAAS,0BACzBwmC,KAAMvwC,KAAKwI,KAAKuB,SAAS,8BACzBO,QAAS,QACTkmC,MAAO,QACPz0C,KAAMooC,OACN7+B,QAAQ,EACRuR,QAAS,CACP45B,WAAY,mCACZlgB,MAAO,iCAIXvwB,KAAKI,SAASkwC,SAAStwC,KAAK1D,OAAO2D,GAAI,mBAAoB,CACzD+K,KAAMhL,KAAKwI,KAAKuB,SAAS,gCACzBwmC,KAAMvwC,KAAKwI,KAAKuB,SAAS,oCACzBO,QAAS,QACTkmC,MAAO,QACPz0C,KAAMooC,OACN7+B,QAAQ,EACRuR,QAAS,CACP65B,KAAM,6BACNC,MAAO,8BACP/f,OAAQ,kCAIZ5wB,KAAKI,SAASkwC,SAAStwC,KAAK1D,OAAO2D,GAAI,cAAe,CACpD+K,KAAMhL,KAAKwI,KAAKuB,SAAS,2BACzBwmC,KAAMvwC,KAAKwI,KAAKuB,SAAS,+BACzBO,SAAS,EACTkmC,MAAO,QACPz0C,KAAM60C,QACNtrC,QAAQ,IAGVtF,KAAKI,SAASkwC,SAAStwC,KAAK1D,OAAO2D,GAAI,SAAU,CAC/C+K,KAAMhL,KAAKwI,KAAKuB,SAAS,sBACzBwmC,KAAMvwC,KAAKwI,KAAKuB,SAAS,0BACzBO,SAAS,EACTkmC,MAAO,QACPz0C,KAAM60C,QACNtrC,QAAQ,IAGVtF,KAAKI,SAASkwC,SAAStwC,KAAK1D,OAAO2D,GAAI,oBAAqB,CAC1D+K,KAAMhL,KAAKwI,KAAKuB,SAAS,2BACzBwmC,KAAMvwC,KAAKwI,KAAKuB,SAAS,+BACzBO,QAAS,WACTkmC,MAAO,QACPz0C,KAAMooC,OACN7+B,QAAQ,EACRuR,QAASnb,OAAO8B,OAAOsG,OAAOjE,IAAIQ,oBACjCjE,QAAO,CAACy0C,EAAKnU,IACDhhC,OAAAwmB,OAAAxmB,OAAAwmB,OAAA,CAAA,EAAA2uB,GAAK,CAAA,CAACnU,EAAI3gC,MAAO2gC,EAAIoU,kBAC/B,MAGL9wC,KAAKI,SAASkwC,SAAStwC,KAAK1D,OAAO2D,GAAI,sBAAuB,CAC5D+K,KAAMhL,KAAKwI,KAAKuB,SAAS,mCACzBwmC,KAAMvwC,KAAKwI,KAAKuB,SAAS,uCACzBO,QAAS,IACTkmC,MAAO,QACPz0C,KAAMymB,OACNld,QAAQ,IAGVtF,KAAKI,SAASkwC,SAAStwC,KAAK1D,OAAO2D,GAAI,YAAa,CAClD+K,KAAMhL,KAAKwI,KAAKuB,SAAS,yBACzBwmC,KAAMvwC,KAAKwI,KAAKuB,SAAS,6BACzBO,QAAS,GACTkmC,MAAO,QACPz0C,KAAMooC,OACN7+B,QAAQ,IAEVtF,KAAKI,SAASkwC,SAAStwC,KAAK1D,OAAO2D,GAAI,oBAAqB,CAC1D+K,KAAMhL,KAAKwI,KAAKuB,SAAS,iCACzBwmC,KAAMvwC,KAAKwI,KAAKuB,SAAS,qCACzBO,QAAS,WACTkmC,MAAO,QACPz0C,KAAMooC,OACN7+B,QAAQ,EACRuR,QAAU,CACRvU,SAAWtC,KAAKwI,KAAKuB,SAAS,8BAC9BxH,SAAWvC,KAAKwI,KAAKuB,SAAS,4BAC9BvH,eAAiBxC,KAAKwI,KAAKuB,SAAS,uCAGxC/J,KAAKI,SAASkwC,SAAStwC,KAAK1D,OAAO2D,GAAI,uBAAwB,CAC7D+K,KAAMhL,KAAKwI,KAAKuB,SAAS,oCACzBwmC,KAAMvwC,KAAKwI,KAAKuB,SAAS,wCACzBO,SAAS,EACTkmC,MAAO,QACPz0C,KAAM60C,QACNtrC,QAAQ,ICnGV+mC,MAAMkD,KAAK,oBAAoB7qC,UAE7B1E,KAAK+wC,UAAUC,IAAIC,qBAAqB,CAEtCC,QAAW,QAGXC,iBAAoB,YAGpBC,wBAA2B,wBAG3BC,qBAAwB,cAGxBC,aAAgB,CACd,CACE7L,KAAQ,OACR8L,QAAW,kBAIfC,uBAA0B,CAAC,SAAU,QAAS,aAG9CC,kBAAqB,CAAC,OAAQ,OAAQ,mBAKtCC,WAAc,CACZ,CACE31C,KAAM,OACNiP,KAAM,oBACNoD,IAAK,8BACLujC,aAAc,QACd/sC,KAAM,CACJsK,KAAM,CACJlE,KAAQ,aACRjP,KAAQ,OACRqS,IAAO,8BACP9R,OAAU,CACRE,SAAY,CAAE3D,MAAS,EAAGuB,IAAO,MACjCqC,OAAU,GACV4R,KAAQ,EACR9R,UAAY,KAIlBq1C,SAAS,EACTC,aAAc,KAGlB,IHkBJ/tC,OAAO6lB,MAAM8O,cAAgB/O,GAC7B5lB,OAAOwR,KAAKmjB,cAAgB3T,GAE5BhhB,OAAO6lB,MAAMmoB,iBAAmB,CAC9BzoB,UAAWrG,GACX+uB,QAASvtB,IAEX1gB,OAAOwR,KAAKw8B,iBAAmB,CAC7B7sB,OAAQiJ,GACR/rB,MAAOmrB,GACPpe,KAAM2e,GACN5rB,MAAOgsB,GACPjJ,QAASmI,GACTrX,UAAW6X,IAIbqkB,OAAOC,gBAAgB,OAAQhiC,YAC/B+hC,OAAOE,cAAclyC,KAAK1D,OAAO2D,GAAIuZ,EAAwB,CAC3D1C,MAAO,CAAC,aACRq7B,aAAa,EACbtuC,MAAO,4BAETmuC,OAAOE,cAAclyC,KAAK1D,OAAO2D,GAAIgsB,GAAsB,CACzDnV,MAAO,CAAC,WACRq7B,aAAa,EACbtuC,MAAO,0BAGTuuC,MAAMH,gBAAgB,OAAQzjB,WAC9B4jB,MAAMF,cAAclyC,KAAK1D,OAAO2D,GAAIsuB,GAAc,CAChD4jB,aAAa,EACbtuC,MAAO,6BIzGmCzL,OAAA,OAAA,OAAA,GAAA,YAC5C,MAAMi6C,EAAgB,CAEpB,GAAGxyC,EAAIC,qDACP,GAAGD,EAAIC,mDAEP,GAAGD,EAAIC,+DACP,GAAGD,EAAIC,uEACP,GAAGD,EAAIC,sEACP,GAAGD,EAAIC,mEACP,GAAGD,EAAIC,sEACP,GAAGD,EAAIC,iEACP,GAAGD,EAAIC,kEACP,GAAGD,EAAIC,6DACP,GAAGD,EAAIC,qEAEP,GAAGD,EAAIC,qEAEP,GAAGD,EAAIC,gDAGT,OAAOwyC,cAAcD,EACvB,GJsFmB,IAMnBhG,MAAMkD,KAAK,SAAS,KAElB,CAAC,cAAe,aAAc,SAAU,QAAS,SAAU,QAAQhgC,SAChEuC,IACChO,OAAOjE,IAAIiS,GAAKpW,OAAOk2B,QAAQ9tB,OAAOjE,IAAIiS,IAAI1V,QAAO,CAACy0C,EAAK73C,KACzD,MAAMu5C,EAAY,IAAK1B,GAEvB,OADA0B,EAAUv5C,EAAE,IAAMgH,KAAKwI,KAAKuB,SAAS/Q,EAAE,IAChCu5C,CAAS,GACf,CAAE,EAAC,IAKV,MAAMtvC,EAAYjD,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,aACpD,GAAkB,KAAdgD,EAAkB,CACpB,MAAMuvC,EAAYvvC,EAAUoU,MAAM,KAAKhL,KAAK9H,GAAMA,EAAEgjB,SACpDzjB,OAAOjE,IAAIoD,UAAYuvC,CACxB,KAGHnG,MAAMkD,KAAK,SAAS7qC,UAClB2nC,MAAM9mB,GAAG,cAAc,CAACktB,EAAK7tC,EAAMywB,KACjCqd,GAAsB9tC,EAAMywB,IAErB,IACP,IAIJgX,MAAM9mB,GAAG,oBAAoB7gB,MAAOqG,EAAQd,KAI1C,GAHIc,aAAkB4nC,gBpChJE,EAAC5nC,EAAQd,KACjC,MAAM2oC,EAAU,wDAAwD5yC,KAAKwI,KAAKuB,SAChF,kEAEFE,EAAKuC,KAAK,kBAAkBqmC,YAAY/mC,EAAE8mC,IAC1C3oC,EAAKuC,KAAK,oBAAoBY,OAAOxB,IACnCA,EAAG4C,iBACH69B,MAAMxyC,KAAK,sBAAsB,GACjC,EoCyIAi5C,CAAiB/nC,EAAQd,GAEvBc,aAAkBgoC,SAAU,CAC9B,MAAMC,EAAa/oC,EAAKuC,KAAK,iBAEjBwmC,EAAWxmC,KAAK,MAAMqiB,OAC9B7S,OACF,4FAIF,MAAM9W,EAAW,GAAGrF,EAAIC,2CAClBmzC,QAAiBvsC,eAAexB,GACtC8tC,EAAWxmC,KAAK,WAAWwP,OAAOi3B,GAGlC,MAAMC,EAAOjpC,EAAKuC,KAAK,8BACjB2mC,EACJ,uEACFrnC,EACE,2DAA2DjM,EAAIK,wDAAwDizC,iCACvHC,YAAYF,GACdjpC,EAAKuC,KAAK,mCAAmCY,OAAM,KACjD,IAAIimC,YAAY,uBAAwB,CACtC37B,WAAW,IACVnR,QAAO,EAAK,GAElB,KAGH8lC,MAAM9mB,GAAG,sBAAsB,CAAC4K,EAAQvrB,EAAM/I,EAASoE,KAExC,UADAD,KAAKI,SAAStG,IAAIkG,KAAK1D,OAAO2D,GAAI,eAE7CyvB,GAAUmE,aAAa1D,EAAQvrB,EAAM/I,EAASoE,EAC/C,IAGHosC,MAAM9mB,GAAG,kBAAmBmK,GAAUG,SAASH,GAAU4D,iBAAkB,KAC3E+Y,MAAM9mB,GAAG,sBAAuBmK,GAAUG,SAASH,GAAUjnB,OAAQ,MACrE4jC,MAAM9mB,GAAG,kBAAmBmK,GAAU4jB,iBACtCjH,MAAM9mB,GACJ,+BACAmK,GAAUG,SAASH,GAAUwE,gBAAiB,MAGhDmY,MAAM9mB,GAAG,iBAAiB,CAACguB,EAAKtpC,IAAS6a,GAAQ0uB,cAAcvpC,KAC/DoiC,MAAM9mB,GAAG,0B3C/HmC,CAC1CnT,EACAvW,KAEAA,EAAQ2J,KACN,CACEwF,KAAMhL,KAAKwI,KAAKuB,SAAS,4BACzB/F,KAAM,oCACNyvC,UAAWrkB,GACXplB,SAAW2G,GAAOie,GAAoBje,EAAI,IAE5C,CACE3F,KAAMhL,KAAKwI,KAAKuB,SAAS,6BACzB/F,KAAM,mCACNyvC,UAAWrkB,GACXplB,SAAW2G,GAAOie,GAAoBje,GAAK,KAGxC9U,K2C8GTwwC,MAAM9mB,GAAG,qB3CzG4B,CAACmuB,EAAkBzpC,WAEtD,MAAM0pC,EAAY1pC,EAAKuC,KAAK,eAG1BknC,aAAA,EAAAA,EAAKrtC,UACK,QAATwX,EAAA7d,KAAKoF,YAAI,IAAAyY,OAAA,EAAAA,EAAE7X,OACZ2tC,IAC4B,IAA5BA,EAAU/uC,KAAK,UAEf+uC,EAAUd,YACR,mGAIJ,MAAMptC,EAAOwE,EAAKuC,KAAK,gBACnB/G,EAAKqD,OAAS,GAAKumB,GAAeplB,KACpCxE,EAAKuW,OACHlQ,EACE,yHAGJrG,EAAK+G,KAAK,sCAAsC+Y,GAAG,SAAU3Z,IAC3DA,EAAG4C,iBACHogB,GAAoB3kB,EAAM,EAAE,IAE/B,I2CgFHoiC,MAAM9mB,GAAG,yBzChMmB,CAAC7d,EAAOuC,KAElC,MAAM2pC,EAAkBhD,QACtBlpC,EAAMqD,OAAOylB,QAAQxwB,KAAK1D,OAAO2D,GAAI,aAGjC4zC,EAAsB/nC,EAC1B,qEAEF+nC,EAAoBC,YAAY,SAAUF,GAa1C,GAXa3pC,EAAKuC,KAAK,iBAClBwP,OAAO63B,GAEZ5pC,EAAKuC,KAAK,oBAAoBY,OAAOxB,IACnC,MAAMmoC,EAAanD,QACjBlpC,EAAMqD,OAAOylB,QAAQxwB,KAAK1D,OAAO2D,GAAI,aAEvCyH,EAAMqD,OAAO4oB,QAAQ3zB,KAAK1D,OAAO2D,GAAI,YAAa8zC,EAAW,KAI1DH,EACH,OAIF3pC,EAAKuC,KAAK,iBAAiBwnC,OAC3B/pC,EAAKuC,KAAK,sBAAsBwmB,SAEX/oB,EAAKuC,KAAK,gCAClBC,KAAK,cAEGxC,EAAKuC,KAAK,kBAClBsE,IAAI,OAAQ,YAEzB,MAAMtH,EAAUS,EAAKuC,KAAK,uBAC1BhD,EAAQyqC,KAAK,QAAS,SACtBzqC,EAAQyqC,KAAK,YAAY,GAGzB,MAAMxuC,EAAO,0EAA0EzF,KAAKwI,KAAKuB,SAC/F,sCAEFE,EAAKuC,KAAK,uBAAuBqmC,YAAYptC,GAE7CwE,EAAKuC,KAAK,kBAAkBY,OAAOxB,IACjCqpB,GAAavtB,EAAMqD,OAAQ,CAAEiC,MAAOpB,GAAK,GACzC,IyCiJJygC,MAAM9mB,GAAG,cAAe2uB,IAExB7H,MAAM9mB,GAAG,oBKpMuB7gB,MAAOqG,EAAQd,EAAM9F,KACnD,GAA6B,SAAzB4G,EAAOopC,SAASp4C,KAClB,OAGF,MAAMwK,EAAS0D,EAAK,GAAGmqC,iBAAiB,SAClClB,QAAa/uC,EAAE0wB,WAAWwf,eAEhC9tC,EAAOgJ,SAAQ7K,MAAOwK,EAAMrR,KAC1B,MAAMoC,EAAKsG,EAAO1I,GAAG0P,QAAQ+mC,WAEvB3hC,EAAUugC,EAAK1mC,MAAM+nC,GAAQA,EAAIt0C,KAAOA,IACxCu0C,EAAc1oC,EAAE2oC,gBACd/tC,eACJ,GAAG7G,EAAIC,qEACP,CAAEoD,KAAMyP,EAAQrW,OAAO6pB,YAI3Bra,EAAEoD,GAAM8M,OAAOw4B,EAAY,GAC3B,ILiLJnI,MAAM9mB,GAAG,0BK9KsB7gB,MAAOqG,EAAQd,KAC5C,GAAkB,UAAdc,EAAO9K,GACT,OAGF,MAAMsG,EAAS0D,EAAK,GAAGmqC,iBAAiB,SAClCztC,EAAUoE,EAAO64B,UAEvBr9B,EAAOgJ,SAAQ7K,MAAOwK,IACpB,MAAMwlC,EAAkB/tC,EAAQ6F,MAC7BxT,GAAMA,EAAEiH,KAAOiP,EAAK3B,QAAQ+mC,aAGzBE,EAAc1oC,EAAE2oC,gBACd/tC,eACJ,GAAG7G,EAAIC,qEACP,CAAEoD,KAAMwxC,EAAgBp4C,OAAO6pB,UAAY,MAG/Cra,EAAEoD,GAAM8M,OAAOw4B,EAAY,GAC3B,IL4JJnI,MAAM9mB,GAAG,sBAAuB+R,GAAcoR"}